[
  {
    "id": 5903343,
    "slug": "nuc6i7kyk-hackintosh-macos-catalina",
    "title": "骷髅峡谷（nuc6i7kyk）安装黑苹果（macOS Catalina 10.15.4）",
    "book_id": 653495,
    "book": {
      "id": 653495,
      "type": "Column",
      "slug": "blog",
      "name": "blog",
      "user_id": 236311,
      "description": "",
      "creator_id": 236311,
      "public": 0,
      "items_count": 7,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-04-19T05:12:25.815Z",
      "updated_at": "2020-04-19T05:12:25.000Z",
      "created_at": "2019-12-24T14:26:42.000Z",
      "namespace": "xcodebuild/blog",
      "user": {
        "id": 236311,
        "type": "User",
        "login": "xcodebuild",
        "name": "xcodebuIld",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/236311/1546508350871-89a1db68-50d3-4776-9b7b-97ba81a8dfbe.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 0,
        "created_at": "2019-01-03T03:16:21.000Z",
        "updated_at": "2020-03-23T08:18:51.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 236311,
    "creator": {
      "id": 236311,
      "type": "User",
      "login": "xcodebuild",
      "name": "xcodebuIld",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/236311/1546508350871-89a1db68-50d3-4776-9b7b-97ba81a8dfbe.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 0,
      "created_at": "2019-01-03T03:16:21.000Z",
      "updated_at": "2020-03-23T08:18:51.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "手头上有个骷髅峡谷一代的盒子（ `nuc6i7kyk` ），之前一直用的是 `Windows 10` ，然而由于工作用的是 Macbook Pro，环境切来切去的总是不适应。上网查了一下 `nuc6i7kyk` 的硬件用来黑苹果是比较合适的，于是花了点时间装了下黑苹果，总共大概花了四五个小时的时间（不过还有一些小瑕疵，也不纠结了）。<br />\n<br />系统的版本为 `macOS Catalina 10.15.4` ，引导程序选的是 `OpenCore` 。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1586185011143-7e282c51-7177-424e-a425-382d84b2ade1.png#align=left&display=inline&height=338&margin=%5Bobject%20Object%5D&name=image.png&originHeight=676&originWidth=1560&size=377314&status=done&style=none&width=780)<br />开箱即用的 `EFI` 见：[https://github.com/xcodebuild/nuc6i7kyk-macos-efi](https://github.com/xcodebuild/nuc6i7kyk-macos-efi)\n<a name=\"sYdO5\"></a>\n## 目前的状态\n<a name=\"4tbQ1\"></a>\n### 可用的\n\n- NVME\n- HDMI 输出 4K 60FPS 显示器和 HiDPI\n- 有线网络\n- USB 3\n- 休眠\n<a name=\"6fkX7\"></a>\n### 不可用的\n\n- 内置 Wifi（可以用外置的）\n- 内置蓝牙（这点似乎有解但是感觉太麻烦就直接买了个外置的）\n- DP 转 HDMI 似乎不可用\n<a name=\"Ag4L9\"></a>\n## 安装盘\n<a name=\"5Z4cI\"></a>\n### 下载系统\n推荐直接去 App Store 下载原版系统，如果需要特定版本从其他地方下载原版 DMG 即可。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1586183581819-c83c88be-5ef0-43d9-81ec-af7b5f70ddec.png#align=left&display=inline&height=836&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1672&originWidth=2584&size=1486704&status=done&style=none&width=1292)\n<a name=\"mId7n\"></a>\n### 制作启动盘\n准备一个 U 盘，使用磁盘工具格式化为 `Mac OS 扩展(日志式) & GUID分区表` ，这里可以起名叫 `MyInstaller` 。<br />\n<br />然后等待系统下载完毕后，在终端中执行\n```shell\nsudo \"/Applications/Install macOS Catalina.app/Contents/Resources/createinstallmedia\" --volume /Volumes/MyInstaller\n```\n输入系统密码后等待执行完毕。\n<a name=\"nT50q\"></a>\n### 启动盘 EFI\n<a name=\"w8h49\"></a>\n#### 挂载\nEFI 分区负责系统的启动引导，默认是不被系统挂载的，需要用一些工具或者命令来挂载。我这里图方便直使用[https://sourceforge.net/projects/cloverefiboot/](https://sourceforge.net/projects/cloverefiboot/)（虽然我其实根本没用到 Clover）。这个工具提供一个 Menubar 的工具可以挂载 EFI。<br />\n<br />从挂载-选择磁盘中，可以选择我们的 U 盘。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1586185724701-e62184fc-7a10-42c8-ac94-3257c4acdb0d.png#align=left&display=inline&height=726&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1452&originWidth=828&size=263783&status=done&style=none&width=414)\n<a name=\"ljhj9\"></a>\n#### 现成的 EFI\n现在启动盘还无法在 PC 设备上启动，需要把相应的配置和驱动等，由于在网上已经有现成对应设备的 `EFI` ，我做了一些适配后放到了 [https://github.com/xcodebuild/nuc6i7kyk-macos-efi](https://github.com/xcodebuild/nuc6i7kyk-macos-efi)，直接把这个仓库下载下来后复制到 U 盘的 ESI 分区中。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1586184558636-5747aec5-59fe-4c6b-9b26-4fdc51367bae.png#align=left&display=inline&height=548&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1096&originWidth=1764&size=523396&status=done&style=none&width=882)\n<a name=\"lmYIL\"></a>\n## 安装\n<a name=\"ayhl6\"></a>\n### 设置\n需要在骷髅峡谷的 BIOS 设置中关掉不兼容的设置\n\n- Power->Secondary Power Settings, “Wake on LAN from S4/S5”, 设置成 “Stay Off”\n- Devices->Video, “IGD Minimum Memory” 设置为 64mb\n- Devices->Video, “IGD Aperture Size” 设置为 256mb\n- Boot->Secure Boot, “Secure Boot” 设置为 disabled\n- Security->Security Features, “Execute Disable Bit” 设置为 enabled.\n- Security->Security Features, “VT-d” 设置为 disabled\n<a name=\"feYmw\"></a>\n### U 盘引导安装\n安装部分不用太多说，把 U 盘插到骷髅峡谷上，启动时选择 `Catalina Installer` 进入安装，进入到安装界面后先用磁盘工具把相应的分区（或者硬盘）格式化成 APFS 和 GUID。<br />\n<br />然后进行安装即可，过程中会经过几次重启，每次都选 U 盘以外的 `Installer` 分区。\n<a name=\"5i8j8\"></a>\n### 启动\n安装完成后暂时还是需要 U 盘，因为我们刚才安装的是白苹果系统，不具备在骷髅峡谷上启动的能力。我们可以通过 U 盘引导进入系统后，仍然安装上面的 Clover 应用来挂载硬盘的 EFI 分区。<br />\n<br />然后把 U 盘的 EFI 分区原样复制到硬盘的 EFI 分区，然后我们就可以摆脱 U 盘直接启动了。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1586183143410-ed293857-c3b0-4af5-aa64-09d6ae8b748b.png#align=left&display=inline&height=328&margin=%5Bobject%20Object%5D&name=image.png&originHeight=892&originWidth=1396&size=485582&status=done&style=none&width=513)\n<a name=\"CgIF8\"></a>\n## 其他\n其中内置 Wifi 是不可用的（无解），内置蓝牙有解但是懒得折腾了。可以通过淘宝买个几十块的 USB 接口的解决，注意 macOS 的兼容性。<br />\n<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1586185139192-a8f45e9a-5811-4b36-8c2b-c1f25f77b0a1.png#align=left&display=inline&height=316&margin=%5Bobject%20Object%5D&name=image.png&originHeight=632&originWidth=1282&size=185833&status=done&style=none&width=641)<br />\n<br />从测速看外接了一个廉价 USB Hub 上的 USB 网卡连接 5G Wifi 似乎没有什么问题。\n<a name=\"URUlc\"></a>\n## 参考\n\n- BIOS 设置部分参考的 [https://blog.tms.im/2019/03/01/nuc6i7kyk-hackintosh-mojave](https://blog.tms.im/2019/03/01/nuc6i7kyk-hackintosh-mojave)\n- EFI 修改自 [https://github.com/furui/skull-canyon-efi](https://github.com/furui/skull-canyon-efi)\n",
    "body_draft": "手头上有个骷髅峡谷一代的盒子（ `nuc6i7kyk` ），之前一直用的是 `Windows 10` ，然而由于工作用的是 Macbook Pro，环境切来切去的总是不适应。上网查了一下 `nuc6i7kyk` 的硬件用来黑苹果是比较合适的，于是花了点时间装了下黑苹果，总共大概花了四五个小时的时间（不过还有一些小瑕疵，也不纠结了）。<br />\n<br />系统的版本为 `macOS Catalina 10.15.4` ，引导程序选的是 `OpenCore` 。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1586185011143-7e282c51-7177-424e-a425-382d84b2ade1.png#align=left&display=inline&height=338&margin=%5Bobject%20Object%5D&name=image.png&originHeight=676&originWidth=1560&size=377314&status=done&style=none&width=780)<br />开箱即用的 `EFI` 见：[https://github.com/xcodebuild/nuc6i7kyk-macos-efi](https://github.com/xcodebuild/nuc6i7kyk-macos-efi)\n<a name=\"sYdO5\"></a>\n## 目前的状态\n<a name=\"4tbQ1\"></a>\n### 可用的\n\n- NVME\n- HDMI 输出 4K 60FPS 显示器和 HiDPI\n- 有线网络\n- USB 3\n- 休眠\n<a name=\"6fkX7\"></a>\n### 不可用的\n\n- 内置 Wifi（可以用外置的）\n- 内置蓝牙（这点似乎有解但是感觉太麻烦就直接买了个外置的）\n- DP 转 HDMI 似乎不可用\n<a name=\"Ag4L9\"></a>\n## 安装盘\n<a name=\"5Z4cI\"></a>\n### 下载系统\n推荐直接去 App Store 下载原版系统，如果需要特定版本从其他地方下载原版 DMG 即可。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1586183581819-c83c88be-5ef0-43d9-81ec-af7b5f70ddec.png#align=left&display=inline&height=836&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1672&originWidth=2584&size=1486704&status=done&style=none&width=1292)\n<a name=\"mId7n\"></a>\n### 制作启动盘\n准备一个 U 盘，使用磁盘工具格式化为 `Mac OS 扩展(日志式) & GUID分区表` ，这里可以起名叫 `MyInstaller` 。<br />\n<br />然后等待系统下载完毕后，在终端中执行\n```shell\nsudo \"/Applications/Install macOS Catalina.app/Contents/Resources/createinstallmedia\" --volume /Volumes/MyInstaller\n```\n输入系统密码后等待执行完毕。\n<a name=\"nT50q\"></a>\n### 启动盘 EFI\n<a name=\"w8h49\"></a>\n#### 挂载\nEFI 分区负责系统的启动引导，默认是不被系统挂载的，需要用一些工具或者命令来挂载。我这里图方便直使用[https://sourceforge.net/projects/cloverefiboot/](https://sourceforge.net/projects/cloverefiboot/)（虽然我其实根本没用到 Clover）。这个工具提供一个 Menubar 的工具可以挂载 EFI。<br />\n<br />从挂载-选择磁盘中，可以选择我们的 U 盘。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1586185724701-e62184fc-7a10-42c8-ac94-3257c4acdb0d.png#align=left&display=inline&height=726&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1452&originWidth=828&size=263783&status=done&style=none&width=414)\n<a name=\"ljhj9\"></a>\n#### 现成的 EFI\n现在启动盘还无法在 PC 设备上启动，需要把相应的配置和驱动等，由于在网上已经有现成对应设备的 `EFI` ，我做了一些适配后放到了 [https://github.com/xcodebuild/nuc6i7kyk-macos-efi](https://github.com/xcodebuild/nuc6i7kyk-macos-efi)，直接把这个仓库下载下来后复制到 U 盘的 ESI 分区中。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1586184558636-5747aec5-59fe-4c6b-9b26-4fdc51367bae.png#align=left&display=inline&height=548&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1096&originWidth=1764&size=523396&status=done&style=none&width=882)\n<a name=\"lmYIL\"></a>\n## 安装\n<a name=\"ayhl6\"></a>\n### 设置\n需要在骷髅峡谷的 BIOS 设置中关掉不兼容的设置\n\n- Power->Secondary Power Settings, “Wake on LAN from S4/S5”, 设置成 “Stay Off”\n- Devices->Video, “IGD Minimum Memory” 设置为 64mb\n- Devices->Video, “IGD Aperture Size” 设置为 256mb\n- Boot->Secure Boot, “Secure Boot” 设置为 disabled\n- Security->Security Features, “Execute Disable Bit” 设置为 enabled.\n- Security->Security Features, “VT-d” 设置为 disabled\n<a name=\"feYmw\"></a>\n### U 盘引导安装\n安装部分不用太多说，把 U 盘插到骷髅峡谷上，启动时选择 `Catalina Installer` 进入安装，进入到安装界面后先用磁盘工具把相应的分区（或者硬盘）格式化成 APFS 和 GUID。<br />\n<br />然后进行安装即可，过程中会经过几次重启，每次都选 U 盘以外的 `Installer` 分区。\n<a name=\"5i8j8\"></a>\n### 启动\n安装完成后暂时还是需要 U 盘，因为我们刚才安装的是白苹果系统，不具备在骷髅峡谷上启动的能力。我们可以通过 U 盘引导进入系统后，仍然安装上面的 Clover 应用来挂载硬盘的 EFI 分区。<br />\n<br />然后把 U 盘的 EFI 分区原样复制到硬盘的 EFI 分区，然后我们就可以摆脱 U 盘直接启动了。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1586183143410-ed293857-c3b0-4af5-aa64-09d6ae8b748b.png#align=left&display=inline&height=328&margin=%5Bobject%20Object%5D&name=image.png&originHeight=892&originWidth=1396&size=485582&status=done&style=none&width=513)\n<a name=\"CgIF8\"></a>\n## 其他\n其中内置 Wifi 是不可用的（无解），内置蓝牙有解但是懒得折腾了。可以通过淘宝买个几十块的 USB 接口的解决，注意 macOS 的兼容性。<br />\n<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1586185139192-a8f45e9a-5811-4b36-8c2b-c1f25f77b0a1.png#align=left&display=inline&height=316&margin=%5Bobject%20Object%5D&name=image.png&originHeight=632&originWidth=1282&size=185833&status=done&style=none&width=641)<br />\n<br />从测速看外接了一个廉价 USB Hub 上的 USB 网卡连接 5G Wifi 似乎没有什么问题。\n<a name=\"URUlc\"></a>\n## 参考\n\n- BIOS 设置部分参考的 [https://blog.tms.im/2019/03/01/nuc6i7kyk-hackintosh-mojave](https://blog.tms.im/2019/03/01/nuc6i7kyk-hackintosh-mojave)\n- EFI 修改自 [https://github.com/furui/skull-canyon-efi](https://github.com/furui/skull-canyon-efi)\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\"><p data-lake-id=\"f7d3f1a2df630093ef74a4f66a5bd6e8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">手头上有个骷髅峡谷一代的盒子（ <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">nuc6i7kyk</code>&nbsp;），之前一直用的是 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Windows 10</code>&nbsp;，然而由于工作用的是 Macbook Pro，环境切来切去的总是不适应。上网查了一下 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">nuc6i7kyk</code>&nbsp;的硬件用来黑苹果是比较合适的，于是花了点时间装了下黑苹果，总共大概花了四五个小时的时间（不过还有一些小瑕疵，也不纠结了）。</p><p data-lake-id=\"8deaa01d63c3baa0a973cf65d56fb11e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"22e059d11f595977fc2893da4d42f1b7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">系统的版本为 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">macOS&nbsp;Catalina&nbsp;10.15.4</code>&nbsp;，引导程序选的是 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">OpenCore</code>&nbsp;。</p><p data-lake-id=\"8f774888ee8abc9c20a816411541378a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1586185011143-7e282c51-7177-424e-a425-382d84b2ade1.png?x-oss-process=image/resize,w_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1586185011143-7e282c51-7177-424e-a425-382d84b2ade1.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 746px; height: 323px;\"></span></p><p data-lake-id=\"a52f98417af6320395c2c5b80cf51c81\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">开箱即用的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">EFI</code>&nbsp;见：<a href=\"https://github.com/xcodebuild/nuc6i7kyk-macos-efi\" target=\"_blank\">https://github.com/xcodebuild/nuc6i7kyk-macos-efi</a></p><h2 data-lake-id=\"8ff64fe47df316bca583aecf697cc4d4\" id=\"sYdO5\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">目前的状态</h2><h3 data-lake-id=\"cb7964f0d2725c8286f52d4f262a15c9\" id=\"4tbQ1\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">可用的</h3><ul data-lake-id=\"1c80394bf782adde99d991a587d0d9ad\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"efcb71761ae9287b6ad2225022bee899\">NVME</li><li data-lake-id=\"45da750fdb85d629d87d14fa0ec72480\">HDMI 输出 4K 60FPS 显示器和 HiDPI</li><li data-lake-id=\"366e1c860e552a050f0cb70b466a87f1\">有线网络</li><li data-lake-id=\"e45435cbe731a1e98b3930a139dddae0\">USB 3</li><li data-lake-id=\"5dbaf206f09551460d739ef3673a06e6\">休眠</li></ul><h3 data-lake-id=\"567c42b05a209d91976d0a3fea798084\" id=\"6fkX7\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">不可用的</h3><ul data-lake-id=\"520bd203385dc4fe4574a13e113cce19\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"09507691701749ce62e0ef8bec24bbfb\">内置 Wifi（可以用外置的）</li><li data-lake-id=\"de1fdd1474c5f07b8c9131714fefea7b\">内置蓝牙（这点似乎有解但是感觉太麻烦就直接买了个外置的）</li><li data-lake-id=\"67836605ec127c7e1526ed2ceb9f827a\">DP 转 HDMI 似乎不可用</li></ul><h2 data-lake-id=\"d217e5c2bb75f3d464c743509501001f\" id=\"Ag4L9\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">安装盘</h2><h3 data-lake-id=\"168f6490f88ff20dfb33fbd39075297c\" id=\"5Z4cI\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">下载系统</h3><p data-lake-id=\"ccca4df953deff0d6feff93a75156c09\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">推荐直接去 App Store 下载原版系统，如果需要特定版本从其他地方下载原版 DMG 即可。</p><p data-lake-id=\"c80d10f258d0402e6960bb45cc3b5c5b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1586183581819-c83c88be-5ef0-43d9-81ec-af7b5f70ddec.png?x-oss-process=image/resize,w_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1586183581819-c83c88be-5ef0-43d9-81ec-af7b5f70ddec.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 746px; height: 483px;\"></span></p><h3 data-lake-id=\"4534a9fb5ef92d5f321d3e4d11a62c09\" id=\"mId7n\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">制作启动盘</h3><p data-lake-id=\"72bc0fb0b5aa526a9aaa2df4d29867a1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">准备一个 U 盘，使用磁盘工具格式化为 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Mac OS 扩展(日志式) &amp; GUID分区表</code>&nbsp;，这里可以起名叫 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">MyInstaller</code>&nbsp;。</p><p data-lake-id=\"0127e41def3f88f853f7538bd402f338\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"19d06a7aa59fb19b89a5200bd808de80\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">然后等待系统下载完毕后，在终端中执行</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"7uWcv\" class=\"\" data-language=\"shell\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">sudo</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"/Applications/Install macOS Catalina.app/Contents/Resources/createinstallmedia\"</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--volume</span> /Volumes/MyInstaller</span></span></pre></div></div></div><p data-lake-id=\"28211d73f595c574b1f5913ff2d56373\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">输入系统密码后等待执行完毕。</p><h3 data-lake-id=\"3c99b20d15ed78b5b6841f733b5be818\" id=\"nT50q\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">启动盘 EFI</h3><h4 data-lake-id=\"3aedb404cc78e0fc45742b4c7bd93608\" id=\"w8h49\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">挂载</h4><p data-lake-id=\"9ba3ec033d3cddd691fdbaf9d0897816\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">EFI 分区负责系统的启动引导，默认是不被系统挂载的，需要用一些工具或者命令来挂载。我这里图方便直使用<a href=\"https://sourceforge.net/projects/cloverefiboot/\" target=\"_blank\">https://sourceforge.net/projects/cloverefiboot/</a>（虽然我其实根本没用到 Clover）。这个工具提供一个 Menubar 的工具可以挂载 EFI。</p><p data-lake-id=\"847ace7eebed657b0cb76c3ac746c456\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"4711025c0bf87267ab40fb6af743728b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">从挂载-选择磁盘中，可以选择我们的 U 盘。</p><p data-lake-id=\"9984928553044bc447c571e45c244a0a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1586185724701-e62184fc-7a10-42c8-ac94-3257c4acdb0d.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1586185724701-e62184fc-7a10-42c8-ac94-3257c4acdb0d.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 414px; height: 726px;\"></span></p><h4 data-lake-id=\"ad95d09d8759cbd5ee047cc673c77b08\" id=\"ljhj9\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">现成的 EFI</h4><p data-lake-id=\"1a75812699c28ea41bff52e5d8a6a545\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">现在启动盘还无法在 PC 设备上启动，需要把相应的配置和驱动等，由于在网上已经有现成对应设备的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">EFI</code>&nbsp;，我做了一些适配后放到了&nbsp;<a href=\"https://github.com/xcodebuild/nuc6i7kyk-macos-efi\" target=\"_blank\">https://github.com/xcodebuild/nuc6i7kyk-macos-efi</a>，直接把这个仓库下载下来后复制到 U 盘的 ESI 分区中。</p><p data-lake-id=\"09ce363b8c1f08af147db8cb10802f87\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1586184558636-5747aec5-59fe-4c6b-9b26-4fdc51367bae.png?x-oss-process=image/resize,w_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1586184558636-5747aec5-59fe-4c6b-9b26-4fdc51367bae.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 746px; height: 464px;\"></span></p><h2 data-lake-id=\"a068d277958629b4a3a4b44677027edf\" id=\"lmYIL\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">安装</h2><h3 data-lake-id=\"62fec6a3b35b7afa8df9cb1d8442936d\" id=\"ayhl6\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">设置</h3><p data-lake-id=\"90814a1ff4e633d2586729a3906de426\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">需要在骷髅峡谷的 BIOS 设置中关掉不兼容的设置</p><ul data-lake-id=\"4b93248a1534d8650ecaad3919a857c7\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"97ece2bb671c070ba140a2afe558d277\">Power-&gt;Secondary Power Settings, “Wake on LAN from S4/S5”, 设置成 “Stay Off”</li><li data-lake-id=\"84abb48428238f2c7e72e212742168cf\">Devices-&gt;Video, “IGD Minimum Memory” 设置为 64mb</li><li data-lake-id=\"16530ea1b8cb74eab2dfb4d4218a4a34\">Devices-&gt;Video, “IGD Aperture Size” 设置为 256mb</li><li data-lake-id=\"658b583dfa7b64cc9935f887483c8b0d\">Boot-&gt;Secure Boot, “Secure Boot” 设置为 disabled</li><li data-lake-id=\"92de44ecf5c59ee631fe4793ae9f007a\">Security-&gt;Security Features, “Execute Disable Bit” 设置为 enabled.</li><li data-lake-id=\"9d78661506c71977d6e5261d42ad42c5\">Security-&gt;Security Features, “VT-d” 设置为 disabled</li></ul><h3 data-lake-id=\"a5a7be4a5ba577bd2ef4014e7a1a3b08\" id=\"feYmw\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">U 盘引导安装</h3><p data-lake-id=\"5071b27ab1cebedd3aa23e442c621b16\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">安装部分不用太多说，把 U 盘插到骷髅峡谷上，启动时选择 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Catalina Installer</code>&nbsp;进入安装，进入到安装界面后先用磁盘工具把相应的分区（或者硬盘）格式化成 APFS 和 GUID。</p><p data-lake-id=\"3ab4a5ac7d79a6d77c4dbb600c8b52b5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"44baa72312b8385fda6c4288c5801111\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">然后进行安装即可，过程中会经过几次重启，每次都选 U 盘以外的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Installer</code>&nbsp;分区。</p><h3 data-lake-id=\"8ab4411aacaa9bdd0a7478431e8af533\" id=\"5i8j8\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">启动</h3><p data-lake-id=\"535f85f0267bf7070ec88496144fa220\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">安装完成后暂时还是需要 U 盘，因为我们刚才安装的是白苹果系统，不具备在骷髅峡谷上启动的能力。我们可以通过 U 盘引导进入系统后，仍然安装上面的 Clover 应用来挂载硬盘的 EFI 分区。</p><p data-lake-id=\"958fc12e84a445e749d4b1c73deeb9f9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"a9137ebb8ce0532c9527ad8e4954cb78\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">然后把 U 盘的 EFI 分区原样复制到硬盘的 EFI 分区，然后我们就可以摆脱 U 盘直接启动了。</p><p data-lake-id=\"7076f46bf1d67df0669f068196168087\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1586183143410-ed293857-c3b0-4af5-aa64-09d6ae8b748b.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1586183143410-ed293857-c3b0-4af5-aa64-09d6ae8b748b.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 513px; height: 328px;\"></span></p><h2 data-lake-id=\"9424648192ef071c81a72132b811851c\" id=\"CgIF8\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">其他</h2><p data-lake-id=\"9b1debd62b3db562ef36fad2349f2880\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">其中内置 Wifi 是不可用的（无解），内置蓝牙有解但是懒得折腾了。可以通过淘宝买个几十块的 USB 接口的解决，注意 macOS 的兼容性。</p><p data-lake-id=\"624820a5267bbf42ab029dfcfbc58b7d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"6c27e65c2aaeec86b58016bde210f8a9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1586185139192-a8f45e9a-5811-4b36-8c2b-c1f25f77b0a1.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1586185139192-a8f45e9a-5811-4b36-8c2b-c1f25f77b0a1.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 641px; height: 316px;\"></span></p><p data-lake-id=\"7dd2e8c755d821dce50eaca72fa06384\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"cb318b709ee61b3d20e2b740f47add89\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">从测速看外接了一个廉价 USB Hub 上的 USB 网卡连接 5G Wifi 似乎没有什么问题。</p><h2 data-lake-id=\"dc7185a3ab79c046428d09ad0511d298\" id=\"URUlc\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">参考</h2><ul data-lake-id=\"27ddf69762a15bb104c431aa1de8e4af\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"8211cb5f003f503ed01b0073d45adb5d\">BIOS 设置部分参考的&nbsp;<a href=\"https://blog.tms.im/2019/03/01/nuc6i7kyk-hackintosh-mojave\" target=\"_blank\">https://blog.tms.im/2019/03/01/nuc6i7kyk-hackintosh-mojave</a></li><li data-lake-id=\"7667ab61af34642dd4ea3d7814bc9c99\">EFI 修改自&nbsp;<a href=\"https://github.com/furui/skull-canyon-efi\" target=\"_blank\">https://github.com/furui/skull-canyon-efi</a></li></ul></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"f7d3f1a2df630093ef74a4f66a5bd6e8\">手头上有个骷髅峡谷一代的盒子（ <code>nuc6i7kyk</code> ），之前一直用的是 <code>Windows 10</code> ，然而由于工作用的是 Macbook Pro，环境切来切去的总是不适应。上网查了一下 <code>nuc6i7kyk</code> 的硬件用来黑苹果是比较合适的，于是花了点时间装了下黑苹果，总共大概花了四五个小时的时间（不过还有一些小瑕疵，也不纠结了）。</p><p data-lake-id=\"8deaa01d63c3baa0a973cf65d56fb11e\"><br /></p><p data-lake-id=\"22e059d11f595977fc2893da4d42f1b7\">系统的版本为 <code>macOS Catalina 10.15.4</code> ，引导程序选的是 <code>OpenCore</code> 。</p><p data-lake-id=\"8f774888ee8abc9c20a816411541378a\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1586185011143-7e282c51-7177-424e-a425-382d84b2ade1.png%22%2C%22originWidth%22%3A1560%2C%22originHeight%22%3A676%2C%22name%22%3A%22image.png%22%2C%22size%22%3A377314%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1153.75%2C%22y%22%3A94.25%2C%22width%22%3A53.625%2C%22height%22%3A34.125%2C%22text%22%3A%22Q%E6%85%A2%E7%B4%A2%22%7D%2C%7B%22x%22%3A724.75%2C%22y%22%3A99.125%2C%22width%22%3A112.12494000000004%2C%22height%22%3A29.25%2C%22text%22%3A%22%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0%22%7D%2C%7B%22x%22%3A599.625%2C%22y%22%3A206.37498%2C%22width%22%3A643.5%2C%22height%22%3A29.25%2C%22text%22%3A%22%E6%82%A8%E7%9A%84Mac%E8%BF%90%E8%A1%8C%E7%9A%84%E5%B7%B2%E6%98%AF%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%ACmacosCatalina10.15.4%22%7D%2C%7B%22x%22%3A583.375%2C%22y%22%3A250.24998%2C%22width%22%3A311.99994000000004%2C%22height%22%3A24.375020000000006%2C%22text%22%3A%22%E4%B8%8A%E6%AC%A1%E6%A3%80%E6%9F%A5%E6%97%B6%E9%97%B4%3A%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%8810%3A28%22%7D%2C%7B%22x%22%3A617.5%2C%22y%22%3A453.37497%2C%22width%22%3A376.99994000000004%2C%22height%22%3A29.25%2C%22text%22%3A%22%E8%87%AA%E5%8A%A8%E4%BF%9D%E6%8C%81%E6%88%91%E7%9A%84Mac%E8%BF%90%E8%A1%8C%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC%22%7D%2C%7B%22x%22%3A1244.75%2C%22y%22%3A453.37497%2C%22width%22%3A73.125%2C%22height%22%3A27.625%2C%22text%22%3A%22%E9%AB%98%E7%BA%A7...%22%7D%2C%7B%22x%22%3A248.62498%2C%22y%22%3A454.99997%2C%22width%22%3A110.50002%2C%22height%22%3A29.25%2C%22text%22%3A%22%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22Q%E6%85%A2%E7%B4%A2%20%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0%20%E6%82%A8%E7%9A%84Mac%E8%BF%90%E8%A1%8C%E7%9A%84%E5%B7%B2%E6%98%AF%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%ACmacosCatalina10.15.4%20%E4%B8%8A%E6%AC%A1%E6%A3%80%E6%9F%A5%E6%97%B6%E9%97%B4%3A%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%8810%3A28%20%E8%87%AA%E5%8A%A8%E4%BF%9D%E6%8C%81%E6%88%91%E7%9A%84Mac%E8%BF%90%E8%A1%8C%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC%20%E9%AB%98%E7%BA%A7...%20%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0%22%2C%22margin%22%3A%7B%22top%22%3Afalse%2C%22bottom%22%3Afalse%7D%2C%22width%22%3A780%2C%22height%22%3A338%7D\"></card></p><p data-lake-id=\"a52f98417af6320395c2c5b80cf51c81\">开箱即用的 <code>EFI</code> 见：<a href=\"https://github.com/xcodebuild/nuc6i7kyk-macos-efi\" target=\"_blank\">https://github.com/xcodebuild/nuc6i7kyk-macos-efi</a></p><h2 data-lake-id=\"8ff64fe47df316bca583aecf697cc4d4\" id=\"sYdO5\">目前的状态</h2><h3 data-lake-id=\"cb7964f0d2725c8286f52d4f262a15c9\" id=\"4tbQ1\">可用的</h3><ul data-lake-id=\"1c80394bf782adde99d991a587d0d9ad\"><li data-lake-id=\"efcb71761ae9287b6ad2225022bee899\">NVME</li><li data-lake-id=\"45da750fdb85d629d87d14fa0ec72480\">HDMI 输出 4K 60FPS 显示器和 HiDPI</li><li data-lake-id=\"366e1c860e552a050f0cb70b466a87f1\">有线网络</li><li data-lake-id=\"e45435cbe731a1e98b3930a139dddae0\">USB 3</li><li data-lake-id=\"5dbaf206f09551460d739ef3673a06e6\">休眠</li></ul><h3 data-lake-id=\"567c42b05a209d91976d0a3fea798084\" id=\"6fkX7\">不可用的</h3><ul data-lake-id=\"520bd203385dc4fe4574a13e113cce19\"><li data-lake-id=\"09507691701749ce62e0ef8bec24bbfb\">内置 Wifi（可以用外置的）</li><li data-lake-id=\"de1fdd1474c5f07b8c9131714fefea7b\">内置蓝牙（这点似乎有解但是感觉太麻烦就直接买了个外置的）</li><li data-lake-id=\"67836605ec127c7e1526ed2ceb9f827a\">DP 转 HDMI 似乎不可用</li></ul><h2 data-lake-id=\"d217e5c2bb75f3d464c743509501001f\" id=\"Ag4L9\">安装盘</h2><h3 data-lake-id=\"168f6490f88ff20dfb33fbd39075297c\" id=\"5Z4cI\">下载系统</h3><p data-lake-id=\"ccca4df953deff0d6feff93a75156c09\">推荐直接去 App Store 下载原版系统，如果需要特定版本从其他地方下载原版 DMG 即可。</p><p data-lake-id=\"c80d10f258d0402e6960bb45cc3b5c5b\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1586183581819-c83c88be-5ef0-43d9-81ec-af7b5f70ddec.png%22%2C%22originWidth%22%3A2584%2C%22originHeight%22%3A1672%2C%22name%22%3A%22image.png%22%2C%22size%22%3A1486704%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A998.60834%2C%22y%22%3A177.65%2C%22width%22%3A387.60006%2C%22height%22%3A43.066659999999985%2C%22text%22%3A%22macosCatalina%22%7D%2C%7B%22x%22%3A1017.45%2C%22y%22%3A239.55833%2C%22width%22%3A59.21659999999997%2C%22height%22%3A32.300009999999986%2C%22text%22%3A%22%E5%B7%A5%E5%85%B7%22%7D%2C%7B%22x%22%3A2182.9417%2C%22y%22%3A255.70833%2C%22width%22%3A56.52490000000034%2C%22height%22%3A29.608319999999992%2C%22text%22%3A%22%E8%8E%B7%E5%8F%96%22%7D%2C%7B%22x%22%3A1014.7583%2C%22y%22%3A282.625%2C%22width%22%3A75.36670000000004%2C%22height%22%3A29.60834%2C%22text%22%3A%22Apple%22%7D%2C%7B%22x%22%3A220.71666%2C%22y%22%3A285.31665%2C%22width%22%3A80.75001000000003%2C%22height%22%3A40.375%2C%22text%22%3A%22%E6%8E%A2%E7%B4%A2%22%7D%2C%7B%22x%22%3A223.40833%2C%22y%22%3A368.75833%2C%22width%22%3A78.05834000000002%2C%22height%22%3A45.75833%2C%22text%22%3A%22%E5%88%9B%E4%BD%9C%22%7D%2C%7B%22x%22%3A1017.45%2C%22y%22%3A387.6%2C%22width%22%3A306.84989999999993%2C%22height%22%3A45.758339999999976%2C%22text%22%3A%223.0%E5%A4%A7%E5%A5%B3%22%7D%2C%7B%22x%22%3A223.40833%2C%22y%22%3A452.19998%2C%22width%22%3A78.05834000000002%2C%22height%22%3A43.06668000000002%2C%22text%22%3A%22%E5%B7%A5%E4%BD%9C%22%7D%2C%7B%22x%22%3A223.40833%2C%22y%22%3A535.64166%2C%22width%22%3A80.74999999999997%2C%22height%22%3A40.375%2C%22text%22%3A%22%E6%B8%B8%E6%88%8F%22%7D%2C%7B%22x%22%3A220.71666%2C%22y%22%3A621.77496%2C%22width%22%3A83.44166999999999%2C%22height%22%3A43.06673999999998%2C%22text%22%3A%22%E5%BC%80%E5%8F%91%22%7D%2C%7B%22x%22%3A223.40833%2C%22y%22%3A705.2167%2C%22width%22%3A80.74999999999997%2C%22height%22%3A40.375%2C%22text%22%3A%22%E7%B1%BB%E5%88%AB%22%7D%2C%7B%22x%22%3A223.40833%2C%22y%22%3A788.6583%2C%22width%22%3A80.74999999999997%2C%22height%22%3A40.375%2C%22text%22%3A%22%E6%9B%B4%E6%96%B0%22%7D%2C%7B%22x%22%3A823.64996%2C%22y%22%3A912.475%2C%22width%22%3A449.5083400000001%2C%22height%22%3A26.91665999999998%2C%22text%22%3A%22%E5%BF%83%E5%9B%BD%E8%A5%BF%E6%89%BF%E7%9B%B4%E5%8F%B718%22%7D%2C%7B%22x%22%3A2282.5332%2C%22y%22%3A1262.3916%2C%22width%22%3A78.05840000000035%2C%22height%22%3A29.608400000000074%2C%22text%22%3A%22Apple%22%7D%2C%7B%22x%22%3A726.75%2C%22y%22%3A1273.1583%2C%22width%22%3A1157.4166%2C%22height%22%3A34.99170000000004%2C%22text%22%3A%22%E4%B8%8A%E4%BD%A0%E5%96%9C%E7%88%B1%E7%9A%84%E4%B8%80%E5%88%87%2C%E9%83%BD%E5%9B%A0mcosCatalina%E8%80%8C%E5%8F%98%E5%BE%97%E5%8F%B2%E7%9B%B8%E5%BD%A9.%E4%BD%A0%E5%8F%AF%E4%BB%A5%E4%BA%AB%E7%94%A8%E4%B8%A4%E6%AC%BE%E5%85%A8%E6%96%B0%E5%AA%92p%3B%E7%94%A8%E6%96%B0%E7%9A%84%E6%89%BEPp%22%7D%2C%7B%22x%22%3A2252.925%2C%22y%22%3A1305.4584%2C%22width%22%3A110.35819999999967%2C%22height%22%3A37.68319999999994%2C%22text%22%3A%22%E7%BD%91%E7%AB%99%E5%8F%A3%22%7D%2C%7B%22x%22%3A796.73334%2C%22y%22%3A1316.225%2C%22width%22%3A1138.57496%2C%22height%22%3A43.06660000000011%2C%22text%22%3A%22%E8%80%8C%E4%BD%A0%E5%B8%A6%E7%94%A8%E7%9A%84PdaPpp%E7%8E%B0%E5%9C%A8%E4%B9%9F%E6%9C%89%E4%BA%86M%E7%89%88.%E4%BD%A0%E5%AE%A4%E5%8F%AF%E4%BB%A5iPad%E5%BD%93%E4%BD%9C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E6%98%BE%E7%A4%BA%2C%E7%9C%A0%E5%BC%82%E9%9D%A2%E7%A9%BA%E4%B8%8E.%22%7D%2C%7B%22x%22%3A2247.5417%2C%22y%22%3A1356.6%2C%22width%22%3A78.05819999999994%2C%22height%22%3A34.99170000000004%2C%22text%22%3A%22%E6%94%AF%E6%8C%810%22%7D%2C%7B%22x%22%3A648.69165%2C%22y%22%3A1367.3667%2C%22width%22%3A522.18335%2C%22height%22%3A32.29989999999998%2C%22text%22%3A%22%E7%8E%B0%E5%9C%A8%2C%E6%97%A0%E8%AE%BA%E5%81%9A%E4%BB%80%E4%B9%88%2C%E4%BD%A0%E5%B0%86%E6%8B%A5%E6%9C%89%E8%BF%90%E8%B6%85%E4%BB%A5%E5%BE%80%E7%9A%84%E4%BD%93%E9%AA%8C%22%7D%2C%7B%22x%22%3A1919.1583%2C%22y%22%3A1415.8167%2C%22width%22%3A53.83339999999998%2C%22height%22%3A29.608199999999897%2C%22text%22%3A%22%E6%9B%B4%E5%A4%9A%22%7D%2C%7B%22x%22%3A632.5417%2C%22y%22%3A1418.5083%2C%22width%22%3A158.80830000000003%2C%22height%22%3A29.608400000000074%2C%22text%22%3A%22AppleMusic%22%7D%2C%7B%22x%22%3A250.325%2C%22y%22%3A1426.5834%2C%22width%22%3A56.525000000000034%2C%22height%22%3A32.29989999999998%2C%22text%22%3A%22%E7%99%BB%E5%BD%95%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22macosCatalina%20%E5%B7%A5%E5%85%B7%20%E8%8E%B7%E5%8F%96%20Apple%20%E6%8E%A2%E7%B4%A2%20%E5%88%9B%E4%BD%9C%203.0%E5%A4%A7%E5%A5%B3%20%E5%B7%A5%E4%BD%9C%20%E6%B8%B8%E6%88%8F%20%E5%BC%80%E5%8F%91%20%E7%B1%BB%E5%88%AB%20%E6%9B%B4%E6%96%B0%20%E5%BF%83%E5%9B%BD%E8%A5%BF%E6%89%BF%E7%9B%B4%E5%8F%B718%20Apple%20%E4%B8%8A%E4%BD%A0%E5%96%9C%E7%88%B1%E7%9A%84%E4%B8%80%E5%88%87%2C%E9%83%BD%E5%9B%A0mcosCatalina%E8%80%8C%E5%8F%98%E5%BE%97%E5%8F%B2%E7%9B%B8%E5%BD%A9.%E4%BD%A0%E5%8F%AF%E4%BB%A5%E4%BA%AB%E7%94%A8%E4%B8%A4%E6%AC%BE%E5%85%A8%E6%96%B0%E5%AA%92p%3B%E7%94%A8%E6%96%B0%E7%9A%84%E6%89%BEPp%20%E7%BD%91%E7%AB%99%E5%8F%A3%20%E8%80%8C%E4%BD%A0%E5%B8%A6%E7%94%A8%E7%9A%84PdaPpp%E7%8E%B0%E5%9C%A8%E4%B9%9F%E6%9C%89%E4%BA%86M%E7%89%88.%E4%BD%A0%E5%AE%A4%E5%8F%AF%E4%BB%A5iPad%E5%BD%93%E4%BD%9C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E6%98%BE%E7%A4%BA%2C%E7%9C%A0%E5%BC%82%E9%9D%A2%E7%A9%BA%E4%B8%8E.%20%E6%94%AF%E6%8C%810%20%E7%8E%B0%E5%9C%A8%2C%E6%97%A0%E8%AE%BA%E5%81%9A%E4%BB%80%E4%B9%88%2C%E4%BD%A0%E5%B0%86%E6%8B%A5%E6%9C%89%E8%BF%90%E8%B6%85%E4%BB%A5%E5%BE%80%E7%9A%84%E4%BD%93%E9%AA%8C%20%E6%9B%B4%E5%A4%9A%20AppleMusic%20%E7%99%BB%E5%BD%95%22%2C%22margin%22%3A%7B%22top%22%3Afalse%2C%22bottom%22%3Afalse%7D%2C%22width%22%3A1292%2C%22height%22%3A836%7D\"></card></p><h3 data-lake-id=\"4534a9fb5ef92d5f321d3e4d11a62c09\" id=\"mId7n\">制作启动盘</h3><p data-lake-id=\"72bc0fb0b5aa526a9aaa2df4d29867a1\">准备一个 U 盘，使用磁盘工具格式化为 <code>Mac OS 扩展(日志式) &amp; GUID分区表</code> ，这里可以起名叫 <code>MyInstaller</code> 。</p><p data-lake-id=\"0127e41def3f88f853f7538bd402f338\"><br /></p><p data-lake-id=\"19d06a7aa59fb19b89a5200bd808de80\">然后等待系统下载完毕后，在终端中执行</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22shell%22%2C%22code%22%3A%22sudo%20%5C%22%2FApplications%2FInstall%20macOS%20Catalina.app%2FContents%2FResources%2Fcreateinstallmedia%5C%22%20--volume%20%2FVolumes%2FMyInstaller%22%2C%22id%22%3A%227uWcv%22%7D\"></card><p data-lake-id=\"28211d73f595c574b1f5913ff2d56373\">输入系统密码后等待执行完毕。</p><h3 data-lake-id=\"3c99b20d15ed78b5b6841f733b5be818\" id=\"nT50q\">启动盘 EFI</h3><h4 data-lake-id=\"3aedb404cc78e0fc45742b4c7bd93608\" id=\"w8h49\">挂载</h4><p data-lake-id=\"9ba3ec033d3cddd691fdbaf9d0897816\">EFI 分区负责系统的启动引导，默认是不被系统挂载的，需要用一些工具或者命令来挂载。我这里图方便直使用<a href=\"https://sourceforge.net/projects/cloverefiboot/\" target=\"_blank\">https://sourceforge.net/projects/cloverefiboot/</a>（虽然我其实根本没用到 Clover）。这个工具提供一个 Menubar 的工具可以挂载 EFI。</p><p data-lake-id=\"847ace7eebed657b0cb76c3ac746c456\"><br /></p><p data-lake-id=\"4711025c0bf87267ab40fb6af743728b\">从挂载-选择磁盘中，可以选择我们的 U 盘。</p><p data-lake-id=\"9984928553044bc447c571e45c244a0a\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1586185724701-e62184fc-7a10-42c8-ac94-3257c4acdb0d.png%22%2C%22originWidth%22%3A828%2C%22originHeight%22%3A1452%2C%22name%22%3A%22image.png%22%2C%22size%22%3A263783%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A104.3625%2C%22y%22%3A96.8%2C%22width%22%3A267.7125%2C%22height%22%3A28.737505999999996%2C%22text%22%3A%22%E7%9B%AE%E5%89%8DClover%E7%89%88%E6%9C%AC%3AN%2FA%22%7D%2C%7B%22x%22%3A107.387505%2C%22y%22%3A142.175%2C%22width%22%3A117.974995%2C%22height%22%3A30.25%2C%22text%22%3A%22%E5%BC%95%E5%AF%BC%E8%AE%BE%E5%A4%87%3A%22%7D%2C%7B%22x%22%3A136.125%2C%22y%22%3A189.0625%2C%22width%22%3A37.8125%2C%22height%22%3A22.6875%2C%22text%22%3A%22N%2FA%22%7D%2C%7B%22x%22%3A108.9%2C%22y%22%3A223.85%2C%22width%22%3A142.17501%2C%22height%22%3A27.225009999999997%2C%22text%22%3A%22config%E8%B7%AF%E5%BE%84%3A%22%7D%2C%7B%22x%22%3A134.6125%2C%22y%22%3A261.6625%2C%22width%22%3A40.83749999999998%2C%22height%22%3A24.200019999999995%2C%22text%22%3A%22N%2FA%22%7D%2C%7B%22x%22%3A113.4375%2C%22y%22%3A477.95%2C%22width%22%3A57.474999999999994%2C%22height%22%3A28.73750000000001%2C%22text%22%3A%22%E6%8C%82%E8%BD%BD%22%7D%2C%7B%22x%22%3A440.1375%2C%22y%22%3A480.975%2C%22width%22%3A193.59999999999997%2C%22height%22%3A28.73751999999996%2C%22text%22%3A%22disk2s1%2CFAT32....%22%7D%2C%7B%22x%22%3A113.4375%2C%22y%22%3A518.78754%2C%22width%22%3A54.44999999999999%2C%22height%22%3A22.6875%2C%22text%22%3A%22(ESP)%22%7D%2C%7B%22x%22%3A552.0625%2C%22y%22%3A536.9375%2C%22width%22%3A58.987499999999955%2C%22height%22%3A28.737499999999955%2C%22text%22%3A%22%E5%8D%B8%E8%BD%BD%22%7D%2C%7B%22x%22%3A154.27501%2C%22y%22%3A605%2C%22width%22%3A119.48748999999998%2C%22height%22%3A28.737499999999955%2C%22text%22%3A%22*%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD%22%7D%2C%7B%22x%22%3A155.7875%2C%22y%22%3A683.65%2C%22width%22%3A225.36249999999998%2C%22height%22%3A30.25%2C%22text%22%3A%22*%E8%AE%A9%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%8F%AF%E8%AF%BB%E5%86%99%22%7D%2C%7B%22x%22%3A154.27501%2C%22y%22%3A729.025%2C%22width%22%3A290.40001%2C%22height%22%3A28.737500000000068%2C%22text%22%3A%22*%E7%A6%81%E7%94%A8SleepProxyClient%22%7D%2C%7B%22x%22%3A166.375%2C%22y%22%3A769.8625%2C%22width%22%3A181.5%2C%22height%22%3A25.71250000000009%2C%22text%22%3A%22%E8%AF%BB%E5%8F%96daemon%E6%97%A5%E5%BF%97%22%7D%2C%7B%22x%22%3A506.6875%2C%22y%22%3A769.8625%2C%22width%22%3A143.6875%2C%22height%22%3A30.25%2C%22text%22%3A%22%E8%AF%BB%E5%8F%96%E5%BC%95%E5%AF%BC%E6%97%A5%E5%BF%97%22%7D%2C%7B%22x%22%3A108.9%2C%22y%22%3A815.2375%2C%22width%22%3A190.57500000000002%2C%22height%22%3A25.71250000000009%2C%22text%22%3A%22%E8%82%83%E5%8F%98CIoverDaemon%22%7D%2C%7B%22x%22%3A104.3625%2C%22y%22%3A859.10004%2C%22width%22%3A187.55%2C%22height%22%3A31.76245999999992%2C%22text%22%3A%22CloverDaemon%22%7D%2C%7B%22x%22%3A614.075%2C%22y%22%3A859.10004%2C%22width%22%3A58.987499999999955%2C%22height%22%3A33.274959999999965%2C%22text%22%3A%22%E5%AE%89%E8%A3%85%22%7D%2C%7B%22x%22%3A429.55002%2C%22y%22%3A863.6375%2C%22width%22%3A52.9375%2C%22height%22%3A27.22499999999991%2C%22text%22%3A%22%E5%8D%B8%E8%BD%BD%22%7D%2C%7B%22x%22%3A99.825005%2C%22y%22%3A928.675%2C%22width%22%3A58.987494999999996%2C%22height%22%3A30.2500500000001%2C%22text%22%3A%22%E6%9B%B4%E6%96%B0%22%7D%2C%7B%22x%22%3A98.3125%2C%22y%22%3A972.53754%2C%22width%22%3A101.33751000000001%2C%22height%22%3A24.20001000000002%2C%22text%22%3A%22%E6%A3%80%E6%9F%A5%E6%9B%B4%E6%96%B0%3A%22%7D%2C%7B%22x%22%3A508.2%2C%22y%22%3A1023.9625%2C%22width%22%3A110.41249999999997%2C%22height%22%3A28.737600000000043%2C%22text%22%3A%22%E7%8E%B0%E5%9C%A8%E6%A3%80%E6%9F%A5%22%7D%2C%7B%22x%22%3A117.975%2C%22y%22%3A1025.475%2C%22width%22%3A52.9375%2C%22height%22%3A27.22510000000011%2C%22text%22%3A%22%E6%AF%8F%E6%9C%88%22%7D%2C%7B%22x%22%3A384.17502%2C%22y%22%3A1081.4375%2C%22width%22%3A49.91247999999996%2C%22height%22%3A25.71250000000009%2C%22text%22%3A%22N%2FA%22%7D%2C%7B%22x%22%3A102.85%2C%22y%22%3A1163.1125%2C%22width%22%3A149.73751000000001%2C%22height%22%3A24.200000000000045%2C%22text%22%3A%22%E6%9C%80%E8%BF%91%E6%A3%80%E6%9F%A5%3A%E4%BB%8E%E4%B8%8D%22%7D%2C%7B%22x%22%3A300.98752%2C%22y%22%3A1202.4375%2C%22width%22%3A214.77498000000003%2C%22height%22%3A31.76260000000002%2C%22text%22%3A%22%E5%AE%89%E8%A3%85Clover5108%22%7D%2C%7B%22x%22%3A136.125%2C%22y%22%3A1275.0375%2C%22width%22%3A137.6375%2C%22height%22%3A28.737500000000182%2C%22text%22%3A%22%E7%99%BB%E5%BD%95%E6%97%B6%E5%90%AF%E5%8A%A8%22%7D%2C%7B%22x%22%3A363%2C%22y%22%3A1323.4375%2C%22width%22%3A108.89999999999998%2C%22height%22%3A24.20010000000002%2C%22text%22%3A%22v1.16Beta%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E7%9B%AE%E5%89%8DClover%E7%89%88%E6%9C%AC%3AN%2FA%20%E5%BC%95%E5%AF%BC%E8%AE%BE%E5%A4%87%3A%20N%2FA%20config%E8%B7%AF%E5%BE%84%3A%20N%2FA%20%E6%8C%82%E8%BD%BD%20disk2s1%2CFAT32....%20(ESP)%20%E5%8D%B8%E8%BD%BD%20*%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD%20*%E8%AE%A9%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%8F%AF%E8%AF%BB%E5%86%99%20*%E7%A6%81%E7%94%A8SleepProxyClient%20%E8%AF%BB%E5%8F%96daemon%E6%97%A5%E5%BF%97%20%E8%AF%BB%E5%8F%96%E5%BC%95%E5%AF%BC%E6%97%A5%E5%BF%97%20%E8%82%83%E5%8F%98CIoverDaemon%20CloverDaemon%20%E5%AE%89%E8%A3%85%20%E5%8D%B8%E8%BD%BD%20%E6%9B%B4%E6%96%B0%20%E6%A3%80%E6%9F%A5%E6%9B%B4%E6%96%B0%3A%20%E7%8E%B0%E5%9C%A8%E6%A3%80%E6%9F%A5%20%E6%AF%8F%E6%9C%88%20N%2FA%20%E6%9C%80%E8%BF%91%E6%A3%80%E6%9F%A5%3A%E4%BB%8E%E4%B8%8D%20%E5%AE%89%E8%A3%85Clover5108%20%E7%99%BB%E5%BD%95%E6%97%B6%E5%90%AF%E5%8A%A8%20v1.16Beta%22%2C%22margin%22%3A%7B%22top%22%3Afalse%2C%22bottom%22%3Afalse%7D%2C%22width%22%3A414%2C%22height%22%3A726%7D\"></card></p><h4 data-lake-id=\"ad95d09d8759cbd5ee047cc673c77b08\" id=\"ljhj9\">现成的 EFI</h4><p data-lake-id=\"1a75812699c28ea41bff52e5d8a6a545\">现在启动盘还无法在 PC 设备上启动，需要把相应的配置和驱动等，由于在网上已经有现成对应设备的 <code>EFI</code> ，我做了一些适配后放到了 <a href=\"https://github.com/xcodebuild/nuc6i7kyk-macos-efi\" target=\"_blank\">https://github.com/xcodebuild/nuc6i7kyk-macos-efi</a>，直接把这个仓库下载下来后复制到 U 盘的 ESI 分区中。</p><p data-lake-id=\"09ce363b8c1f08af147db8cb10802f87\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1586184558636-5747aec5-59fe-4c6b-9b26-4fdc51367bae.png%22%2C%22originWidth%22%3A1764%2C%22originHeight%22%3A1096%2C%22name%22%3A%22image.png%22%2C%22size%22%3A523396%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A874.64996%2C%22y%22%3A82.6875%2C%22width%22%3A44.09998000000007%2C%22height%22%3A27.5625%2C%22text%22%3A%22EFI%22%7D%2C%7B%22x%22%3A1085.9624%2C%22y%22%3A130.4625%2C%22width%22%3A56.96250000000009%2C%22height%22%3A31.237499999999983%2C%22text%22%3A%22%E6%90%9C%E7%B4%A2%22%7D%2C%7B%22x%22%3A373.01248%2C%22y%22%3A192.9375%2C%22width%22%3A49.61252000000002%2C%22height%22%3A27.5625%2C%22text%22%3A%22%E5%90%8D%E7%A7%B0%22%7D%2C%7B%22x%22%3A1343.2124%2C%22y%22%3A192.9375%2C%22width%22%3A53.28760000000011%2C%22height%22%3A29.400000000000006%2C%22text%22%3A%22%E5%A4%A7%E5%B0%8F%22%7D%2C%7B%22x%22%3A1537.9874%2C%22y%22%3A192.9375%2C%22width%22%3A47.775100000000066%2C%22height%22%3A25.72498999999999%2C%22text%22%3A%22%E7%A7%8D%E7%B1%BB%22%7D%2C%7B%22x%22%3A986.7375%2C%22y%22%3A194.775%2C%22width%22%3A91.87490000000003%2C%22height%22%3A25.724999999999994%2C%22text%22%3A%22%E4%BF%AE%E6%94%B9%E6%97%A5%E6%9C%9F%22%7D%2C%7B%22x%22%3A134.1375%2C%22y%22%3A200.28749%2C%22width%22%3A91.875%2C%22height%22%3A27.5625%2C%22text%22%3A%22%E4%B8%AA%E4%BA%BA%E6%94%B6%E8%97%8F%22%7D%2C%7B%22x%22%3A1534.3125%2C%22y%22%3A238.87498%2C%22width%22%3A79.01250000000005%2C%22height%22%3A27.562520000000006%2C%22text%22%3A%22%E6%96%87%E4%BB%B6%E5%A4%B9%22%7D%2C%7B%22x%22%3A981.225%2C%22y%22%3A240.7125%2C%22width%22%3A156.1874999999999%2C%22height%22%3A25.724999999999994%2C%22text%22%3A%22%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%22%7D%2C%7B%22x%22%3A450.18747%2C%22y%22%3A242.54999%2C%22width%22%3A42.26250999999996%2C%22height%22%3A23.887509999999992%2C%22text%22%3A%22EFI%22%7D%2C%7B%22x%22%3A181.91249%2C%22y%22%3A244.3875%2C%22width%22%3A112.08751000000001%2C%22height%22%3A31.23750000000001%2C%22text%22%3A%22%E5%85%B7%E6%9C%80%E8%BF%91%E9%A1%B9%E7%9B%AE%22%7D%2C%7B%22x%22%3A981.225%2C%22y%22%3A279.3%2C%22width%22%3A159.86239999999987%2C%22height%22%3A25.724999999999966%2C%22text%22%3A%22%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%22%7D%2C%7B%22x%22%3A1534.3125%2C%22y%22%3A277.4625%2C%22width%22%3A75.33739999999989%2C%22height%22%3A27.5625%2C%22text%22%3A%22%E6%96%87%E4%BB%B6%E5%A4%B9%22%7D%2C%7B%22x%22%3A492.44998%2C%22y%22%3A281.13748%2C%22width%22%3A71.66251999999997%2C%22height%22%3A22.050020000000018%2C%22text%22%3A%22BOOT%22%7D%2C%7B%22x%22%3A178.23749%2C%22y%22%3A295.8375%2C%22width%22%3A119.43751%2C%22height%22%3A29.400000000000034%2C%22text%22%3A%224%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%22%7D%2C%7B%22x%22%3A979.38745%2C%22y%22%3A314.2125%2C%22width%22%3A159.86255000000006%2C%22height%22%3A27.5625%2C%22text%22%3A%22%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%22%7D%2C%7B%22x%22%3A1532.475%2C%22y%22%3A314.2125%2C%22width%22%3A80.85000000000014%2C%22height%22%3A29.400000000000034%2C%22text%22%3A%22%E6%96%87%E4%BB%B6%E5%A4%B9%22%7D%2C%7B%22x%22%3A496.12497%2C%22y%22%3A317.88748%2C%22width%22%3A38.587489999999946%2C%22height%22%3A22.050020000000018%2C%22text%22%3A%22Oc%22%7D%2C%7B%22x%22%3A183.75%2C%22y%22%3A349.125%2C%22width%22%3A58.79999000000001%2C%22height%22%3A27.5625%2C%22text%22%3A%22%E6%A1%8C%E9%9D%A2%22%7D%2C%7B%22x%22%3A981.225%2C%22y%22%3A352.8%2C%22width%22%3A165.3749999999999%2C%22height%22%3A25.724999999999966%2C%22text%22%3A%22%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%22%7D%2C%7B%22x%22%3A1534.3125%2C%22y%22%3A352.8%2C%22width%22%3A80.84999999999991%2C%22height%22%3A25.724999999999966%2C%22text%22%3A%22%E6%96%87%E4%BB%B6%E5%A4%B9%22%7D%2C%7B%22x%22%3A534.71246%2C%22y%22%3A354.63748%2C%22width%22%3A58.79998999999998%2C%22height%22%3A27.5625%2C%22text%22%3A%22ACPI%22%7D%2C%7B%22x%22%3A1534.3125%2C%22y%22%3A389.55%2C%22width%22%3A102.89989999999989%2C%22height%22%3A29.39997999999997%2C%22text%22%3A%22%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8%22%7D%2C%7B%22x%22%3A977.55%2C%22y%22%3A393.22498%2C%22width%22%3A303.1874%2C%22height%22%3A27.5625%2C%22text%22%3A%222020%E5%B9%B43%E6%9C%882%E6%97%A5%E4%B8%8B%E5%8D%8812%3A35%22%7D%2C%7B%22x%22%3A538.38745%2C%22y%22%3A395.0625%2C%22width%22%3A130.46255000000008%2C%22height%22%3A23.887479999999982%2C%22text%22%3A%22config-plist%22%7D%2C%7B%22x%22%3A1431.4125%2C%22y%22%3A395.0625%2C%22width%22%3A69.82490000000007%2C%22height%22%3A22.05000000000001%2C%22text%22%3A%2219KB%22%7D%2C%7B%22x%22%3A181.91249%2C%22y%22%3A400.57498%2C%22width%22%3A64.3125%2C%22height%22%3A29.400000000000034%2C%22text%22%3A%22%E6%96%87%E7%A8%BF%22%7D%2C%7B%22x%22%3A1534.3125%2C%22y%22%3A428.13748%2C%22width%22%3A77.17489999999998%2C%22height%22%3A29.400000000000034%2C%22text%22%3A%22%E6%96%87%E4%BB%B6%E5%A4%B9%22%7D%2C%7B%22x%22%3A979.38745%2C%22y%22%3A429.97498%2C%22width%22%3A178.23755000000006%2C%22height%22%3A25.724999999999966%2C%22text%22%3A%22%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%22%7D%2C%7B%22x%22%3A538.38745%2C%22y%22%3A431.8125%2C%22width%22%3A82.6875%2C%22height%22%3A23.887479999999982%2C%22text%22%3A%22Drivers%22%7D%2C%7B%22x%22%3A192.9375%2C%22y%22%3A453.8625%2C%22width%22%3A53.28748999999999%2C%22height%22%3A29.39997999999997%2C%22text%22%3A%22%E4%B8%8B%E8%BD%BD%22%7D%2C%7B%22x%22%3A1536.1499%2C%22y%22%3A466.72498%2C%22width%22%3A75.33750000000009%2C%22height%22%3A27.5625%2C%22text%22%3A%22%E6%96%87%E4%BB%B6%E5%A4%B9%22%7D%2C%7B%22x%22%3A977.55%2C%22y%22%3A468.56247%2C%22width%22%3A165.37490000000003%2C%22height%22%3A25.725009999999997%2C%22text%22%3A%22%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%888%3A27%22%7D%2C%7B%22x%22%3A536.55%2C%22y%22%3A470.4%2C%22width%22%3A64.3125%2C%22height%22%3A23.88748000000004%2C%22text%22%3A%22Kexts%22%7D%2C%7B%22x%22%3A1534.3125%2C%22y%22%3A501.63748%2C%22width%22%3A55.125%2C%22height%22%3A31.237520000000018%2C%22text%22%3A%22%E6%96%87%E7%A8%BF%22%7D%2C%7B%22x%22%3A1409.3624%2C%22y%22%3A505.31247%2C%22width%22%3A90.03749999999991%2C%22height%22%3A25.725030000000004%2C%22text%22%3A%22323KB%22%7D%2C%7B%22x%22%3A975.71246%2C%22y%22%3A507.15%2C%22width%22%3A286.64994%2C%22height%22%3A25.725000000000023%2C%22text%22%3A%222020%E5%B9%B43%E6%9C%882%E6%97%A5%E4%B8%8B%E5%8D%8812%3A35%22%7D%2C%7B%22x%22%3A536.55%2C%22y%22%3A508.9875%2C%22width%22%3A154.34996%2C%22height%22%3A22.05000000000001%2C%22text%22%3A%22Opencore.efi%22%7D%2C%7B%22x%22%3A126.7875%2C%22y%22%3A518.175%2C%22width%22%3A44.099999999999994%2C%22height%22%3A25.72496000000001%2C%22text%22%3A%22%E4%BD%8D%E7%BD%AE%22%7D%2C%7B%22x%22%3A975.71246%2C%22y%22%3A542.0625%2C%22width%22%3A306.8625400000001%2C%22height%22%3A29.399959999999965%2C%22text%22%3A%222020%E5%B9%B43%E6%9C%882%E6%97%A5%E4%B8%8B%E5%8D%8812%3A35%22%7D%2C%7B%22x%22%3A1532.475%2C%22y%22%3A543.89996%2C%22width%22%3A82.6875%2C%22height%22%3A29.40003999999999%2C%22text%22%3A%22%E6%96%87%E4%BB%B6%E5%A4%B9%22%7D%2C%7B%22x%22%3A538.38745%2C%22y%22%3A549.4125%2C%22width%22%3A62.47505000000001%2C%22height%22%3A20.212499999999977%2C%22text%22%3A%22Tools%22%7D%2C%7B%22x%22%3A189.2625%2C%22y%22%3A565.94995%2C%22width%22%3A112.08748000000003%2C%22height%22%3A23.88751000000002%2C%22text%22%3A%22lnstall..%22%7D%2C%7B%22x%22%3A977.55%2C%22y%22%3A580.64996%2C%22width%22%3A305.0250000000001%2C%22height%22%3A29.40003999999999%2C%22text%22%3A%222020%E5%B9%B43%E6%9C%882%E6%97%A5%E4%B8%8B%E5%8D%8812%3A35%22%7D%2C%7B%22x%22%3A1392.825%2C%22y%22%3A582.4875%2C%22width%22%3A102.89999999999986%2C%22height%22%3A27.5625%2C%22text%22%3A%22610%E5%AD%97%E8%8A%82%22%7D%2C%7B%22x%22%3A1530.6375%2C%22y%22%3A582.4875%2C%22width%22%3A55.125%2C%22height%22%3A27.5625%2C%22text%22%3A%22%E6%96%87%E7%A8%BF%22%7D%2C%7B%22x%22%3A496.12497%2C%22y%22%3A584.32495%2C%22width%22%3A145.16253%2C%22height%22%3A25.72505000000001%2C%22text%22%3A%22README.Md%22%7D%2C%7B%22x%22%3A189.2625%2C%22y%22%3A615.5625%2C%22width%22%3A42.26250000000002%2C%22height%22%3A25.725000000000023%2C%22text%22%3A%22EFI%22%7D%2C%7B%22x%22%3A124.95%2C%22y%22%3A681.71246%2C%22width%22%3A47.77498999999999%2C%22height%22%3A22.04998999999998%2C%22text%22%3A%22%E6%A0%87%E7%AD%BE%22%7D%2C%7B%22x%22%3A187.42499%2C%22y%22%3A723.975%2C%22width%22%3A56.96250999999998%2C%22height%22%3A27.5625%2C%22text%22%3A%22%E7%BA%A2%E8%89%B2%22%7D%2C%7B%22x%22%3A189.2625%2C%22y%22%3A777.26245%2C%22width%22%3A53.28749000000002%2C%22height%22%3A25.72505000000001%2C%22text%22%3A%22%E6%A9%99%E8%89%B2%22%7D%2C%7B%22x%22%3A189.2625%2C%22y%22%3A828.71246%2C%22width%22%3A55.125%2C%22height%22%3A27.5625%2C%22text%22%3A%22%E9%BB%84%E8%89%B2%22%7D%2C%7B%22x%22%3A185.5875%2C%22y%22%3A882%2C%22width%22%3A56.96249%2C%22height%22%3A25.725000000000023%2C%22text%22%3A%22%E7%BB%BF%E8%89%B2%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22EFI%20%E6%90%9C%E7%B4%A2%20%E5%90%8D%E7%A7%B0%20%E5%A4%A7%E5%B0%8F%20%E7%A7%8D%E7%B1%BB%20%E4%BF%AE%E6%94%B9%E6%97%A5%E6%9C%9F%20%E4%B8%AA%E4%BA%BA%E6%94%B6%E8%97%8F%20%E6%96%87%E4%BB%B6%E5%A4%B9%20%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%20EFI%20%E5%85%B7%E6%9C%80%E8%BF%91%E9%A1%B9%E7%9B%AE%20%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%20%E6%96%87%E4%BB%B6%E5%A4%B9%20BOOT%204%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%20%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%20%E6%96%87%E4%BB%B6%E5%A4%B9%20Oc%20%E6%A1%8C%E9%9D%A2%20%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%20%E6%96%87%E4%BB%B6%E5%A4%B9%20ACPI%20%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8%202020%E5%B9%B43%E6%9C%882%E6%97%A5%E4%B8%8B%E5%8D%8812%3A35%20config-plist%2019KB%20%E6%96%87%E7%A8%BF%20%E6%96%87%E4%BB%B6%E5%A4%B9%20%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%20Drivers%20%E4%B8%8B%E8%BD%BD%20%E6%96%87%E4%BB%B6%E5%A4%B9%20%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%888%3A27%20Kexts%20%E6%96%87%E7%A8%BF%20323KB%202020%E5%B9%B43%E6%9C%882%E6%97%A5%E4%B8%8B%E5%8D%8812%3A35%20Opencore.efi%20%E4%BD%8D%E7%BD%AE%202020%E5%B9%B43%E6%9C%882%E6%97%A5%E4%B8%8B%E5%8D%8812%3A35%20%E6%96%87%E4%BB%B6%E5%A4%B9%20Tools%20lnstall..%202020%E5%B9%B43%E6%9C%882%E6%97%A5%E4%B8%8B%E5%8D%8812%3A35%20610%E5%AD%97%E8%8A%82%20%E6%96%87%E7%A8%BF%20README.Md%20EFI%20%E6%A0%87%E7%AD%BE%20%E7%BA%A2%E8%89%B2%20%E6%A9%99%E8%89%B2%20%E9%BB%84%E8%89%B2%20%E7%BB%BF%E8%89%B2%22%2C%22margin%22%3A%7B%22top%22%3Afalse%2C%22bottom%22%3Afalse%7D%2C%22width%22%3A882%2C%22height%22%3A548%7D\"></card></p><h2 data-lake-id=\"a068d277958629b4a3a4b44677027edf\" id=\"lmYIL\">安装</h2><h3 data-lake-id=\"62fec6a3b35b7afa8df9cb1d8442936d\" id=\"ayhl6\">设置</h3><p data-lake-id=\"90814a1ff4e633d2586729a3906de426\">需要在骷髅峡谷的 BIOS 设置中关掉不兼容的设置</p><ul data-lake-id=\"4b93248a1534d8650ecaad3919a857c7\"><li data-lake-id=\"97ece2bb671c070ba140a2afe558d277\">Power-&gt;Secondary Power Settings, “Wake on LAN from S4/S5”, 设置成 “Stay Off”</li><li data-lake-id=\"84abb48428238f2c7e72e212742168cf\">Devices-&gt;Video, “IGD Minimum Memory” 设置为 64mb</li><li data-lake-id=\"16530ea1b8cb74eab2dfb4d4218a4a34\">Devices-&gt;Video, “IGD Aperture Size” 设置为 256mb</li><li data-lake-id=\"658b583dfa7b64cc9935f887483c8b0d\">Boot-&gt;Secure Boot, “Secure Boot” 设置为 disabled</li><li data-lake-id=\"92de44ecf5c59ee631fe4793ae9f007a\">Security-&gt;Security Features, “Execute Disable Bit” 设置为 enabled.</li><li data-lake-id=\"9d78661506c71977d6e5261d42ad42c5\">Security-&gt;Security Features, “VT-d” 设置为 disabled</li></ul><h3 data-lake-id=\"a5a7be4a5ba577bd2ef4014e7a1a3b08\" id=\"feYmw\">U 盘引导安装</h3><p data-lake-id=\"5071b27ab1cebedd3aa23e442c621b16\">安装部分不用太多说，把 U 盘插到骷髅峡谷上，启动时选择 <code>Catalina Installer</code> 进入安装，进入到安装界面后先用磁盘工具把相应的分区（或者硬盘）格式化成 APFS 和 GUID。</p><p data-lake-id=\"3ab4a5ac7d79a6d77c4dbb600c8b52b5\"><br /></p><p data-lake-id=\"44baa72312b8385fda6c4288c5801111\">然后进行安装即可，过程中会经过几次重启，每次都选 U 盘以外的 <code>Installer</code> 分区。</p><h3 data-lake-id=\"8ab4411aacaa9bdd0a7478431e8af533\" id=\"5i8j8\">启动</h3><p data-lake-id=\"535f85f0267bf7070ec88496144fa220\">安装完成后暂时还是需要 U 盘，因为我们刚才安装的是白苹果系统，不具备在骷髅峡谷上启动的能力。我们可以通过 U 盘引导进入系统后，仍然安装上面的 Clover 应用来挂载硬盘的 EFI 分区。</p><p data-lake-id=\"958fc12e84a445e749d4b1c73deeb9f9\"><br /></p><p data-lake-id=\"a9137ebb8ce0532c9527ad8e4954cb78\">然后把 U 盘的 EFI 分区原样复制到硬盘的 EFI 分区，然后我们就可以摆脱 U 盘直接启动了。</p><p data-lake-id=\"7076f46bf1d67df0669f068196168087\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1586183143410-ed293857-c3b0-4af5-aa64-09d6ae8b748b.png%22%2C%22originWidth%22%3A1396%2C%22originHeight%22%3A892%2C%22name%22%3A%22image.png%22%2C%22size%22%3A485582%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A520.5917%2C%22y%22%3A100.337494%2C%22width%22%3A66.89164000000005%2C%22height%22%3A24.72083599999999%2C%22text%22%3A%22%E6%98%BE%E7%A4%BA%E5%99%A8%22%7D%2C%7B%22x%22%3A599.11664%2C%22y%22%3A100.337494%2C%22width%22%3A343.18336%2C%22height%22%3A26.175005999999996%2C%22text%22%3A%22%E6%92%AD%E5%82%A8%E5%AD%98%E7%A9%BA%E9%97%B4%E5%86%85%E5%AD%98%E6%94%AF%E6%8C%81%E6%9C%8D%E5%8A%A1%22%7D%2C%7B%22x%22%3A440.6125%2C%22y%22%3A101.791664%2C%22width%22%3A45.07914999999997%2C%22height%22%3A21.8125%2C%22text%22%3A%22%E6%A6%82%E8%A7%88%22%7D%2C%7B%22x%22%3A613.6583%2C%22y%22%3A241.39166%2C%22width%22%3A344.63749999999993%2C%22height%22%3A40.716639999999984%2C%22text%22%3A%22macosCatalina%22%7D%2C%7B%22x%22%3A618.0208%2C%22y%22%3A290.8333%2C%22width%22%3A122.14999999999998%2C%22height%22%3A23.266680000000008%2C%22text%22%3A%22%E7%89%88%E6%9C%AC10.15.4%22%7D%2C%7B%22x%22%3A616.56665%2C%22y%22%3A357.72498%2C%22width%22%3A53.80415000000005%2C%22height%22%3A18.904169999999965%2C%22text%22%3A%22iMac%22%7D%2C%7B%22x%22%3A652.9208%2C%22y%22%3A392.62497%2C%22width%22%3A295.19584%2C%22height%22%3A23.266689999999983%2C%22text%22%3A%22%E5%A4%84%E7%90%86%E5%99%A82.6GHz%E5%9B%9B%E6%A0%B8IntelCore7%22%7D%2C%7B%22x%22%3A634.01666%2C%22y%22%3A433.34164%2C%22width%22%3A305.37494000000004%2C%22height%22%3A21.8125%2C%22text%22%3A%22%E5%86%85%E5%AD%9816GB2400MHZDDR4%22%7D%2C%7B%22x%22%3A623.83746%2C%22y%22%3A471.15%2C%22width%22%3A427.52494%2C%22height%22%3A21.8125%2C%22text%22%3A%22%E5%9B%BE%E5%BD%A2%E5%8D%A1lntellrisProGraphics5801536MB%22%7D%2C%7B%22x%22%3A636.925%2C%22y%22%3A507.50415%2C%22width%22%3A235.57494000000008%2C%22height%22%3A23.266650000000027%2C%22text%22%3A%22%E5%BA%8F%E5%88%97%E5%8F%B7FFEEDDCCBBAA%22%7D%2C%7B%22x%22%3A629.6541%2C%22y%22%3A578.7583%2C%22width%22%3A100.33753999999999%2C%22height%22%3A26.175000000000068%2C%22text%22%3A%22%E7%B3%BB%E7%BB%9F%E6%8A%A5%E5%91%8A...%22%7D%2C%7B%22x%22%3A782.3416%2C%22y%22%3A580.21246%2C%22width%22%3A110.51670000000001%2C%22height%22%3A24.720840000000067%2C%22text%22%3A%22%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0...%22%7D%2C%7B%22x%22%3A415.89166%2C%22y%22%3A706.725%2C%22width%22%3A526.40834%2C%22height%22%3A24.72079999999994%2C%22text%22%3A%22TM%E5%92%8C19832020AppleInc.%E7%95%99%E4%B8%80%E5%88%87%E6%9D%83%E5%88%A9.%E8%AE%B8%E5%8F%AF%E5%8D%8F%E8%AE%AE%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E6%98%BE%E7%A4%BA%E5%99%A8%20%E6%92%AD%E5%82%A8%E5%AD%98%E7%A9%BA%E9%97%B4%E5%86%85%E5%AD%98%E6%94%AF%E6%8C%81%E6%9C%8D%E5%8A%A1%20%E6%A6%82%E8%A7%88%20macosCatalina%20%E7%89%88%E6%9C%AC10.15.4%20iMac%20%E5%A4%84%E7%90%86%E5%99%A82.6GHz%E5%9B%9B%E6%A0%B8IntelCore7%20%E5%86%85%E5%AD%9816GB2400MHZDDR4%20%E5%9B%BE%E5%BD%A2%E5%8D%A1lntellrisProGraphics5801536MB%20%E5%BA%8F%E5%88%97%E5%8F%B7FFEEDDCCBBAA%20%E7%B3%BB%E7%BB%9F%E6%8A%A5%E5%91%8A...%20%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0...%20TM%E5%92%8C19832020AppleInc.%E7%95%99%E4%B8%80%E5%88%87%E6%9D%83%E5%88%A9.%E8%AE%B8%E5%8F%AF%E5%8D%8F%E8%AE%AE%22%2C%22margin%22%3A%7B%22top%22%3Afalse%2C%22bottom%22%3Afalse%7D%2C%22width%22%3A513%2C%22height%22%3A328%7D\"></card></p><h2 data-lake-id=\"9424648192ef071c81a72132b811851c\" id=\"CgIF8\">其他</h2><p data-lake-id=\"9b1debd62b3db562ef36fad2349f2880\">其中内置 Wifi 是不可用的（无解），内置蓝牙有解但是懒得折腾了。可以通过淘宝买个几十块的 USB 接口的解决，注意 macOS 的兼容性。</p><p data-lake-id=\"624820a5267bbf42ab029dfcfbc58b7d\"><br /></p><p data-lake-id=\"6c27e65c2aaeec86b58016bde210f8a9\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1586185139192-a8f45e9a-5811-4b36-8c2b-c1f25f77b0a1.png%22%2C%22originWidth%22%3A1282%2C%22originHeight%22%3A632%2C%22name%22%3A%22image.png%22%2C%22size%22%3A185833%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1113.7375%2C%22y%22%3A49.410416%2C%22width%22%3A89.47289999999998%2C%22height%22%3A29.379164000000003%2C%22text%22%3A%22%E6%8F%90%E9%80%9F%E5%90%8E%22%7D%2C%7B%22x%22%3A46.739582%2C%22y%22%3A50.745834%2C%22width%22%3A106.83333800000001%2C%22height%22%3A38.727081999999996%2C%22text%22%3A%22%E4%B8%8B%E8%BD%BDMbp%22%7D%2C%7B%22x%22%3A1119.0791%2C%22y%22%3A109.504166%2C%22width%22%3A110.83960000000002%2C%22height%22%3A29.379164000000003%2C%22text%22%3A%22%E5%BD%93%E5%89%8D%E9%80%9F%E5%BA%A6%22%7D%2C%7B%22x%22%3A50.745834%2C%22y%22%3A120.1875%2C%22width%22%3A162.920836%2C%22height%22%3A60.09375%2C%22text%22%3A%22114.67%22%7D%2C%7B%22x%22%3A1117.7438%2C%22y%22%3A257.7354%2C%22width%22%3A113.51040000000012%2C%22height%22%3A29.37919999999997%2C%22text%22%3A%22%E5%BD%93%E5%89%8D%E9%80%9F%E5%BA%A6%22%7D%2C%7B%22x%22%3A49.410416%2C%22y%22%3A260.40625%2C%22width%22%3A165.591664%2C%22height%22%3A41.39792%2C%22text%22%3A%22%E4%B8%8A%E4%BC%A0Mbps%22%7D%2C%7B%22x%22%3A94.81458%2C%22y%22%3A344.5375%2C%22width%22%3A93.47916999999998%2C%22height%22%3A42.73334%2C%22text%22%3A%229.34%22%7D%2C%7B%22x%22%3A599.60205%2C%22y%22%3A492.76874%2C%22width%22%3A129.53545000000008%2C%22height%22%3A33.385459999999966%2C%22text%22%3A%22%E6%8A%96%E5%8A%A8%2Fms%22%7D%2C%7B%22x%22%3A44.06875%2C%22y%22%3A494.10416%2C%22width%22%3A144.225%2C%22height%22%3A30.714540000000056%2C%22text%22%3A%22PING%2Fms%22%7D%2C%7B%22x%22%3A1135.1041%2C%22y%22%3A494.10416%2C%22width%22%3A92.14380000000006%2C%22height%22%3A30.714540000000056%2C%22text%22%3A%22%E4%B8%A2%E5%8C%85%25%22%7D%2C%7B%22x%22%3A1171.1604%2C%22y%22%3A558.20416%2C%22width%22%3A26.708399999999983%2C%22height%22%3A26.708399999999983%2C%22text%22%3A%220%22%7D%2C%7B%22x%22%3A80.125%2C%22y%22%3A562.2104%2C%22width%22%3A88.13749999999999%2C%22height%22%3A28.043749999999932%2C%22text%22%3A%2223.74%22%7D%2C%7B%22x%22%3A628.98126%2C%22y%22%3A564.8812%2C%22width%22%3A66.77084000000002%2C%22height%22%3A26.708399999999983%2C%22text%22%3A%220.90%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E6%8F%90%E9%80%9F%E5%90%8E%20%E4%B8%8B%E8%BD%BDMbp%20%E5%BD%93%E5%89%8D%E9%80%9F%E5%BA%A6%20114.67%20%E5%BD%93%E5%89%8D%E9%80%9F%E5%BA%A6%20%E4%B8%8A%E4%BC%A0Mbps%209.34%20%E6%8A%96%E5%8A%A8%2Fms%20PING%2Fms%20%E4%B8%A2%E5%8C%85%25%200%2023.74%200.90%22%2C%22margin%22%3A%7B%22top%22%3Afalse%2C%22bottom%22%3Afalse%7D%2C%22width%22%3A641%2C%22height%22%3A316%7D\"></card></p><p data-lake-id=\"7dd2e8c755d821dce50eaca72fa06384\"><br /></p><p data-lake-id=\"cb318b709ee61b3d20e2b740f47add89\">从测速看外接了一个廉价 USB Hub 上的 USB 网卡连接 5G Wifi 似乎没有什么问题。</p><h2 data-lake-id=\"dc7185a3ab79c046428d09ad0511d298\" id=\"URUlc\">参考</h2><ul data-lake-id=\"27ddf69762a15bb104c431aa1de8e4af\"><li data-lake-id=\"8211cb5f003f503ed01b0073d45adb5d\">BIOS 设置部分参考的 <a href=\"https://blog.tms.im/2019/03/01/nuc6i7kyk-hackintosh-mojave\" target=\"_blank\">https://blog.tms.im/2019/03/01/nuc6i7kyk-hackintosh-mojave</a></li><li data-lake-id=\"7667ab61af34642dd4ea3d7814bc9c99\">EFI 修改自 <a href=\"https://github.com/furui/skull-canyon-efi\" target=\"_blank\">https://github.com/furui/skull-canyon-efi</a></li></ul>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"f7d3f1a2df630093ef74a4f66a5bd6e8\">手头上有个骷髅峡谷一代的盒子（ <code>nuc6i7kyk</code> ），之前一直用的是 <code>Windows 10</code> ，然而由于工作用的是 Macbook Pro，环境切来切去的总是不适应。上网查了一下 <code>nuc6i7kyk</code> 的硬件用来黑苹果是比较合适的，于是花了点时间装了下黑苹果，总共大概花了四五个小时的时间（不过还有一些小瑕疵，也不纠结了）。</p><p data-lake-id=\"8deaa01d63c3baa0a973cf65d56fb11e\"><br /></p><p data-lake-id=\"22e059d11f595977fc2893da4d42f1b7\">系统的版本为 <code>macOS Catalina 10.15.4</code> ，引导程序选的是 <code>OpenCore</code> 。</p><p data-lake-id=\"8f774888ee8abc9c20a816411541378a\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1586185011143-7e282c51-7177-424e-a425-382d84b2ade1.png%22%2C%22originWidth%22%3A1560%2C%22originHeight%22%3A676%2C%22name%22%3A%22image.png%22%2C%22size%22%3A377314%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1153.75%2C%22y%22%3A94.25%2C%22width%22%3A53.625%2C%22height%22%3A34.125%2C%22text%22%3A%22Q%E6%85%A2%E7%B4%A2%22%7D%2C%7B%22x%22%3A724.75%2C%22y%22%3A99.125%2C%22width%22%3A112.12494000000004%2C%22height%22%3A29.25%2C%22text%22%3A%22%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0%22%7D%2C%7B%22x%22%3A599.625%2C%22y%22%3A206.37498%2C%22width%22%3A643.5%2C%22height%22%3A29.25%2C%22text%22%3A%22%E6%82%A8%E7%9A%84Mac%E8%BF%90%E8%A1%8C%E7%9A%84%E5%B7%B2%E6%98%AF%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%ACmacosCatalina10.15.4%22%7D%2C%7B%22x%22%3A583.375%2C%22y%22%3A250.24998%2C%22width%22%3A311.99994000000004%2C%22height%22%3A24.375020000000006%2C%22text%22%3A%22%E4%B8%8A%E6%AC%A1%E6%A3%80%E6%9F%A5%E6%97%B6%E9%97%B4%3A%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%8810%3A28%22%7D%2C%7B%22x%22%3A617.5%2C%22y%22%3A453.37497%2C%22width%22%3A376.99994000000004%2C%22height%22%3A29.25%2C%22text%22%3A%22%E8%87%AA%E5%8A%A8%E4%BF%9D%E6%8C%81%E6%88%91%E7%9A%84Mac%E8%BF%90%E8%A1%8C%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC%22%7D%2C%7B%22x%22%3A1244.75%2C%22y%22%3A453.37497%2C%22width%22%3A73.125%2C%22height%22%3A27.625%2C%22text%22%3A%22%E9%AB%98%E7%BA%A7...%22%7D%2C%7B%22x%22%3A248.62498%2C%22y%22%3A454.99997%2C%22width%22%3A110.50002%2C%22height%22%3A29.25%2C%22text%22%3A%22%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22Q%E6%85%A2%E7%B4%A2%20%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0%20%E6%82%A8%E7%9A%84Mac%E8%BF%90%E8%A1%8C%E7%9A%84%E5%B7%B2%E6%98%AF%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%ACmacosCatalina10.15.4%20%E4%B8%8A%E6%AC%A1%E6%A3%80%E6%9F%A5%E6%97%B6%E9%97%B4%3A%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%8810%3A28%20%E8%87%AA%E5%8A%A8%E4%BF%9D%E6%8C%81%E6%88%91%E7%9A%84Mac%E8%BF%90%E8%A1%8C%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC%20%E9%AB%98%E7%BA%A7...%20%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0%22%2C%22margin%22%3A%7B%22top%22%3Afalse%2C%22bottom%22%3Afalse%7D%2C%22width%22%3A780%2C%22height%22%3A338%7D\"></card></p><p data-lake-id=\"a52f98417af6320395c2c5b80cf51c81\">开箱即用的 <code>EFI</code> 见：<a href=\"https://github.com/xcodebuild/nuc6i7kyk-macos-efi\" target=\"_blank\">https://github.com/xcodebuild/nuc6i7kyk-macos-efi</a></p><h2 data-lake-id=\"8ff64fe47df316bca583aecf697cc4d4\" id=\"sYdO5\">目前的状态</h2><h3 data-lake-id=\"cb7964f0d2725c8286f52d4f262a15c9\" id=\"4tbQ1\">可用的</h3><ul data-lake-id=\"1c80394bf782adde99d991a587d0d9ad\"><li data-lake-id=\"efcb71761ae9287b6ad2225022bee899\">NVME</li><li data-lake-id=\"45da750fdb85d629d87d14fa0ec72480\">HDMI 输出 4K 60FPS 显示器和 HiDPI</li><li data-lake-id=\"366e1c860e552a050f0cb70b466a87f1\">有线网络</li><li data-lake-id=\"e45435cbe731a1e98b3930a139dddae0\">USB 3</li><li data-lake-id=\"5dbaf206f09551460d739ef3673a06e6\">休眠</li></ul><h3 data-lake-id=\"567c42b05a209d91976d0a3fea798084\" id=\"6fkX7\">不可用的</h3><ul data-lake-id=\"520bd203385dc4fe4574a13e113cce19\"><li data-lake-id=\"09507691701749ce62e0ef8bec24bbfb\">内置 Wifi（可以用外置的）</li><li data-lake-id=\"de1fdd1474c5f07b8c9131714fefea7b\">内置蓝牙（这点似乎有解但是感觉太麻烦就直接买了个外置的）</li><li data-lake-id=\"67836605ec127c7e1526ed2ceb9f827a\">DP 转 HDMI 似乎不可用</li></ul><h2 data-lake-id=\"d217e5c2bb75f3d464c743509501001f\" id=\"Ag4L9\">安装盘</h2><h3 data-lake-id=\"168f6490f88ff20dfb33fbd39075297c\" id=\"5Z4cI\">下载系统</h3><p data-lake-id=\"ccca4df953deff0d6feff93a75156c09\">推荐直接去 App Store 下载原版系统，如果需要特定版本从其他地方下载原版 DMG 即可。</p><p data-lake-id=\"c80d10f258d0402e6960bb45cc3b5c5b\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1586183581819-c83c88be-5ef0-43d9-81ec-af7b5f70ddec.png%22%2C%22originWidth%22%3A2584%2C%22originHeight%22%3A1672%2C%22name%22%3A%22image.png%22%2C%22size%22%3A1486704%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A998.60834%2C%22y%22%3A177.65%2C%22width%22%3A387.60006%2C%22height%22%3A43.066659999999985%2C%22text%22%3A%22macosCatalina%22%7D%2C%7B%22x%22%3A1017.45%2C%22y%22%3A239.55833%2C%22width%22%3A59.21659999999997%2C%22height%22%3A32.300009999999986%2C%22text%22%3A%22%E5%B7%A5%E5%85%B7%22%7D%2C%7B%22x%22%3A2182.9417%2C%22y%22%3A255.70833%2C%22width%22%3A56.52490000000034%2C%22height%22%3A29.608319999999992%2C%22text%22%3A%22%E8%8E%B7%E5%8F%96%22%7D%2C%7B%22x%22%3A1014.7583%2C%22y%22%3A282.625%2C%22width%22%3A75.36670000000004%2C%22height%22%3A29.60834%2C%22text%22%3A%22Apple%22%7D%2C%7B%22x%22%3A220.71666%2C%22y%22%3A285.31665%2C%22width%22%3A80.75001000000003%2C%22height%22%3A40.375%2C%22text%22%3A%22%E6%8E%A2%E7%B4%A2%22%7D%2C%7B%22x%22%3A223.40833%2C%22y%22%3A368.75833%2C%22width%22%3A78.05834000000002%2C%22height%22%3A45.75833%2C%22text%22%3A%22%E5%88%9B%E4%BD%9C%22%7D%2C%7B%22x%22%3A1017.45%2C%22y%22%3A387.6%2C%22width%22%3A306.84989999999993%2C%22height%22%3A45.758339999999976%2C%22text%22%3A%223.0%E5%A4%A7%E5%A5%B3%22%7D%2C%7B%22x%22%3A223.40833%2C%22y%22%3A452.19998%2C%22width%22%3A78.05834000000002%2C%22height%22%3A43.06668000000002%2C%22text%22%3A%22%E5%B7%A5%E4%BD%9C%22%7D%2C%7B%22x%22%3A223.40833%2C%22y%22%3A535.64166%2C%22width%22%3A80.74999999999997%2C%22height%22%3A40.375%2C%22text%22%3A%22%E6%B8%B8%E6%88%8F%22%7D%2C%7B%22x%22%3A220.71666%2C%22y%22%3A621.77496%2C%22width%22%3A83.44166999999999%2C%22height%22%3A43.06673999999998%2C%22text%22%3A%22%E5%BC%80%E5%8F%91%22%7D%2C%7B%22x%22%3A223.40833%2C%22y%22%3A705.2167%2C%22width%22%3A80.74999999999997%2C%22height%22%3A40.375%2C%22text%22%3A%22%E7%B1%BB%E5%88%AB%22%7D%2C%7B%22x%22%3A223.40833%2C%22y%22%3A788.6583%2C%22width%22%3A80.74999999999997%2C%22height%22%3A40.375%2C%22text%22%3A%22%E6%9B%B4%E6%96%B0%22%7D%2C%7B%22x%22%3A823.64996%2C%22y%22%3A912.475%2C%22width%22%3A449.5083400000001%2C%22height%22%3A26.91665999999998%2C%22text%22%3A%22%E5%BF%83%E5%9B%BD%E8%A5%BF%E6%89%BF%E7%9B%B4%E5%8F%B718%22%7D%2C%7B%22x%22%3A2282.5332%2C%22y%22%3A1262.3916%2C%22width%22%3A78.05840000000035%2C%22height%22%3A29.608400000000074%2C%22text%22%3A%22Apple%22%7D%2C%7B%22x%22%3A726.75%2C%22y%22%3A1273.1583%2C%22width%22%3A1157.4166%2C%22height%22%3A34.99170000000004%2C%22text%22%3A%22%E4%B8%8A%E4%BD%A0%E5%96%9C%E7%88%B1%E7%9A%84%E4%B8%80%E5%88%87%2C%E9%83%BD%E5%9B%A0mcosCatalina%E8%80%8C%E5%8F%98%E5%BE%97%E5%8F%B2%E7%9B%B8%E5%BD%A9.%E4%BD%A0%E5%8F%AF%E4%BB%A5%E4%BA%AB%E7%94%A8%E4%B8%A4%E6%AC%BE%E5%85%A8%E6%96%B0%E5%AA%92p%3B%E7%94%A8%E6%96%B0%E7%9A%84%E6%89%BEPp%22%7D%2C%7B%22x%22%3A2252.925%2C%22y%22%3A1305.4584%2C%22width%22%3A110.35819999999967%2C%22height%22%3A37.68319999999994%2C%22text%22%3A%22%E7%BD%91%E7%AB%99%E5%8F%A3%22%7D%2C%7B%22x%22%3A796.73334%2C%22y%22%3A1316.225%2C%22width%22%3A1138.57496%2C%22height%22%3A43.06660000000011%2C%22text%22%3A%22%E8%80%8C%E4%BD%A0%E5%B8%A6%E7%94%A8%E7%9A%84PdaPpp%E7%8E%B0%E5%9C%A8%E4%B9%9F%E6%9C%89%E4%BA%86M%E7%89%88.%E4%BD%A0%E5%AE%A4%E5%8F%AF%E4%BB%A5iPad%E5%BD%93%E4%BD%9C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E6%98%BE%E7%A4%BA%2C%E7%9C%A0%E5%BC%82%E9%9D%A2%E7%A9%BA%E4%B8%8E.%22%7D%2C%7B%22x%22%3A2247.5417%2C%22y%22%3A1356.6%2C%22width%22%3A78.05819999999994%2C%22height%22%3A34.99170000000004%2C%22text%22%3A%22%E6%94%AF%E6%8C%810%22%7D%2C%7B%22x%22%3A648.69165%2C%22y%22%3A1367.3667%2C%22width%22%3A522.18335%2C%22height%22%3A32.29989999999998%2C%22text%22%3A%22%E7%8E%B0%E5%9C%A8%2C%E6%97%A0%E8%AE%BA%E5%81%9A%E4%BB%80%E4%B9%88%2C%E4%BD%A0%E5%B0%86%E6%8B%A5%E6%9C%89%E8%BF%90%E8%B6%85%E4%BB%A5%E5%BE%80%E7%9A%84%E4%BD%93%E9%AA%8C%22%7D%2C%7B%22x%22%3A1919.1583%2C%22y%22%3A1415.8167%2C%22width%22%3A53.83339999999998%2C%22height%22%3A29.608199999999897%2C%22text%22%3A%22%E6%9B%B4%E5%A4%9A%22%7D%2C%7B%22x%22%3A632.5417%2C%22y%22%3A1418.5083%2C%22width%22%3A158.80830000000003%2C%22height%22%3A29.608400000000074%2C%22text%22%3A%22AppleMusic%22%7D%2C%7B%22x%22%3A250.325%2C%22y%22%3A1426.5834%2C%22width%22%3A56.525000000000034%2C%22height%22%3A32.29989999999998%2C%22text%22%3A%22%E7%99%BB%E5%BD%95%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22macosCatalina%20%E5%B7%A5%E5%85%B7%20%E8%8E%B7%E5%8F%96%20Apple%20%E6%8E%A2%E7%B4%A2%20%E5%88%9B%E4%BD%9C%203.0%E5%A4%A7%E5%A5%B3%20%E5%B7%A5%E4%BD%9C%20%E6%B8%B8%E6%88%8F%20%E5%BC%80%E5%8F%91%20%E7%B1%BB%E5%88%AB%20%E6%9B%B4%E6%96%B0%20%E5%BF%83%E5%9B%BD%E8%A5%BF%E6%89%BF%E7%9B%B4%E5%8F%B718%20Apple%20%E4%B8%8A%E4%BD%A0%E5%96%9C%E7%88%B1%E7%9A%84%E4%B8%80%E5%88%87%2C%E9%83%BD%E5%9B%A0mcosCatalina%E8%80%8C%E5%8F%98%E5%BE%97%E5%8F%B2%E7%9B%B8%E5%BD%A9.%E4%BD%A0%E5%8F%AF%E4%BB%A5%E4%BA%AB%E7%94%A8%E4%B8%A4%E6%AC%BE%E5%85%A8%E6%96%B0%E5%AA%92p%3B%E7%94%A8%E6%96%B0%E7%9A%84%E6%89%BEPp%20%E7%BD%91%E7%AB%99%E5%8F%A3%20%E8%80%8C%E4%BD%A0%E5%B8%A6%E7%94%A8%E7%9A%84PdaPpp%E7%8E%B0%E5%9C%A8%E4%B9%9F%E6%9C%89%E4%BA%86M%E7%89%88.%E4%BD%A0%E5%AE%A4%E5%8F%AF%E4%BB%A5iPad%E5%BD%93%E4%BD%9C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E6%98%BE%E7%A4%BA%2C%E7%9C%A0%E5%BC%82%E9%9D%A2%E7%A9%BA%E4%B8%8E.%20%E6%94%AF%E6%8C%810%20%E7%8E%B0%E5%9C%A8%2C%E6%97%A0%E8%AE%BA%E5%81%9A%E4%BB%80%E4%B9%88%2C%E4%BD%A0%E5%B0%86%E6%8B%A5%E6%9C%89%E8%BF%90%E8%B6%85%E4%BB%A5%E5%BE%80%E7%9A%84%E4%BD%93%E9%AA%8C%20%E6%9B%B4%E5%A4%9A%20AppleMusic%20%E7%99%BB%E5%BD%95%22%2C%22margin%22%3A%7B%22top%22%3Afalse%2C%22bottom%22%3Afalse%7D%2C%22width%22%3A1292%2C%22height%22%3A836%7D\"></card></p><h3 data-lake-id=\"4534a9fb5ef92d5f321d3e4d11a62c09\" id=\"mId7n\">制作启动盘</h3><p data-lake-id=\"72bc0fb0b5aa526a9aaa2df4d29867a1\">准备一个 U 盘，使用磁盘工具格式化为 <code>Mac OS 扩展(日志式) &amp; GUID分区表</code> ，这里可以起名叫 <code>MyInstaller</code> 。</p><p data-lake-id=\"0127e41def3f88f853f7538bd402f338\"><br /></p><p data-lake-id=\"19d06a7aa59fb19b89a5200bd808de80\">然后等待系统下载完毕后，在终端中执行</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22shell%22%2C%22code%22%3A%22sudo%20%5C%22%2FApplications%2FInstall%20macOS%20Catalina.app%2FContents%2FResources%2Fcreateinstallmedia%5C%22%20--volume%20%2FVolumes%2FMyInstaller%22%2C%22id%22%3A%227uWcv%22%7D\"></card><p data-lake-id=\"28211d73f595c574b1f5913ff2d56373\">输入系统密码后等待执行完毕。</p><h3 data-lake-id=\"3c99b20d15ed78b5b6841f733b5be818\" id=\"nT50q\">启动盘 EFI</h3><h4 data-lake-id=\"3aedb404cc78e0fc45742b4c7bd93608\" id=\"w8h49\">挂载</h4><p data-lake-id=\"9ba3ec033d3cddd691fdbaf9d0897816\">EFI 分区负责系统的启动引导，默认是不被系统挂载的，需要用一些工具或者命令来挂载。我这里图方便直使用<a href=\"https://sourceforge.net/projects/cloverefiboot/\" target=\"_blank\">https://sourceforge.net/projects/cloverefiboot/</a>（虽然我其实根本没用到 Clover）。这个工具提供一个 Menubar 的工具可以挂载 EFI。</p><p data-lake-id=\"847ace7eebed657b0cb76c3ac746c456\"><br /></p><p data-lake-id=\"4711025c0bf87267ab40fb6af743728b\">从挂载-选择磁盘中，可以选择我们的 U 盘。</p><p data-lake-id=\"9984928553044bc447c571e45c244a0a\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1586185724701-e62184fc-7a10-42c8-ac94-3257c4acdb0d.png%22%2C%22originWidth%22%3A828%2C%22originHeight%22%3A1452%2C%22name%22%3A%22image.png%22%2C%22size%22%3A263783%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A104.3625%2C%22y%22%3A96.8%2C%22width%22%3A267.7125%2C%22height%22%3A28.737505999999996%2C%22text%22%3A%22%E7%9B%AE%E5%89%8DClover%E7%89%88%E6%9C%AC%3AN%2FA%22%7D%2C%7B%22x%22%3A107.387505%2C%22y%22%3A142.175%2C%22width%22%3A117.974995%2C%22height%22%3A30.25%2C%22text%22%3A%22%E5%BC%95%E5%AF%BC%E8%AE%BE%E5%A4%87%3A%22%7D%2C%7B%22x%22%3A136.125%2C%22y%22%3A189.0625%2C%22width%22%3A37.8125%2C%22height%22%3A22.6875%2C%22text%22%3A%22N%2FA%22%7D%2C%7B%22x%22%3A108.9%2C%22y%22%3A223.85%2C%22width%22%3A142.17501%2C%22height%22%3A27.225009999999997%2C%22text%22%3A%22config%E8%B7%AF%E5%BE%84%3A%22%7D%2C%7B%22x%22%3A134.6125%2C%22y%22%3A261.6625%2C%22width%22%3A40.83749999999998%2C%22height%22%3A24.200019999999995%2C%22text%22%3A%22N%2FA%22%7D%2C%7B%22x%22%3A113.4375%2C%22y%22%3A477.95%2C%22width%22%3A57.474999999999994%2C%22height%22%3A28.73750000000001%2C%22text%22%3A%22%E6%8C%82%E8%BD%BD%22%7D%2C%7B%22x%22%3A440.1375%2C%22y%22%3A480.975%2C%22width%22%3A193.59999999999997%2C%22height%22%3A28.73751999999996%2C%22text%22%3A%22disk2s1%2CFAT32....%22%7D%2C%7B%22x%22%3A113.4375%2C%22y%22%3A518.78754%2C%22width%22%3A54.44999999999999%2C%22height%22%3A22.6875%2C%22text%22%3A%22(ESP)%22%7D%2C%7B%22x%22%3A552.0625%2C%22y%22%3A536.9375%2C%22width%22%3A58.987499999999955%2C%22height%22%3A28.737499999999955%2C%22text%22%3A%22%E5%8D%B8%E8%BD%BD%22%7D%2C%7B%22x%22%3A154.27501%2C%22y%22%3A605%2C%22width%22%3A119.48748999999998%2C%22height%22%3A28.737499999999955%2C%22text%22%3A%22*%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD%22%7D%2C%7B%22x%22%3A155.7875%2C%22y%22%3A683.65%2C%22width%22%3A225.36249999999998%2C%22height%22%3A30.25%2C%22text%22%3A%22*%E8%AE%A9%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%8F%AF%E8%AF%BB%E5%86%99%22%7D%2C%7B%22x%22%3A154.27501%2C%22y%22%3A729.025%2C%22width%22%3A290.40001%2C%22height%22%3A28.737500000000068%2C%22text%22%3A%22*%E7%A6%81%E7%94%A8SleepProxyClient%22%7D%2C%7B%22x%22%3A166.375%2C%22y%22%3A769.8625%2C%22width%22%3A181.5%2C%22height%22%3A25.71250000000009%2C%22text%22%3A%22%E8%AF%BB%E5%8F%96daemon%E6%97%A5%E5%BF%97%22%7D%2C%7B%22x%22%3A506.6875%2C%22y%22%3A769.8625%2C%22width%22%3A143.6875%2C%22height%22%3A30.25%2C%22text%22%3A%22%E8%AF%BB%E5%8F%96%E5%BC%95%E5%AF%BC%E6%97%A5%E5%BF%97%22%7D%2C%7B%22x%22%3A108.9%2C%22y%22%3A815.2375%2C%22width%22%3A190.57500000000002%2C%22height%22%3A25.71250000000009%2C%22text%22%3A%22%E8%82%83%E5%8F%98CIoverDaemon%22%7D%2C%7B%22x%22%3A104.3625%2C%22y%22%3A859.10004%2C%22width%22%3A187.55%2C%22height%22%3A31.76245999999992%2C%22text%22%3A%22CloverDaemon%22%7D%2C%7B%22x%22%3A614.075%2C%22y%22%3A859.10004%2C%22width%22%3A58.987499999999955%2C%22height%22%3A33.274959999999965%2C%22text%22%3A%22%E5%AE%89%E8%A3%85%22%7D%2C%7B%22x%22%3A429.55002%2C%22y%22%3A863.6375%2C%22width%22%3A52.9375%2C%22height%22%3A27.22499999999991%2C%22text%22%3A%22%E5%8D%B8%E8%BD%BD%22%7D%2C%7B%22x%22%3A99.825005%2C%22y%22%3A928.675%2C%22width%22%3A58.987494999999996%2C%22height%22%3A30.2500500000001%2C%22text%22%3A%22%E6%9B%B4%E6%96%B0%22%7D%2C%7B%22x%22%3A98.3125%2C%22y%22%3A972.53754%2C%22width%22%3A101.33751000000001%2C%22height%22%3A24.20001000000002%2C%22text%22%3A%22%E6%A3%80%E6%9F%A5%E6%9B%B4%E6%96%B0%3A%22%7D%2C%7B%22x%22%3A508.2%2C%22y%22%3A1023.9625%2C%22width%22%3A110.41249999999997%2C%22height%22%3A28.737600000000043%2C%22text%22%3A%22%E7%8E%B0%E5%9C%A8%E6%A3%80%E6%9F%A5%22%7D%2C%7B%22x%22%3A117.975%2C%22y%22%3A1025.475%2C%22width%22%3A52.9375%2C%22height%22%3A27.22510000000011%2C%22text%22%3A%22%E6%AF%8F%E6%9C%88%22%7D%2C%7B%22x%22%3A384.17502%2C%22y%22%3A1081.4375%2C%22width%22%3A49.91247999999996%2C%22height%22%3A25.71250000000009%2C%22text%22%3A%22N%2FA%22%7D%2C%7B%22x%22%3A102.85%2C%22y%22%3A1163.1125%2C%22width%22%3A149.73751000000001%2C%22height%22%3A24.200000000000045%2C%22text%22%3A%22%E6%9C%80%E8%BF%91%E6%A3%80%E6%9F%A5%3A%E4%BB%8E%E4%B8%8D%22%7D%2C%7B%22x%22%3A300.98752%2C%22y%22%3A1202.4375%2C%22width%22%3A214.77498000000003%2C%22height%22%3A31.76260000000002%2C%22text%22%3A%22%E5%AE%89%E8%A3%85Clover5108%22%7D%2C%7B%22x%22%3A136.125%2C%22y%22%3A1275.0375%2C%22width%22%3A137.6375%2C%22height%22%3A28.737500000000182%2C%22text%22%3A%22%E7%99%BB%E5%BD%95%E6%97%B6%E5%90%AF%E5%8A%A8%22%7D%2C%7B%22x%22%3A363%2C%22y%22%3A1323.4375%2C%22width%22%3A108.89999999999998%2C%22height%22%3A24.20010000000002%2C%22text%22%3A%22v1.16Beta%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E7%9B%AE%E5%89%8DClover%E7%89%88%E6%9C%AC%3AN%2FA%20%E5%BC%95%E5%AF%BC%E8%AE%BE%E5%A4%87%3A%20N%2FA%20config%E8%B7%AF%E5%BE%84%3A%20N%2FA%20%E6%8C%82%E8%BD%BD%20disk2s1%2CFAT32....%20(ESP)%20%E5%8D%B8%E8%BD%BD%20*%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD%20*%E8%AE%A9%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%8F%AF%E8%AF%BB%E5%86%99%20*%E7%A6%81%E7%94%A8SleepProxyClient%20%E8%AF%BB%E5%8F%96daemon%E6%97%A5%E5%BF%97%20%E8%AF%BB%E5%8F%96%E5%BC%95%E5%AF%BC%E6%97%A5%E5%BF%97%20%E8%82%83%E5%8F%98CIoverDaemon%20CloverDaemon%20%E5%AE%89%E8%A3%85%20%E5%8D%B8%E8%BD%BD%20%E6%9B%B4%E6%96%B0%20%E6%A3%80%E6%9F%A5%E6%9B%B4%E6%96%B0%3A%20%E7%8E%B0%E5%9C%A8%E6%A3%80%E6%9F%A5%20%E6%AF%8F%E6%9C%88%20N%2FA%20%E6%9C%80%E8%BF%91%E6%A3%80%E6%9F%A5%3A%E4%BB%8E%E4%B8%8D%20%E5%AE%89%E8%A3%85Clover5108%20%E7%99%BB%E5%BD%95%E6%97%B6%E5%90%AF%E5%8A%A8%20v1.16Beta%22%2C%22margin%22%3A%7B%22top%22%3Afalse%2C%22bottom%22%3Afalse%7D%2C%22width%22%3A414%2C%22height%22%3A726%7D\"></card></p><h4 data-lake-id=\"ad95d09d8759cbd5ee047cc673c77b08\" id=\"ljhj9\">现成的 EFI</h4><p data-lake-id=\"1a75812699c28ea41bff52e5d8a6a545\">现在启动盘还无法在 PC 设备上启动，需要把相应的配置和驱动等，由于在网上已经有现成对应设备的 <code>EFI</code> ，我做了一些适配后放到了 <a href=\"https://github.com/xcodebuild/nuc6i7kyk-macos-efi\" target=\"_blank\">https://github.com/xcodebuild/nuc6i7kyk-macos-efi</a>，直接把这个仓库下载下来后复制到 U 盘的 ESI 分区中。</p><p data-lake-id=\"09ce363b8c1f08af147db8cb10802f87\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1586184558636-5747aec5-59fe-4c6b-9b26-4fdc51367bae.png%22%2C%22originWidth%22%3A1764%2C%22originHeight%22%3A1096%2C%22name%22%3A%22image.png%22%2C%22size%22%3A523396%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A874.64996%2C%22y%22%3A82.6875%2C%22width%22%3A44.09998000000007%2C%22height%22%3A27.5625%2C%22text%22%3A%22EFI%22%7D%2C%7B%22x%22%3A1085.9624%2C%22y%22%3A130.4625%2C%22width%22%3A56.96250000000009%2C%22height%22%3A31.237499999999983%2C%22text%22%3A%22%E6%90%9C%E7%B4%A2%22%7D%2C%7B%22x%22%3A373.01248%2C%22y%22%3A192.9375%2C%22width%22%3A49.61252000000002%2C%22height%22%3A27.5625%2C%22text%22%3A%22%E5%90%8D%E7%A7%B0%22%7D%2C%7B%22x%22%3A1343.2124%2C%22y%22%3A192.9375%2C%22width%22%3A53.28760000000011%2C%22height%22%3A29.400000000000006%2C%22text%22%3A%22%E5%A4%A7%E5%B0%8F%22%7D%2C%7B%22x%22%3A1537.9874%2C%22y%22%3A192.9375%2C%22width%22%3A47.775100000000066%2C%22height%22%3A25.72498999999999%2C%22text%22%3A%22%E7%A7%8D%E7%B1%BB%22%7D%2C%7B%22x%22%3A986.7375%2C%22y%22%3A194.775%2C%22width%22%3A91.87490000000003%2C%22height%22%3A25.724999999999994%2C%22text%22%3A%22%E4%BF%AE%E6%94%B9%E6%97%A5%E6%9C%9F%22%7D%2C%7B%22x%22%3A134.1375%2C%22y%22%3A200.28749%2C%22width%22%3A91.875%2C%22height%22%3A27.5625%2C%22text%22%3A%22%E4%B8%AA%E4%BA%BA%E6%94%B6%E8%97%8F%22%7D%2C%7B%22x%22%3A1534.3125%2C%22y%22%3A238.87498%2C%22width%22%3A79.01250000000005%2C%22height%22%3A27.562520000000006%2C%22text%22%3A%22%E6%96%87%E4%BB%B6%E5%A4%B9%22%7D%2C%7B%22x%22%3A981.225%2C%22y%22%3A240.7125%2C%22width%22%3A156.1874999999999%2C%22height%22%3A25.724999999999994%2C%22text%22%3A%22%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%22%7D%2C%7B%22x%22%3A450.18747%2C%22y%22%3A242.54999%2C%22width%22%3A42.26250999999996%2C%22height%22%3A23.887509999999992%2C%22text%22%3A%22EFI%22%7D%2C%7B%22x%22%3A181.91249%2C%22y%22%3A244.3875%2C%22width%22%3A112.08751000000001%2C%22height%22%3A31.23750000000001%2C%22text%22%3A%22%E5%85%B7%E6%9C%80%E8%BF%91%E9%A1%B9%E7%9B%AE%22%7D%2C%7B%22x%22%3A981.225%2C%22y%22%3A279.3%2C%22width%22%3A159.86239999999987%2C%22height%22%3A25.724999999999966%2C%22text%22%3A%22%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%22%7D%2C%7B%22x%22%3A1534.3125%2C%22y%22%3A277.4625%2C%22width%22%3A75.33739999999989%2C%22height%22%3A27.5625%2C%22text%22%3A%22%E6%96%87%E4%BB%B6%E5%A4%B9%22%7D%2C%7B%22x%22%3A492.44998%2C%22y%22%3A281.13748%2C%22width%22%3A71.66251999999997%2C%22height%22%3A22.050020000000018%2C%22text%22%3A%22BOOT%22%7D%2C%7B%22x%22%3A178.23749%2C%22y%22%3A295.8375%2C%22width%22%3A119.43751%2C%22height%22%3A29.400000000000034%2C%22text%22%3A%224%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%22%7D%2C%7B%22x%22%3A979.38745%2C%22y%22%3A314.2125%2C%22width%22%3A159.86255000000006%2C%22height%22%3A27.5625%2C%22text%22%3A%22%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%22%7D%2C%7B%22x%22%3A1532.475%2C%22y%22%3A314.2125%2C%22width%22%3A80.85000000000014%2C%22height%22%3A29.400000000000034%2C%22text%22%3A%22%E6%96%87%E4%BB%B6%E5%A4%B9%22%7D%2C%7B%22x%22%3A496.12497%2C%22y%22%3A317.88748%2C%22width%22%3A38.587489999999946%2C%22height%22%3A22.050020000000018%2C%22text%22%3A%22Oc%22%7D%2C%7B%22x%22%3A183.75%2C%22y%22%3A349.125%2C%22width%22%3A58.79999000000001%2C%22height%22%3A27.5625%2C%22text%22%3A%22%E6%A1%8C%E9%9D%A2%22%7D%2C%7B%22x%22%3A981.225%2C%22y%22%3A352.8%2C%22width%22%3A165.3749999999999%2C%22height%22%3A25.724999999999966%2C%22text%22%3A%22%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%22%7D%2C%7B%22x%22%3A1534.3125%2C%22y%22%3A352.8%2C%22width%22%3A80.84999999999991%2C%22height%22%3A25.724999999999966%2C%22text%22%3A%22%E6%96%87%E4%BB%B6%E5%A4%B9%22%7D%2C%7B%22x%22%3A534.71246%2C%22y%22%3A354.63748%2C%22width%22%3A58.79998999999998%2C%22height%22%3A27.5625%2C%22text%22%3A%22ACPI%22%7D%2C%7B%22x%22%3A1534.3125%2C%22y%22%3A389.55%2C%22width%22%3A102.89989999999989%2C%22height%22%3A29.39997999999997%2C%22text%22%3A%22%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8%22%7D%2C%7B%22x%22%3A977.55%2C%22y%22%3A393.22498%2C%22width%22%3A303.1874%2C%22height%22%3A27.5625%2C%22text%22%3A%222020%E5%B9%B43%E6%9C%882%E6%97%A5%E4%B8%8B%E5%8D%8812%3A35%22%7D%2C%7B%22x%22%3A538.38745%2C%22y%22%3A395.0625%2C%22width%22%3A130.46255000000008%2C%22height%22%3A23.887479999999982%2C%22text%22%3A%22config-plist%22%7D%2C%7B%22x%22%3A1431.4125%2C%22y%22%3A395.0625%2C%22width%22%3A69.82490000000007%2C%22height%22%3A22.05000000000001%2C%22text%22%3A%2219KB%22%7D%2C%7B%22x%22%3A181.91249%2C%22y%22%3A400.57498%2C%22width%22%3A64.3125%2C%22height%22%3A29.400000000000034%2C%22text%22%3A%22%E6%96%87%E7%A8%BF%22%7D%2C%7B%22x%22%3A1534.3125%2C%22y%22%3A428.13748%2C%22width%22%3A77.17489999999998%2C%22height%22%3A29.400000000000034%2C%22text%22%3A%22%E6%96%87%E4%BB%B6%E5%A4%B9%22%7D%2C%7B%22x%22%3A979.38745%2C%22y%22%3A429.97498%2C%22width%22%3A178.23755000000006%2C%22height%22%3A25.724999999999966%2C%22text%22%3A%22%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%22%7D%2C%7B%22x%22%3A538.38745%2C%22y%22%3A431.8125%2C%22width%22%3A82.6875%2C%22height%22%3A23.887479999999982%2C%22text%22%3A%22Drivers%22%7D%2C%7B%22x%22%3A192.9375%2C%22y%22%3A453.8625%2C%22width%22%3A53.28748999999999%2C%22height%22%3A29.39997999999997%2C%22text%22%3A%22%E4%B8%8B%E8%BD%BD%22%7D%2C%7B%22x%22%3A1536.1499%2C%22y%22%3A466.72498%2C%22width%22%3A75.33750000000009%2C%22height%22%3A27.5625%2C%22text%22%3A%22%E6%96%87%E4%BB%B6%E5%A4%B9%22%7D%2C%7B%22x%22%3A977.55%2C%22y%22%3A468.56247%2C%22width%22%3A165.37490000000003%2C%22height%22%3A25.725009999999997%2C%22text%22%3A%22%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%888%3A27%22%7D%2C%7B%22x%22%3A536.55%2C%22y%22%3A470.4%2C%22width%22%3A64.3125%2C%22height%22%3A23.88748000000004%2C%22text%22%3A%22Kexts%22%7D%2C%7B%22x%22%3A1534.3125%2C%22y%22%3A501.63748%2C%22width%22%3A55.125%2C%22height%22%3A31.237520000000018%2C%22text%22%3A%22%E6%96%87%E7%A8%BF%22%7D%2C%7B%22x%22%3A1409.3624%2C%22y%22%3A505.31247%2C%22width%22%3A90.03749999999991%2C%22height%22%3A25.725030000000004%2C%22text%22%3A%22323KB%22%7D%2C%7B%22x%22%3A975.71246%2C%22y%22%3A507.15%2C%22width%22%3A286.64994%2C%22height%22%3A25.725000000000023%2C%22text%22%3A%222020%E5%B9%B43%E6%9C%882%E6%97%A5%E4%B8%8B%E5%8D%8812%3A35%22%7D%2C%7B%22x%22%3A536.55%2C%22y%22%3A508.9875%2C%22width%22%3A154.34996%2C%22height%22%3A22.05000000000001%2C%22text%22%3A%22Opencore.efi%22%7D%2C%7B%22x%22%3A126.7875%2C%22y%22%3A518.175%2C%22width%22%3A44.099999999999994%2C%22height%22%3A25.72496000000001%2C%22text%22%3A%22%E4%BD%8D%E7%BD%AE%22%7D%2C%7B%22x%22%3A975.71246%2C%22y%22%3A542.0625%2C%22width%22%3A306.8625400000001%2C%22height%22%3A29.399959999999965%2C%22text%22%3A%222020%E5%B9%B43%E6%9C%882%E6%97%A5%E4%B8%8B%E5%8D%8812%3A35%22%7D%2C%7B%22x%22%3A1532.475%2C%22y%22%3A543.89996%2C%22width%22%3A82.6875%2C%22height%22%3A29.40003999999999%2C%22text%22%3A%22%E6%96%87%E4%BB%B6%E5%A4%B9%22%7D%2C%7B%22x%22%3A538.38745%2C%22y%22%3A549.4125%2C%22width%22%3A62.47505000000001%2C%22height%22%3A20.212499999999977%2C%22text%22%3A%22Tools%22%7D%2C%7B%22x%22%3A189.2625%2C%22y%22%3A565.94995%2C%22width%22%3A112.08748000000003%2C%22height%22%3A23.88751000000002%2C%22text%22%3A%22lnstall..%22%7D%2C%7B%22x%22%3A977.55%2C%22y%22%3A580.64996%2C%22width%22%3A305.0250000000001%2C%22height%22%3A29.40003999999999%2C%22text%22%3A%222020%E5%B9%B43%E6%9C%882%E6%97%A5%E4%B8%8B%E5%8D%8812%3A35%22%7D%2C%7B%22x%22%3A1392.825%2C%22y%22%3A582.4875%2C%22width%22%3A102.89999999999986%2C%22height%22%3A27.5625%2C%22text%22%3A%22610%E5%AD%97%E8%8A%82%22%7D%2C%7B%22x%22%3A1530.6375%2C%22y%22%3A582.4875%2C%22width%22%3A55.125%2C%22height%22%3A27.5625%2C%22text%22%3A%22%E6%96%87%E7%A8%BF%22%7D%2C%7B%22x%22%3A496.12497%2C%22y%22%3A584.32495%2C%22width%22%3A145.16253%2C%22height%22%3A25.72505000000001%2C%22text%22%3A%22README.Md%22%7D%2C%7B%22x%22%3A189.2625%2C%22y%22%3A615.5625%2C%22width%22%3A42.26250000000002%2C%22height%22%3A25.725000000000023%2C%22text%22%3A%22EFI%22%7D%2C%7B%22x%22%3A124.95%2C%22y%22%3A681.71246%2C%22width%22%3A47.77498999999999%2C%22height%22%3A22.04998999999998%2C%22text%22%3A%22%E6%A0%87%E7%AD%BE%22%7D%2C%7B%22x%22%3A187.42499%2C%22y%22%3A723.975%2C%22width%22%3A56.96250999999998%2C%22height%22%3A27.5625%2C%22text%22%3A%22%E7%BA%A2%E8%89%B2%22%7D%2C%7B%22x%22%3A189.2625%2C%22y%22%3A777.26245%2C%22width%22%3A53.28749000000002%2C%22height%22%3A25.72505000000001%2C%22text%22%3A%22%E6%A9%99%E8%89%B2%22%7D%2C%7B%22x%22%3A189.2625%2C%22y%22%3A828.71246%2C%22width%22%3A55.125%2C%22height%22%3A27.5625%2C%22text%22%3A%22%E9%BB%84%E8%89%B2%22%7D%2C%7B%22x%22%3A185.5875%2C%22y%22%3A882%2C%22width%22%3A56.96249%2C%22height%22%3A25.725000000000023%2C%22text%22%3A%22%E7%BB%BF%E8%89%B2%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22EFI%20%E6%90%9C%E7%B4%A2%20%E5%90%8D%E7%A7%B0%20%E5%A4%A7%E5%B0%8F%20%E7%A7%8D%E7%B1%BB%20%E4%BF%AE%E6%94%B9%E6%97%A5%E6%9C%9F%20%E4%B8%AA%E4%BA%BA%E6%94%B6%E8%97%8F%20%E6%96%87%E4%BB%B6%E5%A4%B9%20%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%20EFI%20%E5%85%B7%E6%9C%80%E8%BF%91%E9%A1%B9%E7%9B%AE%20%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%20%E6%96%87%E4%BB%B6%E5%A4%B9%20BOOT%204%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%20%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%20%E6%96%87%E4%BB%B6%E5%A4%B9%20Oc%20%E6%A1%8C%E9%9D%A2%20%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%20%E6%96%87%E4%BB%B6%E5%A4%B9%20ACPI%20%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8%202020%E5%B9%B43%E6%9C%882%E6%97%A5%E4%B8%8B%E5%8D%8812%3A35%20config-plist%2019KB%20%E6%96%87%E7%A8%BF%20%E6%96%87%E4%BB%B6%E5%A4%B9%20%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%887%3A39%20Drivers%20%E4%B8%8B%E8%BD%BD%20%E6%96%87%E4%BB%B6%E5%A4%B9%20%E4%BB%8A%E5%A4%A9%E4%B8%8B%E5%8D%888%3A27%20Kexts%20%E6%96%87%E7%A8%BF%20323KB%202020%E5%B9%B43%E6%9C%882%E6%97%A5%E4%B8%8B%E5%8D%8812%3A35%20Opencore.efi%20%E4%BD%8D%E7%BD%AE%202020%E5%B9%B43%E6%9C%882%E6%97%A5%E4%B8%8B%E5%8D%8812%3A35%20%E6%96%87%E4%BB%B6%E5%A4%B9%20Tools%20lnstall..%202020%E5%B9%B43%E6%9C%882%E6%97%A5%E4%B8%8B%E5%8D%8812%3A35%20610%E5%AD%97%E8%8A%82%20%E6%96%87%E7%A8%BF%20README.Md%20EFI%20%E6%A0%87%E7%AD%BE%20%E7%BA%A2%E8%89%B2%20%E6%A9%99%E8%89%B2%20%E9%BB%84%E8%89%B2%20%E7%BB%BF%E8%89%B2%22%2C%22margin%22%3A%7B%22top%22%3Afalse%2C%22bottom%22%3Afalse%7D%2C%22width%22%3A882%2C%22height%22%3A548%7D\"></card></p><h2 data-lake-id=\"a068d277958629b4a3a4b44677027edf\" id=\"lmYIL\">安装</h2><h3 data-lake-id=\"62fec6a3b35b7afa8df9cb1d8442936d\" id=\"ayhl6\">设置</h3><p data-lake-id=\"90814a1ff4e633d2586729a3906de426\">需要在骷髅峡谷的 BIOS 设置中关掉不兼容的设置</p><ul data-lake-id=\"4b93248a1534d8650ecaad3919a857c7\"><li data-lake-id=\"97ece2bb671c070ba140a2afe558d277\">Power-&gt;Secondary Power Settings, “Wake on LAN from S4/S5”, 设置成 “Stay Off”</li><li data-lake-id=\"84abb48428238f2c7e72e212742168cf\">Devices-&gt;Video, “IGD Minimum Memory” 设置为 64mb</li><li data-lake-id=\"16530ea1b8cb74eab2dfb4d4218a4a34\">Devices-&gt;Video, “IGD Aperture Size” 设置为 256mb</li><li data-lake-id=\"658b583dfa7b64cc9935f887483c8b0d\">Boot-&gt;Secure Boot, “Secure Boot” 设置为 disabled</li><li data-lake-id=\"92de44ecf5c59ee631fe4793ae9f007a\">Security-&gt;Security Features, “Execute Disable Bit” 设置为 enabled.</li><li data-lake-id=\"9d78661506c71977d6e5261d42ad42c5\">Security-&gt;Security Features, “VT-d” 设置为 disabled</li></ul><h3 data-lake-id=\"a5a7be4a5ba577bd2ef4014e7a1a3b08\" id=\"feYmw\">U 盘引导安装</h3><p data-lake-id=\"5071b27ab1cebedd3aa23e442c621b16\">安装部分不用太多说，把 U 盘插到骷髅峡谷上，启动时选择 <code>Catalina Installer</code> 进入安装，进入到安装界面后先用磁盘工具把相应的分区（或者硬盘）格式化成 APFS 和 GUID。</p><p data-lake-id=\"3ab4a5ac7d79a6d77c4dbb600c8b52b5\"><br /></p><p data-lake-id=\"44baa72312b8385fda6c4288c5801111\">然后进行安装即可，过程中会经过几次重启，每次都选 U 盘以外的 <code>Installer</code> 分区。</p><h3 data-lake-id=\"8ab4411aacaa9bdd0a7478431e8af533\" id=\"5i8j8\">启动</h3><p data-lake-id=\"535f85f0267bf7070ec88496144fa220\">安装完成后暂时还是需要 U 盘，因为我们刚才安装的是白苹果系统，不具备在骷髅峡谷上启动的能力。我们可以通过 U 盘引导进入系统后，仍然安装上面的 Clover 应用来挂载硬盘的 EFI 分区。</p><p data-lake-id=\"958fc12e84a445e749d4b1c73deeb9f9\"><br /></p><p data-lake-id=\"a9137ebb8ce0532c9527ad8e4954cb78\">然后把 U 盘的 EFI 分区原样复制到硬盘的 EFI 分区，然后我们就可以摆脱 U 盘直接启动了。</p><p data-lake-id=\"7076f46bf1d67df0669f068196168087\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1586183143410-ed293857-c3b0-4af5-aa64-09d6ae8b748b.png%22%2C%22originWidth%22%3A1396%2C%22originHeight%22%3A892%2C%22name%22%3A%22image.png%22%2C%22size%22%3A485582%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A520.5917%2C%22y%22%3A100.337494%2C%22width%22%3A66.89164000000005%2C%22height%22%3A24.72083599999999%2C%22text%22%3A%22%E6%98%BE%E7%A4%BA%E5%99%A8%22%7D%2C%7B%22x%22%3A599.11664%2C%22y%22%3A100.337494%2C%22width%22%3A343.18336%2C%22height%22%3A26.175005999999996%2C%22text%22%3A%22%E6%92%AD%E5%82%A8%E5%AD%98%E7%A9%BA%E9%97%B4%E5%86%85%E5%AD%98%E6%94%AF%E6%8C%81%E6%9C%8D%E5%8A%A1%22%7D%2C%7B%22x%22%3A440.6125%2C%22y%22%3A101.791664%2C%22width%22%3A45.07914999999997%2C%22height%22%3A21.8125%2C%22text%22%3A%22%E6%A6%82%E8%A7%88%22%7D%2C%7B%22x%22%3A613.6583%2C%22y%22%3A241.39166%2C%22width%22%3A344.63749999999993%2C%22height%22%3A40.716639999999984%2C%22text%22%3A%22macosCatalina%22%7D%2C%7B%22x%22%3A618.0208%2C%22y%22%3A290.8333%2C%22width%22%3A122.14999999999998%2C%22height%22%3A23.266680000000008%2C%22text%22%3A%22%E7%89%88%E6%9C%AC10.15.4%22%7D%2C%7B%22x%22%3A616.56665%2C%22y%22%3A357.72498%2C%22width%22%3A53.80415000000005%2C%22height%22%3A18.904169999999965%2C%22text%22%3A%22iMac%22%7D%2C%7B%22x%22%3A652.9208%2C%22y%22%3A392.62497%2C%22width%22%3A295.19584%2C%22height%22%3A23.266689999999983%2C%22text%22%3A%22%E5%A4%84%E7%90%86%E5%99%A82.6GHz%E5%9B%9B%E6%A0%B8IntelCore7%22%7D%2C%7B%22x%22%3A634.01666%2C%22y%22%3A433.34164%2C%22width%22%3A305.37494000000004%2C%22height%22%3A21.8125%2C%22text%22%3A%22%E5%86%85%E5%AD%9816GB2400MHZDDR4%22%7D%2C%7B%22x%22%3A623.83746%2C%22y%22%3A471.15%2C%22width%22%3A427.52494%2C%22height%22%3A21.8125%2C%22text%22%3A%22%E5%9B%BE%E5%BD%A2%E5%8D%A1lntellrisProGraphics5801536MB%22%7D%2C%7B%22x%22%3A636.925%2C%22y%22%3A507.50415%2C%22width%22%3A235.57494000000008%2C%22height%22%3A23.266650000000027%2C%22text%22%3A%22%E5%BA%8F%E5%88%97%E5%8F%B7FFEEDDCCBBAA%22%7D%2C%7B%22x%22%3A629.6541%2C%22y%22%3A578.7583%2C%22width%22%3A100.33753999999999%2C%22height%22%3A26.175000000000068%2C%22text%22%3A%22%E7%B3%BB%E7%BB%9F%E6%8A%A5%E5%91%8A...%22%7D%2C%7B%22x%22%3A782.3416%2C%22y%22%3A580.21246%2C%22width%22%3A110.51670000000001%2C%22height%22%3A24.720840000000067%2C%22text%22%3A%22%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0...%22%7D%2C%7B%22x%22%3A415.89166%2C%22y%22%3A706.725%2C%22width%22%3A526.40834%2C%22height%22%3A24.72079999999994%2C%22text%22%3A%22TM%E5%92%8C19832020AppleInc.%E7%95%99%E4%B8%80%E5%88%87%E6%9D%83%E5%88%A9.%E8%AE%B8%E5%8F%AF%E5%8D%8F%E8%AE%AE%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E6%98%BE%E7%A4%BA%E5%99%A8%20%E6%92%AD%E5%82%A8%E5%AD%98%E7%A9%BA%E9%97%B4%E5%86%85%E5%AD%98%E6%94%AF%E6%8C%81%E6%9C%8D%E5%8A%A1%20%E6%A6%82%E8%A7%88%20macosCatalina%20%E7%89%88%E6%9C%AC10.15.4%20iMac%20%E5%A4%84%E7%90%86%E5%99%A82.6GHz%E5%9B%9B%E6%A0%B8IntelCore7%20%E5%86%85%E5%AD%9816GB2400MHZDDR4%20%E5%9B%BE%E5%BD%A2%E5%8D%A1lntellrisProGraphics5801536MB%20%E5%BA%8F%E5%88%97%E5%8F%B7FFEEDDCCBBAA%20%E7%B3%BB%E7%BB%9F%E6%8A%A5%E5%91%8A...%20%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0...%20TM%E5%92%8C19832020AppleInc.%E7%95%99%E4%B8%80%E5%88%87%E6%9D%83%E5%88%A9.%E8%AE%B8%E5%8F%AF%E5%8D%8F%E8%AE%AE%22%2C%22margin%22%3A%7B%22top%22%3Afalse%2C%22bottom%22%3Afalse%7D%2C%22width%22%3A513%2C%22height%22%3A328%7D\"></card></p><h2 data-lake-id=\"9424648192ef071c81a72132b811851c\" id=\"CgIF8\">其他</h2><p data-lake-id=\"9b1debd62b3db562ef36fad2349f2880\">其中内置 Wifi 是不可用的（无解），内置蓝牙有解但是懒得折腾了。可以通过淘宝买个几十块的 USB 接口的解决，注意 macOS 的兼容性。</p><p data-lake-id=\"624820a5267bbf42ab029dfcfbc58b7d\"><br /></p><p data-lake-id=\"6c27e65c2aaeec86b58016bde210f8a9\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1586185139192-a8f45e9a-5811-4b36-8c2b-c1f25f77b0a1.png%22%2C%22originWidth%22%3A1282%2C%22originHeight%22%3A632%2C%22name%22%3A%22image.png%22%2C%22size%22%3A185833%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1113.7375%2C%22y%22%3A49.410416%2C%22width%22%3A89.47289999999998%2C%22height%22%3A29.379164000000003%2C%22text%22%3A%22%E6%8F%90%E9%80%9F%E5%90%8E%22%7D%2C%7B%22x%22%3A46.739582%2C%22y%22%3A50.745834%2C%22width%22%3A106.83333800000001%2C%22height%22%3A38.727081999999996%2C%22text%22%3A%22%E4%B8%8B%E8%BD%BDMbp%22%7D%2C%7B%22x%22%3A1119.0791%2C%22y%22%3A109.504166%2C%22width%22%3A110.83960000000002%2C%22height%22%3A29.379164000000003%2C%22text%22%3A%22%E5%BD%93%E5%89%8D%E9%80%9F%E5%BA%A6%22%7D%2C%7B%22x%22%3A50.745834%2C%22y%22%3A120.1875%2C%22width%22%3A162.920836%2C%22height%22%3A60.09375%2C%22text%22%3A%22114.67%22%7D%2C%7B%22x%22%3A1117.7438%2C%22y%22%3A257.7354%2C%22width%22%3A113.51040000000012%2C%22height%22%3A29.37919999999997%2C%22text%22%3A%22%E5%BD%93%E5%89%8D%E9%80%9F%E5%BA%A6%22%7D%2C%7B%22x%22%3A49.410416%2C%22y%22%3A260.40625%2C%22width%22%3A165.591664%2C%22height%22%3A41.39792%2C%22text%22%3A%22%E4%B8%8A%E4%BC%A0Mbps%22%7D%2C%7B%22x%22%3A94.81458%2C%22y%22%3A344.5375%2C%22width%22%3A93.47916999999998%2C%22height%22%3A42.73334%2C%22text%22%3A%229.34%22%7D%2C%7B%22x%22%3A599.60205%2C%22y%22%3A492.76874%2C%22width%22%3A129.53545000000008%2C%22height%22%3A33.385459999999966%2C%22text%22%3A%22%E6%8A%96%E5%8A%A8%2Fms%22%7D%2C%7B%22x%22%3A44.06875%2C%22y%22%3A494.10416%2C%22width%22%3A144.225%2C%22height%22%3A30.714540000000056%2C%22text%22%3A%22PING%2Fms%22%7D%2C%7B%22x%22%3A1135.1041%2C%22y%22%3A494.10416%2C%22width%22%3A92.14380000000006%2C%22height%22%3A30.714540000000056%2C%22text%22%3A%22%E4%B8%A2%E5%8C%85%25%22%7D%2C%7B%22x%22%3A1171.1604%2C%22y%22%3A558.20416%2C%22width%22%3A26.708399999999983%2C%22height%22%3A26.708399999999983%2C%22text%22%3A%220%22%7D%2C%7B%22x%22%3A80.125%2C%22y%22%3A562.2104%2C%22width%22%3A88.13749999999999%2C%22height%22%3A28.043749999999932%2C%22text%22%3A%2223.74%22%7D%2C%7B%22x%22%3A628.98126%2C%22y%22%3A564.8812%2C%22width%22%3A66.77084000000002%2C%22height%22%3A26.708399999999983%2C%22text%22%3A%220.90%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E6%8F%90%E9%80%9F%E5%90%8E%20%E4%B8%8B%E8%BD%BDMbp%20%E5%BD%93%E5%89%8D%E9%80%9F%E5%BA%A6%20114.67%20%E5%BD%93%E5%89%8D%E9%80%9F%E5%BA%A6%20%E4%B8%8A%E4%BC%A0Mbps%209.34%20%E6%8A%96%E5%8A%A8%2Fms%20PING%2Fms%20%E4%B8%A2%E5%8C%85%25%200%2023.74%200.90%22%2C%22margin%22%3A%7B%22top%22%3Afalse%2C%22bottom%22%3Afalse%7D%2C%22width%22%3A641%2C%22height%22%3A316%7D\"></card></p><p data-lake-id=\"7dd2e8c755d821dce50eaca72fa06384\"><br /></p><p data-lake-id=\"cb318b709ee61b3d20e2b740f47add89\">从测速看外接了一个廉价 USB Hub 上的 USB 网卡连接 5G Wifi 似乎没有什么问题。</p><h2 data-lake-id=\"dc7185a3ab79c046428d09ad0511d298\" id=\"URUlc\">参考</h2><ul data-lake-id=\"27ddf69762a15bb104c431aa1de8e4af\"><li data-lake-id=\"8211cb5f003f503ed01b0073d45adb5d\">BIOS 设置部分参考的 <a href=\"https://blog.tms.im/2019/03/01/nuc6i7kyk-hackintosh-mojave\" target=\"_blank\">https://blog.tms.im/2019/03/01/nuc6i7kyk-hackintosh-mojave</a></li><li data-lake-id=\"7667ab61af34642dd4ea3d7814bc9c99\">EFI 修改自 <a href=\"https://github.com/furui/skull-canyon-efi\" target=\"_blank\">https://github.com/furui/skull-canyon-efi</a></li></ul>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-04-19T05:12:25.000Z",
    "deleted_at": null,
    "created_at": "2020-04-06T13:31:28.000Z",
    "updated_at": "2020-04-19T05:12:25.000Z",
    "published_at": "2020-04-19T05:12:25.000Z",
    "first_published_at": "2020-04-06T15:04:24.000Z",
    "word_count": 983,
    "cover": "https://cdn.nlark.com/yuque/0/2020/png/236311/1586185011143-7e282c51-7177-424e-a425-382d84b2ade1.png",
    "description": "手头上有个骷髅峡谷一代的盒子（ nuc6i7kyk ），之前一直用的是 Windows 10 ，然而由于工作用的是 Macbook Pro，环境切来切去的总是不适应。上网查了一下 nuc6i7kyk 的硬件用来黑苹果是比较合适的，于是花了点时间装了下黑苹果，总共大概花了四五个小时的时间（不过还...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 5824542,
    "slug": "why-so-slow-webpage-rendering",
    "title": "网页渲染为什么这么慢",
    "book_id": 653495,
    "book": {
      "id": 653495,
      "type": "Column",
      "slug": "blog",
      "name": "blog",
      "user_id": 236311,
      "description": "",
      "creator_id": 236311,
      "public": 0,
      "items_count": 7,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-04-08T03:07:38.936Z",
      "updated_at": "2020-04-08T03:07:38.000Z",
      "created_at": "2019-12-24T14:26:42.000Z",
      "namespace": "xcodebuild/blog",
      "user": {
        "id": 236311,
        "type": "User",
        "login": "xcodebuild",
        "name": "xcodebuIld",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/236311/1546508350871-89a1db68-50d3-4776-9b7b-97ba81a8dfbe.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 0,
        "created_at": "2019-01-03T03:16:21.000Z",
        "updated_at": "2020-03-23T08:18:51.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 236311,
    "creator": {
      "id": 236311,
      "type": "User",
      "login": "xcodebuild",
      "name": "xcodebuIld",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/236311/1546508350871-89a1db68-50d3-4776-9b7b-97ba81a8dfbe.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 0,
      "created_at": "2019-01-03T03:16:21.000Z",
      "updated_at": "2020-03-23T08:18:51.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "当浏览器开始下载 HTML 后，就会一遍解析一遍开始渲染页面的内容。我们做性能优化其中一个重要的目的就是为了让用户尽可能早的看到有效的内容，所以了解浏览器的渲染机制是非常有必要的。\n<a name=\"93cmh\"></a>\n## 渲染过程\n<a name=\"7t3co\"></a>\n### HTML\nHTML 显而易见是渲染必不可少的内容，浏览器接收到 HTML 的内容就会开始解析内容，构建响应的 DOM 树。浏览器并不依赖于下载或者解析完完整的 HTML，而是解析一部分渲染一部分。<br />\n<br />我们可以在响应头中增加 `Transfer-Encoding:chunked` 告知浏览器 HTML 将会被一块块的流式返回，在这个基础上 facebook 构建了 bigpipe，通过在服务器端流式地返回 HTML 给浏览器，你会看到自己的个人首页是随着数据的加载一块一块的渲染出来的，这样可以避免一次性获取大量的数据才开始渲染页面。\n<a name=\"JWG6a\"></a>\n#### Chunk 和缓冲\n当我们使用 chunk 流式返回 HTML 内容时，我们期望浏览器能够马上渲染接收到的 chunk 块，但实际情况下有些浏览器则会缓冲一定的长度。例如下图中 Safari 使用 bigpipe 渲染，浏览器一直等到 `this is pagelet 1` 才渲染页面，然后完成后续渲染。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585838072215-a9fab628-ddaa-4974-9b19-60dd6e1c69be.png#align=left&display=inline&height=231&name=image.png&originHeight=462&originWidth=1264&size=199221&status=done&style=none&width=632)<br />而当我们把 `Welcome to ...` 加长后 ，Safari 则直接渲染出首屏再完成后续的渲染<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585838081766-1342ab0c-bcdf-4913-9e59-527e4cbf7ab5.png#align=left&display=inline&height=170&name=image.png&originHeight=340&originWidth=1368&size=144463&status=done&style=none&width=684)<br />Chunk 缓冲区的具体长度没有明确的标准，根据 StackOverflow 上的回答，当前客户端 chunk 缓冲区大小大概如下：\n```html\nMac:                       text/html:     image/jpeg:\ncurl 7.24.0                4096 bytes     \nFirefox 17                 1024 bytes     1886 bytes\nChrome 26.0.1410.65        1024 bytes     1885 bytes\nChrome 29.0.1524.0         8    bytes     1885 bytes\nSafari 6.0.4 (8536.29.13)  1024 bytes     whole file\n\nWindows XP:\nIE8                        256  bytes\nChrome 27.0.1453.94        1024 bytes\nFirefox 21                 1024 bytes\nOpera 12.15                128  bytes AND 3s have passed\n\nWindows 7\nIE9                        256  bytes\n\nWindows 8:\nIE10                       4096 bytes\n```\n<a name=\"DMIvU\"></a>\n### CSS\n默认情况下，浏览器同样把 CSS 也认作是渲染必不可少的内容，因为一般来说一个没有 CSS 的页面是无法有效展示的：<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585838094023-264c267c-c92e-4de3-bc0d-dab59cc470fd.png#align=left&display=inline&height=281&name=image.png&originHeight=562&originWidth=686&size=137688&status=done&style=none&width=343)<br />\n<br />所以上面的代码中的 `<link rel=\"stylesheet\" href=\"styles.css\">` 会阻塞首屏的渲染，当浏览器解析到这里时，虽然 DOM 的解析仍然会向下进行，但浏览器会一直等待 `styles.css` 加载完成并且构建成相应的 CSSOM 后再继续渲染。\n<a name=\"AaPEF\"></a>\n#### 媒体查询和阻塞渲染\n上面提到，CSS 在 **默认** 的情况下会阻塞渲染，但是可以通过合理的条件查询避免不必要的阻塞渲染，例如下面的代码中\n```html\n<link href=\"style.css\" rel=\"stylesheet\">\n<link href=\"other.css\" rel=\"stylesheet\" media=\"(min-width: 900px)\">\n```\n`style.css` 会阻塞渲染，而 `other.css` 就只在屏幕宽度符合查询条件时才会阻塞渲染，浏览器会针对这些条件进行判断。\n<a name=\"z37Rf\"></a>\n### 异步 stylesheet\n如果我们通过 js 动态插入 `stylesheet` ，同样也不会阻塞页面的渲染，下面这个例子中， `test.css` 的加载并不会阻塞页面的渲染。\n```html\n<head>\n  <script>\n   var a = document.createElement('link');\n   a.href = 'test.css';\n   a.rel = 'stylesheet';\n   document.head.appendChild(a);\n  </script>\n</head>\n<body>\n\n<h1>This is content</h1>\n\n</body>\n```\n\n\n> 在 Safari 下的表现有所区别，内联 script 插入的 CSS 仍然会阻塞渲染，但通过 requestAnimationFrame 异步插入的 CSS 则不会。\n\n<a name=\"JKX9p\"></a>\n## Script\nScript 标签也可能会阻塞页面的渲染，这取决于它在页面中的具体位置和属性。\n<a name=\"GrgYx\"></a>\n### 在 DOM 之前\n如果 Script 标签出现在 DOM 之前，浏览器会选择完整加载并执行完相应的 JS 后才会继续解析 DOM（是的，和 CSS 不同，是连解析都会阻塞的）。这是为了 JS 能够顺序和确定地执行，防止 JS 加载好后 DOM 已经和预期的不同。\n<a name=\"VYNEe\"></a>\n### 在 DOM 之后\nDOM 后的 Script 不会阻塞前面已经加载好的 DOM 的渲染，所以一般来说我们都推荐把 Script 标签放在页面的底部。\n<a name=\"Pb7WS\"></a>\n#### Safari\n在 Safari 中，情况有一些不同。即使 Script 在 DOM 的后面，Safari 并不会直接把 DOM 渲染出来，而是等待整个页面的 JS 全都加载并且执行完毕后才真正渲染页面。\n```html\n<div id=\"test\">test</div>\n<script>\n  console.log(document.getElementById('test'));\n</script>\n<script src=\"footer.js\"></script>\n```\n上面的代码在 Chrome 中会直接渲染出 `test` 元素，而在 Safari 中，虽然能够在 console 中打出元素，但是却要等到 `footer.js` 完全加载完后才会渲染页面。<br />\n<br />如果你需要针对 Safari 做一些渲染优化，可以考虑使用 `requestAnimationFrame` 来插入标签从而确认不影响用户首屏。\n> 这个问题在后续版本的 Safari 中可能会得到解决\n\n<a name=\"KSKFB\"></a>\n### async\n我们可以通过给 Script 添加 `async` 属性告知浏览器该 Script 不阻塞页面的渲染，浏览器将会一边加载一边继续解析 DOM，加载好后立即执行。浏览器并不会保证有 `async` 属性的 Script 标签的执行顺序，需要注意的是， `async` 对于内联脚本是没有意义的。\n<a name=\"TuNA9\"></a>\n### defer\n`defer` 和 `async` 的作用有些区别，在于告知浏览器不阻塞页面渲染的同时，把脚本推迟到 `DOMContentLoaded` 事件前执行。除此之外，页面上多个 `defer` 的 Script 标签仍然会保持执行顺序。同样的，defer 对于内联脚本没有意义。\n<a name=\"8gchi\"></a>\n### 动态插入\n由 JS 动态插入的脚本对页面的影响和 `async` 类似，加载不会阻塞页面渲染，加载完成后立即执行。\n<a name=\"uk7BE\"></a>\n## JavaScript 对渲染的影响\n上面说 Script 对渲染的影响，主要还是说资源文件的网络加载阻塞了页面渲染。而除了这些情况外，其实 JS 本身的执行就是会对页面渲染造成影响的。<br />\n<br />我们都知道页面中的 JavaScript 代码（除了 Worker）都运行在一个线程中，由 EventLoop 驱动<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585838012767-3aa4b188-ef41-4743-bf5d-1f35cbfc9c01.png#align=left&display=inline&height=158&name=image.png&originHeight=316&originWidth=1220&size=116969&status=done&style=none&width=610)<br />浏览器在事件循环中需要等待队列中的 JS 执行完毕，才能确定是否需要更新渲染，所以 JS 的执行本身其实就会导致渲染被阻塞。<br />\n<br />下面这个例子中，由于 JS 一直阻塞了 EventLoop， `test` 这个元素是不会被渲染出来的。\n```html\n<script>\n  while(true){\n  \tconsole.log('test'):\n  }\n</script>\n<h1>test</h1>\n```\n<a name=\"KrepY\"></a>\n## 建议\n<a name=\"tB2vN\"></a>\n### 尽可能精简和内联你的 CSS\n由于页面的渲染完全依赖于 CSS 的加载，所以尽可能的精简首屏的 CSS，如果可能的话考虑内联进页面。\n<a name=\"bfI00\"></a>\n### 使用媒体查询减少 CSS 的阻塞\n如果有明确只在特定条件下生效的 CSS（例如 print），考虑使用合适的媒体查询减小对渲染的阻塞。\n<a name=\"ObXFY\"></a>\n### 使用 preload 提前关键资源的加载\n`<link rel=\"preload\">` 可以提高资源加载优先级和提前时间，如果确定有引用的资源必然阻塞渲染，考虑用 `preload` 提前它的加载。\n<a name=\"z6QI5\"></a>\n### 减少阻塞渲染的 script\nScript 的加载和执行对渲染的阻塞非常明显，如果不必要的话合理使用 `async` `defer` 或者移动到页面底部。如果需要优化 Safari 的渲染性能，考虑使用 `requestAnimation` 来插入 `script` 等异步内容。\n<a name=\"jKWgb\"></a>\n### 避免长时间运行的 JS，尤其是首屏渲染前\n在首屏渲染之前执行一个很耗时的 JS 可能以为着白屏，尽可能避免这种情况。\n<a name=\"05XJ6\"></a>\n### 使用 Bigpipe 优化数据较多的页面\n如果页面取数分为非常多块而且耗时（例如个人中心这样的页面），考虑使用 Bigpipe 让页面尽可能早的开始渲染，在分块时注意第一个 `chunk` 的大小是否能够填满浏览器的缓冲区。<br />\n\n",
    "body_draft": "当浏览器开始下载 HTML 后，就会一遍解析一遍开始渲染页面的内容。我们做性能优化其中一个重要的目的就是为了让用户尽可能早的看到有效的内容，所以了解浏览器的渲染机制是非常有必要的。\n<a name=\"93cmh\"></a>\n## 渲染过程\n<a name=\"7t3co\"></a>\n### HTML\nHTML 显而易见是渲染必不可少的内容，浏览器接收到 HTML 的内容就会开始解析内容，构建响应的 DOM 树。浏览器并不依赖于下载或者解析完完整的 HTML，而是解析一部分渲染一部分。<br />\n<br />我们可以在响应头中增加 `Transfer-Encoding:chunked` 告知浏览器 HTML 将会被一块块的流式返回，在这个基础上 facebook 构建了 bigpipe，通过在服务器端流式地返回 HTML 给浏览器，你会看到自己的个人首页是随着数据的加载一块一块的渲染出来的，这样可以避免一次性获取大量的数据才开始渲染页面。\n<a name=\"JWG6a\"></a>\n#### Chunk 和缓冲\n当我们使用 chunk 流式返回 HTML 内容时，我们期望浏览器能够马上渲染接收到的 chunk 块，但实际情况下有些浏览器则会缓冲一定的长度。例如下图中 Safari 使用 bigpipe 渲染，浏览器一直等到 `this is pagelet 1` 才渲染页面，然后完成后续渲染。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585838072215-a9fab628-ddaa-4974-9b19-60dd6e1c69be.png#align=left&display=inline&height=231&name=image.png&originHeight=462&originWidth=1264&size=199221&status=done&style=none&width=632)<br />而当我们把 `Welcome to ...` 加长后 ，Safari 则直接渲染出首屏再完成后续的渲染<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585838081766-1342ab0c-bcdf-4913-9e59-527e4cbf7ab5.png#align=left&display=inline&height=170&name=image.png&originHeight=340&originWidth=1368&size=144463&status=done&style=none&width=684)<br />Chunk 缓冲区的具体长度没有明确的标准，根据 StackOverflow 上的回答，当前客户端 chunk 缓冲区大小大概如下：\n```html\nMac:                       text/html:     image/jpeg:\ncurl 7.24.0                4096 bytes     \nFirefox 17                 1024 bytes     1886 bytes\nChrome 26.0.1410.65        1024 bytes     1885 bytes\nChrome 29.0.1524.0         8    bytes     1885 bytes\nSafari 6.0.4 (8536.29.13)  1024 bytes     whole file\n\nWindows XP:\nIE8                        256  bytes\nChrome 27.0.1453.94        1024 bytes\nFirefox 21                 1024 bytes\nOpera 12.15                128  bytes AND 3s have passed\n\nWindows 7\nIE9                        256  bytes\n\nWindows 8:\nIE10                       4096 bytes\n```\n<a name=\"DMIvU\"></a>\n### CSS\n默认情况下，浏览器同样把 CSS 也认作是渲染必不可少的内容，因为一般来说一个没有 CSS 的页面是无法有效展示的：<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585838094023-264c267c-c92e-4de3-bc0d-dab59cc470fd.png#align=left&display=inline&height=281&name=image.png&originHeight=562&originWidth=686&size=137688&status=done&style=none&width=343)<br />\n<br />所以上面的代码中的 `<link rel=\"stylesheet\" href=\"styles.css\">` 会阻塞首屏的渲染，当浏览器解析到这里时，虽然 DOM 的解析仍然会向下进行，但浏览器会一直等待 `styles.css` 加载完成并且构建成相应的 CSSOM 后再继续渲染。\n<a name=\"AaPEF\"></a>\n#### 媒体查询和阻塞渲染\n上面提到，CSS 在 **默认** 的情况下会阻塞渲染，但是可以通过合理的条件查询避免不必要的阻塞渲染，例如下面的代码中\n```html\n<link href=\"style.css\" rel=\"stylesheet\">\n<link href=\"other.css\" rel=\"stylesheet\" media=\"(min-width: 900px)\">\n```\n`style.css` 会阻塞渲染，而 `other.css` 就只在屏幕宽度符合查询条件时才会阻塞渲染，浏览器会针对这些条件进行判断。\n<a name=\"z37Rf\"></a>\n### 异步 stylesheet\n如果我们通过 js 动态插入 `stylesheet` ，同样也不会阻塞页面的渲染，下面这个例子中， `test.css` 的加载并不会阻塞页面的渲染。\n```html\n<head>\n  <script>\n   var a = document.createElement('link');\n   a.href = 'test.css';\n   a.rel = 'stylesheet';\n   document.head.appendChild(a);\n  </script>\n</head>\n<body>\n\n<h1>This is content</h1>\n\n</body>\n```\n\n\n> 在 Safari 下的表现有所区别，内联 script 插入的 CSS 仍然会阻塞渲染，但通过 requestAnimationFrame 异步插入的 CSS 则不会。\n\n<a name=\"JKX9p\"></a>\n## Script\nScript 标签也可能会阻塞页面的渲染，这取决于它在页面中的具体位置和属性。\n<a name=\"GrgYx\"></a>\n### 在 DOM 之前\n如果 Script 标签出现在 DOM 之前，浏览器会选择完整加载并执行完相应的 JS 后才会继续解析 DOM（是的，和 CSS 不同，是连解析都会阻塞的）。这是为了 JS 能够顺序和确定地执行，防止 JS 加载好后 DOM 已经和预期的不同。\n<a name=\"VYNEe\"></a>\n### 在 DOM 之后\nDOM 后的 Script 不会阻塞前面已经加载好的 DOM 的渲染，所以一般来说我们都推荐把 Script 标签放在页面的底部。\n<a name=\"Pb7WS\"></a>\n#### Safari\n在 Safari 中，情况有一些不同。即使 Script 在 DOM 的后面，Safari 并不会直接把 DOM 渲染出来，而是等待整个页面的 JS 全都加载并且执行完毕后才真正渲染页面。\n```html\n<div id=\"test\">test</div>\n<script>\n  console.log(document.getElementById('test'));\n</script>\n<script src=\"footer.js\"></script>\n```\n上面的代码在 Chrome 中会直接渲染出 `test` 元素，而在 Safari 中，虽然能够在 console 中打出元素，但是却要等到 `footer.js` 完全加载完后才会渲染页面。<br />\n<br />如果你需要针对 Safari 做一些渲染优化，可以考虑使用 `requestAnimationFrame` 来插入标签从而确认不影响用户首屏。\n> 这个问题在后续版本的 Safari 中可能会得到解决\n\n<a name=\"KSKFB\"></a>\n### async\n我们可以通过给 Script 添加 `async` 属性告知浏览器该 Script 不阻塞页面的渲染，浏览器将会一边加载一边继续解析 DOM，加载好后立即执行。浏览器并不会保证有 `async` 属性的 Script 标签的执行顺序，需要注意的是， `async` 对于内联脚本是没有意义的。\n<a name=\"TuNA9\"></a>\n### defer\n`defer` 和 `async` 的作用有些区别，在于告知浏览器不阻塞页面渲染的同时，把脚本推迟到 `DOMContentLoaded` 事件前执行。除此之外，页面上多个 `defer` 的 Script 标签仍然会保持执行顺序。同样的，defer 对于内联脚本没有意义。\n<a name=\"8gchi\"></a>\n### 动态插入\n由 JS 动态插入的脚本对页面的影响和 `async` 类似，加载不会阻塞页面渲染，加载完成后立即执行。\n<a name=\"uk7BE\"></a>\n## JavaScript 对渲染的影响\n上面说 Script 对渲染的影响，主要还是说资源文件的网络加载阻塞了页面渲染。而除了这些情况外，其实 JS 本身的执行就是会对页面渲染造成影响的。<br />\n<br />我们都知道页面中的 JavaScript 代码（除了 Worker）都运行在一个线程中，由 EventLoop 驱动<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585838012767-3aa4b188-ef41-4743-bf5d-1f35cbfc9c01.png#align=left&display=inline&height=158&name=image.png&originHeight=316&originWidth=1220&size=116969&status=done&style=none&width=610)<br />浏览器在事件循环中需要等待队列中的 JS 执行完毕，才能确定是否需要更新渲染，所以 JS 的执行本身其实就会导致渲染被阻塞。<br />\n<br />下面这个例子中，由于 JS 一直阻塞了 EventLoop， `test` 这个元素是不会被渲染出来的。\n```html\n<script>\n  while(true){\n  \tconsole.log('test'):\n  }\n</script>\n<h1>test</h1>\n```\n<a name=\"KrepY\"></a>\n## 建议\n<a name=\"tB2vN\"></a>\n### 尽可能精简和内联你的 CSS\n由于页面的渲染完全依赖于 CSS 的加载，所以尽可能的精简首屏的 CSS，如果可能的话考虑内联进页面。\n<a name=\"bfI00\"></a>\n### 使用媒体查询减少 CSS 的阻塞\n如果有明确只在特定条件下生效的 CSS（例如 print），考虑使用合适的媒体查询减小对渲染的阻塞。\n<a name=\"ObXFY\"></a>\n### 使用 preload 提前关键资源的加载\n`<link rel=\"preload\">` 可以提高资源加载优先级和提前时间，如果确定有引用的资源必然阻塞渲染，考虑用 `preload` 提前它的加载。\n<a name=\"z6QI5\"></a>\n### 减少阻塞渲染的 script\nScript 的加载和执行对渲染的阻塞非常明显，如果不必要的话合理使用 `async` `defer` 或者移动到页面底部。如果需要优化 Safari 的渲染性能，考虑使用 `requestAnimation` 来插入 `script` 等异步内容。\n<a name=\"jKWgb\"></a>\n### 避免长时间运行的 JS，尤其是首屏渲染前\n在首屏渲染之前执行一个很耗时的 JS 可能以为着白屏，尽可能避免这种情况。\n<a name=\"05XJ6\"></a>\n### 使用 Bigpipe 优化数据较多的页面\n如果页面取数分为非常多块而且耗时（例如个人中心这样的页面），考虑使用 Bigpipe 让页面尽可能早的开始渲染，在分块时注意第一个 `chunk` 的大小是否能够填满浏览器的缓冲区。<br />\n\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当浏览器开始下载 HTML 后，就会一遍解析一遍开始渲染页面的内容。我们做性能优化其中一个重要的目的就是为了让用户尽可能早的看到有效的内容，所以了解浏览器的渲染机制是非常有必要的。</p><h2 id=\"93cmh\" data-lake-id=\"9eabbd2647a4d96461b8a1c2a3378e7d\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">渲染过程</h2><h3 id=\"7t3co\" data-lake-id=\"ae597aa2669d9258460a77da299caf87\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">HTML</h3><p data-lake-id=\"95df9f14f0e46ff876d01382c5d5b759\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">HTML 显而易见是渲染必不可少的内容，浏览器接收到 HTML 的内容就会开始解析内容，构建响应的 DOM 树。浏览器并不依赖于下载或者解析完完整的 HTML，而是解析一部分渲染一部分。</p><p data-lake-id=\"7139d52a04540aea8a5077a45a871c74\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"ae91b401ff128105af53ef5af18bbc19\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们可以在响应头中增加 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Transfer-Encoding:chunked</code> 告知浏览器 HTML 将会被一块块的流式返回，在这个基础上 facebook 构建了 bigpipe，通过在服务器端流式地返回 HTML 给浏览器，你会看到自己的个人首页是随着数据的加载一块一块的渲染出来的，这样可以避免一次性获取大量的数据才开始渲染页面。</p><h4 id=\"JWG6a\" data-lake-id=\"7297394d4c5fad4a365732ba677d27c5\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">Chunk 和缓冲</h4><p data-lake-id=\"1e5443ed2f14584cf6773fb6cb0b4fa8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当我们使用 chunk 流式返回 HTML 内容时，我们期望浏览器能够马上渲染接收到的 chunk 块，但实际情况下有些浏览器则会缓冲一定的长度。例如下图中 Safari 使用 bigpipe 渲染，浏览器一直等到 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">this is pagelet 1</code> 才渲染页面，然后完成后续渲染。</p><p data-lake-id=\"b174d2a011c68ff11e9078e5fb48b529\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585838072215-a9fab628-ddaa-4974-9b19-60dd6e1c69be.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585838072215-a9fab628-ddaa-4974-9b19-60dd6e1c69be.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 632px; height: 231px;\"></span></p><p data-lake-id=\"2d45bb42ee7117c98f1bd2294dbb0d27\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">而当我们把 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Welcome to ...</code> 加长后 ，Safari 则直接渲染出首屏再完成后续的渲染</p><p data-lake-id=\"d912b31799192e2b3f6d28102a986bdd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585838081766-1342ab0c-bcdf-4913-9e59-527e4cbf7ab5.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585838081766-1342ab0c-bcdf-4913-9e59-527e4cbf7ab5.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 684px; height: 170px;\"></span></p><p data-lake-id=\"22ec3c52d69ee86f3bda8ab54e321799\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">Chunk 缓冲区的具体长度没有明确的标准，根据 StackOverflow 上的回答，当前客户端 chunk 缓冲区大小大概如下：</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"Uzj02\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Mac:                       text/html:     image/jpeg:\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">curl 7.24.0                4096 bytes     \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Firefox 17                 1024 bytes     1886 bytes\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Chrome 26.0.1410.65        1024 bytes     1885 bytes\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Chrome 29.0.1524.0         8    bytes     1885 bytes\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Safari 6.0.4 (8536.29.13)  1024 bytes     whole file\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Windows XP:\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">IE8                        256  bytes\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Chrome 27.0.1453.94        1024 bytes\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Firefox 21                 1024 bytes\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Opera 12.15                128  bytes AND 3s have passed\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Windows 7\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">IE9                        256  bytes\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Windows 8:\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">IE10                       4096 bytes</span></span></pre></div></div></div><h3 id=\"DMIvU\" data-lake-id=\"8e65a4f0cdf25eb3186a9ed02c84f8c2\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">CSS</h3><p data-lake-id=\"0a5d5a7caa95d6e60188c1d2069903c2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">默认情况下，浏览器同样把 CSS 也认作是渲染必不可少的内容，因为一般来说一个没有 CSS 的页面是无法有效展示的：</p><p data-lake-id=\"fe349efabef2b3e179a2fa9d97e255ae\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585838094023-264c267c-c92e-4de3-bc0d-dab59cc470fd.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585838094023-264c267c-c92e-4de3-bc0d-dab59cc470fd.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 343px; height: 281px;\"></span></p><p data-lake-id=\"32bd222344819687779db1b3aabb2bd6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"01dbad8ce70169d39b5a9d7489f17434\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">所以上面的代码中的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">&lt;link rel=\"stylesheet\" href=\"styles.css\"&gt;</code> 会阻塞首屏的渲染，当浏览器解析到这里时，虽然 DOM 的解析仍然会向下进行，但浏览器会一直等待 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">styles.css</code> 加载完成并且构建成相应的 CSSOM 后再继续渲染。</p><h4 id=\"AaPEF\" data-lake-id=\"a8bbac84331776af82bf9652b7bbd954\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">媒体查询和阻塞渲染</h4><p data-lake-id=\"0f1e09651a411b88ab334c70483ba2ad\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">上面提到，CSS 在 <strong>默认</strong> 的情况下会阻塞渲染，但是可以通过合理的条件查询避免不必要的阻塞渲染，例如下面的代码中</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"SxeKp\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">link</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">href</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"style.css\"</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">rel</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"stylesheet\"</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">link</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">href</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"other.css\"</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">rel</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"stylesheet\"</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">media</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"(min-width: 900px)\"</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span></span></span></pre></div></div></div><p data-lake-id=\"c47129245fe293e2539ae888b95b250b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">style.css</code> 会阻塞渲染，而 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">other.css</code> 就只在屏幕宽度符合查询条件时才会阻塞渲染，浏览器会针对这些条件进行判断。</p><h3 id=\"z37Rf\" data-lake-id=\"db3ee5cf3cc5bf9d6eab28d98cbd7bea\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">异步&nbsp;stylesheet</h3><p data-lake-id=\"cafd7f8a40c4cf875f8b2267be192c22\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">如果我们通过 js 动态插入 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">stylesheet</code> ，同样也不会阻塞页面的渲染，下面这个例子中， <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">test.css</code> 的加载并不会阻塞页面的渲染。</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"DsRMX\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">head</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">script</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">   <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">var</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">a</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">document</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createElement</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'link'</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">   <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">a</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">href</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'test.css'</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">   <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">a</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">rel</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'stylesheet'</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">   <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">document</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">head</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">appendChild</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">a</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">script</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">head</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">body</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">h1</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>This is content<span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">h1</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">body</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span></span></span></pre></div></div></div><p data-lake-id=\"a70c14c078e5223ac96a570add033c3d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><blockquote style=\"padding-left: 1em; margin-top: 5px; margin-bottom: 5px; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"725ce7e089344dcdf361941e16a5d8cc\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在 Safari 下的表现有所区别，内联 script 插入的 CSS 仍然会阻塞渲染，但通过 requestAnimationFrame 异步插入的 CSS 则不会。</p></blockquote><h2 id=\"JKX9p\" data-lake-id=\"28ecc7eb52dd5f4b99066bb8649ee045\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Script</h2><p data-lake-id=\"df0597b4d19f1b4bc2fab98e03eabb69\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">Script 标签也可能会阻塞页面的渲染，这取决于它在页面中的具体位置和属性。</p><h3 id=\"GrgYx\" data-lake-id=\"a88dedcecbf8baafa97a0cac84368aec\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">在 DOM 之前</h3><p data-lake-id=\"ebea575b2936d7d937137e1e03584495\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">如果 Script 标签出现在 DOM 之前，浏览器会选择完整加载并执行完相应的 JS 后才会继续解析 DOM（是的，和 CSS 不同，是连解析都会阻塞的）。这是为了 JS 能够顺序和确定地执行，防止 JS 加载好后 DOM 已经和预期的不同。</p><h3 id=\"VYNEe\" data-lake-id=\"45c44651194c6955ad2870b668b41ff7\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">在 DOM 之后</h3><p data-lake-id=\"49b07139816a7415cde7cd0b7bb018e2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">DOM 后的 Script 不会阻塞前面已经加载好的 DOM 的渲染，所以一般来说我们都推荐把 Script 标签放在页面的底部。</p><h4 id=\"Pb7WS\" data-lake-id=\"6600afa933c1df61392deef8bc9335f0\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">Safari</h4><p data-lake-id=\"1c454a8a2c17c5e11192f6367c83f9db\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在 Safari 中，情况有一些不同。即使 Script 在 DOM 的后面，Safari 并不会直接把 DOM 渲染出来，而是等待整个页面的 JS 全都加载并且执行完毕后才真正渲染页面。</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"DKYW2\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">id</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"test\"</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>test<span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">div</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">script</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">console</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">log</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">document</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">getElementById</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'test'</span>));\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">script</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">script</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">src</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"footer.js\"</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">script</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span></span></span></pre></div></div></div><p data-lake-id=\"2967eef17861d44155f503e4ac052721\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">上面的代码在 Chrome 中会直接渲染出 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">test</code> 元素，而在 Safari 中，虽然能够在 console 中打出元素，但是却要等到 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">footer.js</code> 完全加载完后才会渲染页面。</p><p data-lake-id=\"a369fc1dfbb611dde9b5ee5e6009dd5b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"4dddb0cbff758ef8e20b5bded4836159\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">如果你需要针对 Safari 做一些渲染优化，可以考虑使用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">requestAnimationFrame</code>&nbsp;来插入标签从而确认不影响用户首屏。</p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"4df18bd1f5980c998d3c2e1047026447\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这个问题在后续版本的 Safari 中可能会得到解决</p></blockquote><h3 id=\"KSKFB\" data-lake-id=\"b3a7314ba814f0684aa0e606083834cd\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">async</h3><p data-lake-id=\"e42159d696cff05f51144d2967f70aab\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们可以通过给 <span>Script</span> 添加 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">async</code> 属性告知浏览器该 <span>Script 不阻塞页面的渲染，浏览器将会一边加载一边继续解析 DOM，加载好后立即执行。浏览器并不会保证有&nbsp;</span><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"><span>async</span></code> 属性的 Script 标签的执行顺序，需要注意的是， <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">async</code> 对于内联脚本是没有意义的。</p><h3 id=\"TuNA9\" data-lake-id=\"34ee3d0c32a08a960c859a97c91a076f\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">defer</h3><p data-lake-id=\"b0aaaf70b788ae56db917c92eeaa91a5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">defer</code> 和 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">async</code> 的作用有些区别，在于告知浏览器不阻塞页面渲染的同时，把脚本推迟到 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">DOMContentLoaded</code> 事件前执行。除此之外，页面上多个 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">defer</code> 的 Script 标签仍然会保持执行顺序。同样的，defer 对于内联脚本没有意义。</p><h3 id=\"8gchi\" data-lake-id=\"95a7856be5e4086482a20eb6e3dee80f\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">动态插入</h3><p data-lake-id=\"203762e662de23ed259fe4cddf40cee9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">由 JS 动态插入的脚本对页面的影响和 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">async</code> 类似，加载不会阻塞页面渲染，加载完成后立即执行。</p><h2 id=\"uk7BE\" data-lake-id=\"0b2bcc88fde3c4e5e8af76464e566d18\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">JavaScript 对渲染的影响</h2><p data-lake-id=\"50afefeb1a432dbd681821426a643ecb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">上面说 Script 对渲染的影响，主要还是说资源文件的网络加载阻塞了页面渲染。而除了这些情况外，其实 JS 本身的执行就是会对页面渲染造成影响的。</p><p data-lake-id=\"bc526da9b974950a3f41fa4675efd8d2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"4a162f15ebe8edbcf436c3bc4015436c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们都知道页面中的 JavaScript 代码（除了 Worker）都运行在一个线程中，由 EventLoop 驱动</p><p data-lake-id=\"975961c51cfc4f9b425e0b8a3fb2a6c0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585838012767-3aa4b188-ef41-4743-bf5d-1f35cbfc9c01.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585838012767-3aa4b188-ef41-4743-bf5d-1f35cbfc9c01.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 610px; height: 158px;\"></span></p><p data-lake-id=\"5c56e9bfe457d34b522f96c936e80ba9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">浏览器在事件循环中需要等待队列中的 JS 执行完毕，才能确定是否需要更新渲染，所以 JS 的执行本身其实就会导致渲染被阻塞。</p><p data-lake-id=\"ef2ca30304bc977aa4987312bde9576c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"0fb7cc121792c56aac93f50e04a3cc59\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">下面这个例子中，由于 JS 一直阻塞了 EventLoop， <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">test</code> 这个元素是不会被渲染出来的。</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"FnLRd\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">script</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">while</span>(<span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">true</span>){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">console</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">log</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'test'</span>):\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">script</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">h1</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span>test<span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;/</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">h1</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span></span></span></pre></div></div></div><h2 id=\"KrepY\" data-lake-id=\"b8c2aeeee5d4cc1faeba504f625064a2\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">建议</h2><h3 id=\"tB2vN\" data-lake-id=\"53a40cf39096c7bb1720231015fe18bc\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">尽可能精简和内联你的 CSS</h3><p data-lake-id=\"652135c5ae6754cb1d268cfad95906cb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">由于页面的渲染完全依赖于 CSS 的加载，所以尽可能的精简首屏的 CSS，如果可能的话考虑内联进页面。</p><h3 id=\"bfI00\" data-lake-id=\"5a29a60731757ab2e55dcbcac8844854\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">使用媒体查询减少 CSS 的阻塞</h3><p data-lake-id=\"e180b292e9918f7914d22f61c5e115ed\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">如果有明确只在特定条件下生效的 CSS（例如 print），考虑使用合适的媒体查询减小对渲染的阻塞。</p><h3 id=\"ObXFY\" data-lake-id=\"047de29929c42e056604046580d34f63\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">使用 preload 提前关键资源的加载</h3><p data-lake-id=\"3b3f19844f20e93cb4208fda1ea14e2f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">&lt;link rel=\"preload\"&gt;</code> 可以提高资源加载优先级和提前时间，如果确定有引用的资源必然阻塞渲染，考虑用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">preload</code> 提前它的加载。</p><h3 id=\"z6QI5\" data-lake-id=\"8c0e19ab6813621abdcd3d914edc3979\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">减少阻塞渲染的 script</h3><p data-lake-id=\"17fd6d4013d489b8db3da1ead294f0aa\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span>Script</span> 的加载和执行对渲染的阻塞非常明显，如果不必要的话合理使用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">async</code> <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">defer</code> 或者移动到页面底部。如果需要优化 Safari 的渲染性能，考虑使用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">requestAnimation</code> 来插入 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">script</code> 等异步内容。</p><h3 id=\"jKWgb\" data-lake-id=\"b0748ffa493494d766301ada751bdd22\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">避免长时间运行的 JS，尤其是首屏渲染前</h3><p data-lake-id=\"233ac85de884d446d7cbf2544d73402e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在首屏渲染之前执行一个很耗时的 JS 可能以为着白屏，尽可能避免这种情况。</p><h3 id=\"05XJ6\" data-lake-id=\"1415cffae7af0c0cd8f48cf1e252731d\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">使用 Bigpipe 优化数据较多的页面</h3><p data-lake-id=\"0e212231b6a30c1bdf5d02e9d89172a2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">如果页面取数分为非常多块而且耗时（例如个人中心这样的页面），考虑使用 Bigpipe 让页面尽可能早的开始渲染，在分块时注意第一个 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">chunk</code> 的大小是否能够填满浏览器的缓冲区。</p><p data-lake-id=\"3f316c90b24ff84562c0c78e7a5fb299\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">当浏览器开始下载 HTML 后，就会一遍解析一遍开始渲染页面的内容。我们做性能优化其中一个重要的目的就是为了让用户尽可能早的看到有效的内容，所以了解浏览器的渲染机制是非常有必要的。</p><h2 id=\"93cmh\" data-lake-id=\"9eabbd2647a4d96461b8a1c2a3378e7d\">渲染过程</h2><h3 id=\"7t3co\" data-lake-id=\"ae597aa2669d9258460a77da299caf87\">HTML</h3><p data-lake-id=\"95df9f14f0e46ff876d01382c5d5b759\">HTML 显而易见是渲染必不可少的内容，浏览器接收到 HTML 的内容就会开始解析内容，构建响应的 DOM 树。浏览器并不依赖于下载或者解析完完整的 HTML，而是解析一部分渲染一部分。</p><p data-lake-id=\"7139d52a04540aea8a5077a45a871c74\"><br /></p><p data-lake-id=\"ae91b401ff128105af53ef5af18bbc19\">我们可以在响应头中增加 <code>Transfer-Encoding:chunked</code> 告知浏览器 HTML 将会被一块块的流式返回，在这个基础上 facebook 构建了 bigpipe，通过在服务器端流式地返回 HTML 给浏览器，你会看到自己的个人首页是随着数据的加载一块一块的渲染出来的，这样可以避免一次性获取大量的数据才开始渲染页面。</p><h4 id=\"JWG6a\" data-lake-id=\"7297394d4c5fad4a365732ba677d27c5\">Chunk 和缓冲</h4><p data-lake-id=\"1e5443ed2f14584cf6773fb6cb0b4fa8\">当我们使用 chunk 流式返回 HTML 内容时，我们期望浏览器能够马上渲染接收到的 chunk 块，但实际情况下有些浏览器则会缓冲一定的长度。例如下图中 Safari 使用 bigpipe 渲染，浏览器一直等到 <code>this is pagelet 1</code> 才渲染页面，然后完成后续渲染。</p><p data-lake-id=\"b174d2a011c68ff11e9078e5fb48b529\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585838072215-a9fab628-ddaa-4974-9b19-60dd6e1c69be.png%22%2C%22originWidth%22%3A1264%2C%22originHeight%22%3A462%2C%22name%22%3A%22image.png%22%2C%22size%22%3A199221%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A782.10004%2C%22y%22%3A34.233334%2C%22width%22%3A19.75%2C%22height%22%3A14.483333000000002%2C%22text%22%3A%22%E5%B7%B4%22%7D%2C%7B%22x%22%3A907.18335%2C%22y%22%3A35.55%2C%22width%22%3A46.083349999999996%2C%22height%22%3A13.166667000000004%2C%22text%22%3A%22LOcAIHOST%22%7D%2C%7B%22x%22%3A711%2C%22y%22%3A121.13334%2C%22width%22%3A305.46669999999995%2C%22height%22%3A25.016670000000005%2C%22text%22%3A%22ThisiskoabigpipeDemo%22%7D%2C%7B%22x%22%3A89.53333%2C%22y%22%3A125.083336%2C%22width%22%3A298.88337%2C%22height%22%3A23.700004000000007%2C%22text%22%3A%22ThisiskoabigpipeDemo%22%7D%2C%7B%22x%22%3A712.3167%2C%22y%22%3A161.95001%2C%22width%22%3A205.39999999999998%2C%22height%22%3A15.799990000000008%2C%22text%22%3A%22WelcoMetoTHlSiKOablaplpeDemo%22%7D%2C%7B%22x%22%3A711%2C%22y%22%3A202.76668%2C%22width%22%3A184.33339999999998%2C%22height%22%3A26.333319999999986%2C%22text%22%3A%22thisispagelet1%22%7D%2C%7B%22x%22%3A96.11667%2C%22y%22%3A208.03334%2C%22width%22%3A173.80003%2C%22height%22%3A21.066659999999985%2C%22text%22%3A%22thisispagelet1%22%7D%2C%7B%22x%22%3A707.05005%2C%22y%22%3A264.65%2C%22width%22%3A188.28334999999993%2C%22height%22%3A22.38336000000004%2C%22text%22%3A%22thisispagelet2%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E5%B7%B4%20LOcAIHOST%20ThisiskoabigpipeDemo%20ThisiskoabigpipeDemo%20WelcoMetoTHlSiKOablaplpeDemo%20thisispagelet1%20thisispagelet1%20thisispagelet2%22%2C%22width%22%3A632%2C%22height%22%3A231%7D\"></card></p><p data-lake-id=\"2d45bb42ee7117c98f1bd2294dbb0d27\">而当我们把 <code>Welcome to ...</code> 加长后 ，Safari 则直接渲染出首屏再完成后续的渲染</p><p data-lake-id=\"d912b31799192e2b3f6d28102a986bdd\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585838081766-1342ab0c-bcdf-4913-9e59-527e4cbf7ab5.png%22%2C%22originWidth%22%3A1368%2C%22originHeight%22%3A340%2C%22name%22%3A%22image.png%22%2C%22size%22%3A144463%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A511.57498%2C%22y%22%3A82.65%2C%22width%22%3A213.75002000000006%2C%22height%22%3A18.52499999999999%2C%22text%22%3A%22ThisiskoabigpipeDemo%22%7D%2C%7B%22x%22%3A961.875%2C%22y%22%3A82.65%2C%22width%22%3A218.0250000000001%2C%22height%22%3A18.52499999999999%2C%22text%22%3A%22THIsIsKoabigpipeDemo%22%7D%2C%7B%22x%22%3A66.975%2C%22y%22%3A85.5%2C%22width%22%3A209.475%2C%22height%22%3A18.525000000000006%2C%22text%22%3A%22ThisisKoabigplpeDemo%22%7D%2C%7B%22x%22%3A961.875%2C%22y%22%3A139.65%2C%22width%22%3A132.5250000000001%2C%22height%22%3A18.525000000000006%2C%22text%22%3A%22thisispagelet1%22%7D%2C%7B%22x%22%3A514.425%2C%22y%22%3A142.5%2C%22width%22%3A123.97500000000002%2C%22height%22%3A15.675000000000011%2C%22text%22%3A%22thisispagelet1%22%7D%2C%7B%22x%22%3A959.02496%2C%22y%22%3A179.55%2C%22width%22%3A133.95003999999994%2C%22height%22%3A18.524999999999977%2C%22text%22%3A%22thisispagelet2%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22ThisiskoabigpipeDemo%20THIsIsKoabigpipeDemo%20ThisisKoabigplpeDemo%20thisispagelet1%20thisispagelet1%20thisispagelet2%22%2C%22width%22%3A684%2C%22height%22%3A170%7D\"></card></p><p data-lake-id=\"22ec3c52d69ee86f3bda8ab54e321799\">Chunk 缓冲区的具体长度没有明确的标准，根据 StackOverflow 上的回答，当前客户端 chunk 缓冲区大小大概如下：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22Mac%3A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20text%2Fhtml%3A%20%20%20%20%20image%2Fjpeg%3A%5Cncurl%207.24.0%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%204096%20bytes%20%20%20%20%20%5CnFirefox%2017%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%201024%20bytes%20%20%20%20%201886%20bytes%5CnChrome%2026.0.1410.65%20%20%20%20%20%20%20%201024%20bytes%20%20%20%20%201885%20bytes%5CnChrome%2029.0.1524.0%20%20%20%20%20%20%20%20%208%20%20%20%20bytes%20%20%20%20%201885%20bytes%5CnSafari%206.0.4%20(8536.29.13)%20%201024%20bytes%20%20%20%20%20whole%20file%5Cn%5CnWindows%20XP%3A%5CnIE8%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20256%20%20bytes%5CnChrome%2027.0.1453.94%20%20%20%20%20%20%20%201024%20bytes%5CnFirefox%2021%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%201024%20bytes%5CnOpera%2012.15%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20128%20%20bytes%20AND%203s%20have%20passed%5Cn%5CnWindows%207%5CnIE9%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20256%20%20bytes%5Cn%5CnWindows%208%3A%5CnIE10%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%204096%20bytes%22%2C%22id%22%3A%22Uzj02%22%7D\"></card><h3 id=\"DMIvU\" data-lake-id=\"8e65a4f0cdf25eb3186a9ed02c84f8c2\">CSS</h3><p data-lake-id=\"0a5d5a7caa95d6e60188c1d2069903c2\">默认情况下，浏览器同样把 CSS 也认作是渲染必不可少的内容，因为一般来说一个没有 CSS 的页面是无法有效展示的：</p><p data-lake-id=\"fe349efabef2b3e179a2fa9d97e255ae\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585838094023-264c267c-c92e-4de3-bc0d-dab59cc470fd.png%22%2C%22originWidth%22%3A686%2C%22originHeight%22%3A562%2C%22name%22%3A%22image.png%22%2C%22size%22%3A137688%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A234.38333%2C%22y%22%3A61.454166%2C%22width%22%3A61.454169999999976%2C%22height%22%3A10.718744000000001%2C%22text%22%3A%22%E5%AE%89423%3A26%22%7D%2C%7B%22x%22%3A570.2375%2C%22y%22%3A62.88333%2C%22width%22%3A28.58330000000001%2C%22height%22%3A10.004170000000002%2C%22text%22%3A%22123%3A26%22%7D%2C%7B%22x%22%3A243.67291%2C%22y%22%3A83.60625%2C%22width%22%3A16.435429999999997%2C%22height%22%3A15.720829999999992%2C%22text%22%3A%22%E5%9B%9E%22%7D%2C%7B%22x%22%3A75.745834%2C%22y%22%3A86.464584%2C%22width%22%3A91.466666%2C%22height%22%3A10.004165999999998%2C%22text%22%3A%22mobile.nytimes.com%22%7D%2C%7B%22x%22%3A377.3%2C%22y%22%3A86.464584%2C%22width%22%3A93.61039999999997%2C%22height%22%3A10.004165999999998%2C%22text%22%3A%22mobile.nytimes.com%22%7D%2C%7B%22x%22%3A371.58334%2C%22y%22%3A113.61875%2C%22width%22%3A115.76248999999996%2C%22height%22%3A12.147909999999996%2C%22text%22%3A%22MainMenwMainMenu%22%7D%2C%7B%22x%22%3A117.90625%2C%22y%22%3A115.7625%2C%22width%22%3A121.47917000000001%2C%22height%22%3A15.720839999999995%2C%22text%22%3A%22ehcrcwlorkcimcs%22%7D%2C%7B%22x%22%3A379.44376%2C%22y%22%3A129.33958%2C%22width%22%3A54.30831999999998%2C%22height%22%3A9.289589999999976%2C%22text%22%3A%22USEDTION%22%7D%2C%7B%22x%22%3A420.8896%2C%22y%22%3A129.33958%2C%22width%22%3A93.61040000000003%2C%22height%22%3A8.574999999999989%2C%22text%22%3A%22ionInternotionalEdition%22%7D%2C%7B%22x%22%3A75.745834%2C%22y%22%3A144.34583%2C%22width%22%3A109.331256%2C%22height%22%3A8.575009999999992%2C%22text%22%3A%22%E5%8A%A0222014U84563OP0T%22%7D%2C%7B%22x%22%3A223.66458%2C%22y%22%3A144.34583%2C%22width%22%3A40.73126000000002%2C%22height%22%3A7.860420000000005%2C%22text%22%3A%22SU8S8NNE%22%7D%2C%7B%22x%22%3A264.39584%2C%22y%22%3A145.06041%2C%22width%22%3A25.01040999999998%2C%22height%22%3A7.145840000000021%2C%22text%22%3A%22ILO0N%22%7D%2C%7B%22x%22%3A400.88126%2C%22y%22%3A156.49374%2C%22width%22%3A31.441640000000007%2C%22height%22%3A10.004169999999988%2C%22text%22%3A%22Home%22%7D%2C%7B%22x%22%3A400.88126%2C%22y%22%3A171.5%2C%22width%22%3A31.441640000000007%2C%22height%22%3A9.28958%2C%22text%22%3A%22Home%22%7D%2C%7B%22x%22%3A91.46667%2C%22y%22%3A175.07292%2C%22width%22%3A107.18749%2C%22height%22%3A12.147909999999996%2C%22text%22%3A%22TheNewBabyTrike%22%7D%2C%7B%22x%22%3A400.16666%2C%22y%22%3A185.07709%2C%22width%22%3A33.58542%2C%22height%22%3A9.28958%2C%22text%22%3A%22World%22%7D%2C%7B%22x%22%3A398.02292%2C%22y%22%3A198.65416%2C%22width%22%3A70.74374%2C%22height%22%3A10.71875%2C%22text%22%3A%22USUSN%22%7D%2C%7B%22x%22%3A398.02292%2C%22y%22%3A212.23125%2C%22width%22%3A98.61248%2C%22height%22%3A10.71875%2C%22text%22%3A%22PoliticsusPolitics%22%7D%2C%7B%22x%22%3A74.316666%2C%22y%22%3A215.80417%2C%22width%22%3A130.05416400000001%2C%22height%22%3A10.71875%2C%22text%22%3A%22SupremeCourtUpholds%22%7D%2C%7B%22x%22%3A401.59583%2C%22y%22%3A227.95209%2C%22width%22%3A57.88125000000002%2C%22height%22%3A10.004160000000013%2C%22text%22%3A%22TheUpshoi%22%7D%2C%7B%22x%22%3A74.316666%2C%22y%22%3A229.38124%2C%22width%22%3A155.779164%2C%22height%22%3A10.71875%2C%22text%22%3A%22Michigan'%60sAffirmativeAction%22%7D%2C%7B%22x%22%3A400.16666%2C%22y%22%3A241.52916%2C%22width%22%3A63.597939999999994%2C%22height%22%3A10.71875%2C%22text%22%3A%22NYReRion%22%7D%2C%7B%22x%22%3A74.316666%2C%22y%22%3A242.95833%2C%22width%22%3A43.589584%2C%22height%22%3A10.004170000000016%2C%22text%22%3A%22Ban%22%7D%2C%7B%22x%22%3A399.4521%2C%22y%22%3A256.5354%2C%22width%22%3A87.17916000000002%2C%22height%22%3A10.00418000000002%2C%22text%22%3A%22BusinessBusiness%22%7D%2C%7B%22x%22%3A74.316666%2C%22y%22%3A257.96457%2C%22width%22%3A161.495834%2C%22height%22%3A9.28958%2C%22text%22%3A%22ThesupremeCourtonTuesdayupheid%22%7D%2C%7B%22x%22%3A72.17291%2C%22y%22%3A270.1125%2C%22width%22%3A170.78542%2C%22height%22%3A9.28956999999997%2C%22text%22%3A%22aMIchiganvorerinltiatlvetharbanned%22%7D%2C%7B%22x%22%3A400.16666%2C%22y%22%3A270.1125%2C%22width%22%3A67.17084%2C%22height%22%3A10.718739999999968%2C%22text%22%3A%22BuSIncSsDaY%22%7D%2C%7B%22x%22%3A70.74375%2C%22y%22%3A281.54584%2C%22width%22%3A206.51458%2C%22height%22%3A9.28958%2C%22text%22%3A%22ractalpreferencesinadmisstonstothestate'spublie%22%7D%2C%7B%22x%22%3A400.88126%2C%22y%22%3A284.40417%2C%22width%22%3A57.881219999999985%2C%22height%22%3A10.71875%2C%22text%22%3A%22Technology%22%7D%2C%7B%22x%22%3A72.8875%2C%22y%22%3A293.69376%2C%22width%22%3A60.02499999999999%2C%22height%22%3A8.574979999999982%2C%22text%22%3A%22universities%22%7D%2C%7B%22x%22%3A399.4521%2C%22y%22%3A299.4104%2C%22width%22%3A34.299980000000005%2C%22height%22%3A10.00418000000002%2C%22text%22%3A%22Sports%22%7D%2C%7B%22x%22%3A400.16666%2C%22y%22%3A313.7021%2C%22width%22%3A32.156240000000025%2C%22height%22%3A10.004140000000007%2C%22text%22%3A%22Sports%22%7D%2C%7B%22x%22%3A72.17291%2C%22y%22%3A326.56458%2C%22width%22%3A125.05207999999999%2C%22height%22%3A10.00418000000002%2C%22text%22%3A%22SupremeCourtHears%22%7D%2C%7B%22x%22%3A399.4521%2C%22y%22%3A337.99792%2C%22width%22%3A42.16040000000004%2C%22height%22%3A10.004159999999956%2C%22text%22%3A%22gpinion%22%7D%2C%7B%22x%22%3A72.17291%2C%22y%22%3A338.7125%2C%22width%22%3A134.34168%2C%22height%22%3A10.718740000000025%2C%22text%22%3A%22ArgumentsinAcrcoCase%22%7D%2C%7B%22x%22%3A400.16666%2C%22y%22%3A353.00415%2C%22width%22%3A40.73126000000002%2C%22height%22%3A9.28958%2C%22text%22%3A%22Qpinion%22%7D%2C%7B%22x%22%3A72.8875%2C%22y%22%3A354.43332%2C%22width%22%3A128.625%2C%22height%22%3A9.28958%2C%22text%22%3A%22Televisionbroadeastersare%22%7D%2C%7B%22x%22%3A72.8875%2C%22y%22%3A365.86667%2C%22width%22%3A156.49374%2C%22height%22%3A9.28958%2C%22text%22%3A%22challengingAereo%2CanInternetstart-up%22%7D%2C%7B%22x%22%3A399.4521%2C%22y%22%3A367.29584%2C%22width%22%3A39.30205000000001%2C%22height%22%3A9.28958%2C%22text%22%3A%22Science%22%7D%2C%7B%22x%22%3A72.17291%2C%22y%22%3A377.3%2C%22width%22%3A160.78125%2C%22height%22%3A9.28956999999997%2C%22text%22%3A%22thatuscsarraysofsmallantennasto%22%7D%2C%7B%22x%22%3A400.16666%2C%22y%22%3A380.15833%2C%22width%22%3A34.30001000000004%2C%22height%22%3A10.71875%2C%22text%22%3A%22Heaith%22%7D%2C%7B%22x%22%3A71.458336%2C%22y%22%3A390.1625%2C%22width%22%3A165.068744%2C%22height%22%3A8.574999999999989%2C%22text%22%3A%22SReamovertheuIrsignoLsTosubscribers%22%7D%2C%7B%22x%22%3A400.16666%2C%22y%22%3A394.44998%2C%22width%22%3A21.4375%2C%22height%22%3A10.00418000000002%2C%22text%22%3A%22Arts%22%7D%2C%7B%22x%22%3A400.16666%2C%22y%22%3A408.74167%2C%22width%22%3A22.86667%2C%22height%22%3A10.71875%2C%22text%22%3A%22Arts%22%7D%2C%7B%22x%22%3A73.60208%2C%22y%22%3A420.8896%2C%22width%22%3A161.49584%2C%22height%22%3A12.14790000000005%2C%22text%22%3A%22WithSharpRebuketoRussia%2C%22%7D%2C%7B%22x%22%3A399.4521%2C%22y%22%3A423.03333%2C%22width%22%3A26.43956000000003%2C%22height%22%3A10.004170000000045%2C%22text%22%3A%22style%22%7D%2C%7B%22x%22%3A76.46042%2C%22y%22%3A435.18124%2C%22width%22%3A148.63333%2C%22height%22%3A9.289589999999976%2C%22text%22%3A%22Biden-offersStrongSumnort%22%7D%2C%7B%22x%22%3A400.88126%2C%22y%22%3A436.6104%2C%22width%22%3A26.439570000000003%2C%22height%22%3A7.860429999999951%2C%22text%22%3A%22Srole%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E5%AE%89423%3A26%20123%3A26%20%E5%9B%9E%20mobile.nytimes.com%20mobile.nytimes.com%20MainMenwMainMenu%20ehcrcwlorkcimcs%20USEDTION%20ionInternotionalEdition%20%E5%8A%A0222014U84563OP0T%20SU8S8NNE%20ILO0N%20Home%20Home%20TheNewBabyTrike%20World%20USUSN%20PoliticsusPolitics%20SupremeCourtUpholds%20TheUpshoi%20Michigan'%60sAffirmativeAction%20NYReRion%20Ban%20BusinessBusiness%20ThesupremeCourtonTuesdayupheid%20aMIchiganvorerinltiatlvetharbanned%20BuSIncSsDaY%20ractalpreferencesinadmisstonstothestate'spublie%20Technology%20universities%20Sports%20Sports%20SupremeCourtHears%20gpinion%20ArgumentsinAcrcoCase%20Qpinion%20Televisionbroadeastersare%20challengingAereo%2CanInternetstart-up%20Science%20thatuscsarraysofsmallantennasto%20Heaith%20SReamovertheuIrsignoLsTosubscribers%20Arts%20Arts%20WithSharpRebuketoRussia%2C%20style%20Biden-offersStrongSumnort%20Srole%22%2C%22width%22%3A343%2C%22height%22%3A281%7D\"></card></p><p data-lake-id=\"32bd222344819687779db1b3aabb2bd6\"><br /></p><p data-lake-id=\"01dbad8ce70169d39b5a9d7489f17434\">所以上面的代码中的 <code>&lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&gt;</code> 会阻塞首屏的渲染，当浏览器解析到这里时，虽然 DOM 的解析仍然会向下进行，但浏览器会一直等待 <code>styles.css</code> 加载完成并且构建成相应的 CSSOM 后再继续渲染。</p><h4 id=\"AaPEF\" data-lake-id=\"a8bbac84331776af82bf9652b7bbd954\">媒体查询和阻塞渲染</h4><p data-lake-id=\"0f1e09651a411b88ab334c70483ba2ad\">上面提到，CSS 在 <strong>默认</strong> 的情况下会阻塞渲染，但是可以通过合理的条件查询避免不必要的阻塞渲染，例如下面的代码中</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%3Clink%20href%3D%5C%22style.css%5C%22%20rel%3D%5C%22stylesheet%5C%22%3E%5Cn%3Clink%20href%3D%5C%22other.css%5C%22%20rel%3D%5C%22stylesheet%5C%22%20media%3D%5C%22(min-width%3A%20900px)%5C%22%3E%22%2C%22id%22%3A%22SxeKp%22%7D\"></card><p data-lake-id=\"c47129245fe293e2539ae888b95b250b\"><code>style.css</code> 会阻塞渲染，而 <code>other.css</code> 就只在屏幕宽度符合查询条件时才会阻塞渲染，浏览器会针对这些条件进行判断。</p><h3 id=\"z37Rf\" data-lake-id=\"db3ee5cf3cc5bf9d6eab28d98cbd7bea\">异步 stylesheet</h3><p data-lake-id=\"cafd7f8a40c4cf875f8b2267be192c22\">如果我们通过 js 动态插入 <code>stylesheet</code> ，同样也不会阻塞页面的渲染，下面这个例子中， <code>test.css</code> 的加载并不会阻塞页面的渲染。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%3Chead%3E%5Cn%20%20%3Cscript%3E%5Cn%20%20%20var%20a%20%3D%20document.createElement('link')%3B%5Cn%20%20%20a.href%20%3D%20'test.css'%3B%5Cn%20%20%20a.rel%20%3D%20'stylesheet'%3B%5Cn%20%20%20document.head.appendChild(a)%3B%5Cn%20%20%3C%2Fscript%3E%5Cn%3C%2Fhead%3E%5Cn%3Cbody%3E%5Cn%5Cn%3Ch1%3EThis%20is%20content%3C%2Fh1%3E%5Cn%5Cn%3C%2Fbody%3E%22%2C%22id%22%3A%22DsRMX%22%7D\"></card><p data-lake-id=\"a70c14c078e5223ac96a570add033c3d\"><br /></p><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"725ce7e089344dcdf361941e16a5d8cc\">在 Safari 下的表现有所区别，内联 script 插入的 CSS 仍然会阻塞渲染，但通过 requestAnimationFrame 异步插入的 CSS 则不会。</p></blockquote><h2 id=\"JKX9p\" data-lake-id=\"28ecc7eb52dd5f4b99066bb8649ee045\">Script</h2><p data-lake-id=\"df0597b4d19f1b4bc2fab98e03eabb69\">Script 标签也可能会阻塞页面的渲染，这取决于它在页面中的具体位置和属性。</p><h3 id=\"GrgYx\" data-lake-id=\"a88dedcecbf8baafa97a0cac84368aec\">在 DOM 之前</h3><p data-lake-id=\"ebea575b2936d7d937137e1e03584495\">如果 Script 标签出现在 DOM 之前，浏览器会选择完整加载并执行完相应的 JS 后才会继续解析 DOM（是的，和 CSS 不同，是连解析都会阻塞的）。这是为了 JS 能够顺序和确定地执行，防止 JS 加载好后 DOM 已经和预期的不同。</p><h3 id=\"VYNEe\" data-lake-id=\"45c44651194c6955ad2870b668b41ff7\">在 DOM 之后</h3><p data-lake-id=\"49b07139816a7415cde7cd0b7bb018e2\">DOM 后的 Script 不会阻塞前面已经加载好的 DOM 的渲染，所以一般来说我们都推荐把 Script 标签放在页面的底部。</p><h4 id=\"Pb7WS\" data-lake-id=\"6600afa933c1df61392deef8bc9335f0\">Safari</h4><p data-lake-id=\"1c454a8a2c17c5e11192f6367c83f9db\">在 Safari 中，情况有一些不同。即使 Script 在 DOM 的后面，Safari 并不会直接把 DOM 渲染出来，而是等待整个页面的 JS 全都加载并且执行完毕后才真正渲染页面。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%3Cdiv%20id%3D%5C%22test%5C%22%3Etest%3C%2Fdiv%3E%5Cn%3Cscript%3E%5Cn%20%20console.log(document.getElementById('test'))%3B%5Cn%3C%2Fscript%3E%5Cn%3Cscript%20src%3D%5C%22footer.js%5C%22%3E%3C%2Fscript%3E%22%2C%22id%22%3A%22DKYW2%22%7D\"></card><p data-lake-id=\"2967eef17861d44155f503e4ac052721\">上面的代码在 Chrome 中会直接渲染出 <code>test</code> 元素，而在 Safari 中，虽然能够在 console 中打出元素，但是却要等到 <code>footer.js</code> 完全加载完后才会渲染页面。</p><p data-lake-id=\"a369fc1dfbb611dde9b5ee5e6009dd5b\"><br /></p><p data-lake-id=\"4dddb0cbff758ef8e20b5bded4836159\">如果你需要针对 Safari 做一些渲染优化，可以考虑使用 <code>requestAnimationFrame</code> 来插入标签从而确认不影响用户首屏。</p><blockquote><p data-lake-id=\"4df18bd1f5980c998d3c2e1047026447\">这个问题在后续版本的 Safari 中可能会得到解决</p></blockquote><h3 id=\"KSKFB\" data-lake-id=\"b3a7314ba814f0684aa0e606083834cd\">async</h3><p data-lake-id=\"e42159d696cff05f51144d2967f70aab\">我们可以通过给 <span>Script</span> 添加 <code>async</code> 属性告知浏览器该 <span>Script 不阻塞页面的渲染，浏览器将会一边加载一边继续解析 DOM，加载好后立即执行。浏览器并不会保证有 </span><code><span>async</span></code> 属性的 Script 标签的执行顺序，需要注意的是， <code>async</code> 对于内联脚本是没有意义的。</p><h3 id=\"TuNA9\" data-lake-id=\"34ee3d0c32a08a960c859a97c91a076f\">defer</h3><p data-lake-id=\"b0aaaf70b788ae56db917c92eeaa91a5\"><code>defer</code> 和 <code>async</code> 的作用有些区别，在于告知浏览器不阻塞页面渲染的同时，把脚本推迟到 <code>DOMContentLoaded</code> 事件前执行。除此之外，页面上多个 <code>defer</code> 的 Script 标签仍然会保持执行顺序。同样的，defer 对于内联脚本没有意义。</p><h3 id=\"8gchi\" data-lake-id=\"95a7856be5e4086482a20eb6e3dee80f\">动态插入</h3><p data-lake-id=\"203762e662de23ed259fe4cddf40cee9\">由 JS 动态插入的脚本对页面的影响和 <code>async</code> 类似，加载不会阻塞页面渲染，加载完成后立即执行。</p><h2 id=\"uk7BE\" data-lake-id=\"0b2bcc88fde3c4e5e8af76464e566d18\">JavaScript 对渲染的影响</h2><p data-lake-id=\"50afefeb1a432dbd681821426a643ecb\">上面说 Script 对渲染的影响，主要还是说资源文件的网络加载阻塞了页面渲染。而除了这些情况外，其实 JS 本身的执行就是会对页面渲染造成影响的。</p><p data-lake-id=\"bc526da9b974950a3f41fa4675efd8d2\"><br /></p><p data-lake-id=\"4a162f15ebe8edbcf436c3bc4015436c\">我们都知道页面中的 JavaScript 代码（除了 Worker）都运行在一个线程中，由 EventLoop 驱动</p><p data-lake-id=\"975961c51cfc4f9b425e0b8a3fb2a6c0\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585838012767-3aa4b188-ef41-4743-bf5d-1f35cbfc9c01.png%22%2C%22originWidth%22%3A1220%2C%22originHeight%22%3A316%2C%22name%22%3A%22image.png%22%2C%22size%22%3A116969%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A610%2C%22height%22%3A158%7D\"></card></p><p data-lake-id=\"5c56e9bfe457d34b522f96c936e80ba9\">浏览器在事件循环中需要等待队列中的 JS 执行完毕，才能确定是否需要更新渲染，所以 JS 的执行本身其实就会导致渲染被阻塞。</p><p data-lake-id=\"ef2ca30304bc977aa4987312bde9576c\"><br /></p><p data-lake-id=\"0fb7cc121792c56aac93f50e04a3cc59\">下面这个例子中，由于 JS 一直阻塞了 EventLoop， <code>test</code> 这个元素是不会被渲染出来的。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%3Cscript%3E%5Cn%20%20while(true)%7B%5Cn%20%20%5Ctconsole.log('test')%3A%5Cn%20%20%7D%5Cn%3C%2Fscript%3E%5Cn%3Ch1%3Etest%3C%2Fh1%3E%22%2C%22id%22%3A%22FnLRd%22%7D\"></card><h2 id=\"KrepY\" data-lake-id=\"b8c2aeeee5d4cc1faeba504f625064a2\">建议</h2><h3 id=\"tB2vN\" data-lake-id=\"53a40cf39096c7bb1720231015fe18bc\">尽可能精简和内联你的 CSS</h3><p data-lake-id=\"652135c5ae6754cb1d268cfad95906cb\">由于页面的渲染完全依赖于 CSS 的加载，所以尽可能的精简首屏的 CSS，如果可能的话考虑内联进页面。</p><h3 id=\"bfI00\" data-lake-id=\"5a29a60731757ab2e55dcbcac8844854\">使用媒体查询减少 CSS 的阻塞</h3><p data-lake-id=\"e180b292e9918f7914d22f61c5e115ed\">如果有明确只在特定条件下生效的 CSS（例如 print），考虑使用合适的媒体查询减小对渲染的阻塞。</p><h3 id=\"ObXFY\" data-lake-id=\"047de29929c42e056604046580d34f63\">使用 preload 提前关键资源的加载</h3><p data-lake-id=\"3b3f19844f20e93cb4208fda1ea14e2f\"><code>&lt;link rel=&quot;preload&quot;&gt;</code> 可以提高资源加载优先级和提前时间，如果确定有引用的资源必然阻塞渲染，考虑用 <code>preload</code> 提前它的加载。</p><h3 id=\"z6QI5\" data-lake-id=\"8c0e19ab6813621abdcd3d914edc3979\">减少阻塞渲染的 script</h3><p data-lake-id=\"17fd6d4013d489b8db3da1ead294f0aa\"><span>Script</span> 的加载和执行对渲染的阻塞非常明显，如果不必要的话合理使用 <code>async</code> <code>defer</code> 或者移动到页面底部。如果需要优化 Safari 的渲染性能，考虑使用 <code>requestAnimation</code> 来插入 <code>script</code> 等异步内容。</p><h3 id=\"jKWgb\" data-lake-id=\"b0748ffa493494d766301ada751bdd22\">避免长时间运行的 JS，尤其是首屏渲染前</h3><p data-lake-id=\"233ac85de884d446d7cbf2544d73402e\">在首屏渲染之前执行一个很耗时的 JS 可能以为着白屏，尽可能避免这种情况。</p><h3 id=\"05XJ6\" data-lake-id=\"1415cffae7af0c0cd8f48cf1e252731d\">使用 Bigpipe 优化数据较多的页面</h3><p data-lake-id=\"0e212231b6a30c1bdf5d02e9d89172a2\">如果页面取数分为非常多块而且耗时（例如个人中心这样的页面），考虑使用 Bigpipe 让页面尽可能早的开始渲染，在分块时注意第一个 <code>chunk</code> 的大小是否能够填满浏览器的缓冲区。</p><p data-lake-id=\"3f316c90b24ff84562c0c78e7a5fb299\"><br /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">当浏览器开始下载 HTML 后，就会一遍解析一遍开始渲染页面的内容。我们做性能优化其中一个重要的目的就是为了让用户尽可能早的看到有效的内容，所以了解浏览器的渲染机制是非常有必要的。</p><h2 id=\"93cmh\" data-lake-id=\"9eabbd2647a4d96461b8a1c2a3378e7d\">渲染过程</h2><h3 id=\"7t3co\" data-lake-id=\"ae597aa2669d9258460a77da299caf87\">HTML</h3><p data-lake-id=\"95df9f14f0e46ff876d01382c5d5b759\">HTML 显而易见是渲染必不可少的内容，浏览器接收到 HTML 的内容就会开始解析内容，构建响应的 DOM 树。浏览器并不依赖于下载或者解析完完整的 HTML，而是解析一部分渲染一部分。</p><p data-lake-id=\"7139d52a04540aea8a5077a45a871c74\"><br /></p><p data-lake-id=\"ae91b401ff128105af53ef5af18bbc19\">我们可以在响应头中增加 <code>Transfer-Encoding:chunked</code> 告知浏览器 HTML 将会被一块块的流式返回，在这个基础上 facebook 构建了 bigpipe，通过在服务器端流式地返回 HTML 给浏览器，你会看到自己的个人首页是随着数据的加载一块一块的渲染出来的，这样可以避免一次性获取大量的数据才开始渲染页面。</p><h4 id=\"JWG6a\" data-lake-id=\"7297394d4c5fad4a365732ba677d27c5\">Chunk 和缓冲</h4><p data-lake-id=\"1e5443ed2f14584cf6773fb6cb0b4fa8\">当我们使用 chunk 流式返回 HTML 内容时，我们期望浏览器能够马上渲染接收到的 chunk 块，但实际情况下有些浏览器则会缓冲一定的长度。例如下图中 Safari 使用 bigpipe 渲染，浏览器一直等到 <code>this is pagelet 1</code> 才渲染页面，然后完成后续渲染。</p><p data-lake-id=\"b174d2a011c68ff11e9078e5fb48b529\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585838072215-a9fab628-ddaa-4974-9b19-60dd6e1c69be.png%22%2C%22originWidth%22%3A1264%2C%22originHeight%22%3A462%2C%22name%22%3A%22image.png%22%2C%22size%22%3A199221%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A782.10004%2C%22y%22%3A34.233334%2C%22width%22%3A19.75%2C%22height%22%3A14.483333000000002%2C%22text%22%3A%22%E5%B7%B4%22%7D%2C%7B%22x%22%3A907.18335%2C%22y%22%3A35.55%2C%22width%22%3A46.083349999999996%2C%22height%22%3A13.166667000000004%2C%22text%22%3A%22LOcAIHOST%22%7D%2C%7B%22x%22%3A711%2C%22y%22%3A121.13334%2C%22width%22%3A305.46669999999995%2C%22height%22%3A25.016670000000005%2C%22text%22%3A%22ThisiskoabigpipeDemo%22%7D%2C%7B%22x%22%3A89.53333%2C%22y%22%3A125.083336%2C%22width%22%3A298.88337%2C%22height%22%3A23.700004000000007%2C%22text%22%3A%22ThisiskoabigpipeDemo%22%7D%2C%7B%22x%22%3A712.3167%2C%22y%22%3A161.95001%2C%22width%22%3A205.39999999999998%2C%22height%22%3A15.799990000000008%2C%22text%22%3A%22WelcoMetoTHlSiKOablaplpeDemo%22%7D%2C%7B%22x%22%3A711%2C%22y%22%3A202.76668%2C%22width%22%3A184.33339999999998%2C%22height%22%3A26.333319999999986%2C%22text%22%3A%22thisispagelet1%22%7D%2C%7B%22x%22%3A96.11667%2C%22y%22%3A208.03334%2C%22width%22%3A173.80003%2C%22height%22%3A21.066659999999985%2C%22text%22%3A%22thisispagelet1%22%7D%2C%7B%22x%22%3A707.05005%2C%22y%22%3A264.65%2C%22width%22%3A188.28334999999993%2C%22height%22%3A22.38336000000004%2C%22text%22%3A%22thisispagelet2%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E5%B7%B4%20LOcAIHOST%20ThisiskoabigpipeDemo%20ThisiskoabigpipeDemo%20WelcoMetoTHlSiKOablaplpeDemo%20thisispagelet1%20thisispagelet1%20thisispagelet2%22%2C%22width%22%3A632%2C%22height%22%3A231%7D\"></card></p><p data-lake-id=\"2d45bb42ee7117c98f1bd2294dbb0d27\">而当我们把 <code>Welcome to ...</code> 加长后 ，Safari 则直接渲染出首屏再完成后续的渲染</p><p data-lake-id=\"d912b31799192e2b3f6d28102a986bdd\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585838081766-1342ab0c-bcdf-4913-9e59-527e4cbf7ab5.png%22%2C%22originWidth%22%3A1368%2C%22originHeight%22%3A340%2C%22name%22%3A%22image.png%22%2C%22size%22%3A144463%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A511.57498%2C%22y%22%3A82.65%2C%22width%22%3A213.75002000000006%2C%22height%22%3A18.52499999999999%2C%22text%22%3A%22ThisiskoabigpipeDemo%22%7D%2C%7B%22x%22%3A961.875%2C%22y%22%3A82.65%2C%22width%22%3A218.0250000000001%2C%22height%22%3A18.52499999999999%2C%22text%22%3A%22THIsIsKoabigpipeDemo%22%7D%2C%7B%22x%22%3A66.975%2C%22y%22%3A85.5%2C%22width%22%3A209.475%2C%22height%22%3A18.525000000000006%2C%22text%22%3A%22ThisisKoabigplpeDemo%22%7D%2C%7B%22x%22%3A961.875%2C%22y%22%3A139.65%2C%22width%22%3A132.5250000000001%2C%22height%22%3A18.525000000000006%2C%22text%22%3A%22thisispagelet1%22%7D%2C%7B%22x%22%3A514.425%2C%22y%22%3A142.5%2C%22width%22%3A123.97500000000002%2C%22height%22%3A15.675000000000011%2C%22text%22%3A%22thisispagelet1%22%7D%2C%7B%22x%22%3A959.02496%2C%22y%22%3A179.55%2C%22width%22%3A133.95003999999994%2C%22height%22%3A18.524999999999977%2C%22text%22%3A%22thisispagelet2%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22ThisiskoabigpipeDemo%20THIsIsKoabigpipeDemo%20ThisisKoabigplpeDemo%20thisispagelet1%20thisispagelet1%20thisispagelet2%22%2C%22width%22%3A684%2C%22height%22%3A170%7D\"></card></p><p data-lake-id=\"22ec3c52d69ee86f3bda8ab54e321799\">Chunk 缓冲区的具体长度没有明确的标准，根据 StackOverflow 上的回答，当前客户端 chunk 缓冲区大小大概如下：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22Mac%3A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20text%2Fhtml%3A%20%20%20%20%20image%2Fjpeg%3A%5Cncurl%207.24.0%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%204096%20bytes%20%20%20%20%20%5CnFirefox%2017%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%201024%20bytes%20%20%20%20%201886%20bytes%5CnChrome%2026.0.1410.65%20%20%20%20%20%20%20%201024%20bytes%20%20%20%20%201885%20bytes%5CnChrome%2029.0.1524.0%20%20%20%20%20%20%20%20%208%20%20%20%20bytes%20%20%20%20%201885%20bytes%5CnSafari%206.0.4%20(8536.29.13)%20%201024%20bytes%20%20%20%20%20whole%20file%5Cn%5CnWindows%20XP%3A%5CnIE8%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20256%20%20bytes%5CnChrome%2027.0.1453.94%20%20%20%20%20%20%20%201024%20bytes%5CnFirefox%2021%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%201024%20bytes%5CnOpera%2012.15%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20128%20%20bytes%20AND%203s%20have%20passed%5Cn%5CnWindows%207%5CnIE9%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20256%20%20bytes%5Cn%5CnWindows%208%3A%5CnIE10%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%204096%20bytes%22%2C%22id%22%3A%22Uzj02%22%7D\"></card><h3 id=\"DMIvU\" data-lake-id=\"8e65a4f0cdf25eb3186a9ed02c84f8c2\">CSS</h3><p data-lake-id=\"0a5d5a7caa95d6e60188c1d2069903c2\">默认情况下，浏览器同样把 CSS 也认作是渲染必不可少的内容，因为一般来说一个没有 CSS 的页面是无法有效展示的：</p><p data-lake-id=\"fe349efabef2b3e179a2fa9d97e255ae\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585838094023-264c267c-c92e-4de3-bc0d-dab59cc470fd.png%22%2C%22originWidth%22%3A686%2C%22originHeight%22%3A562%2C%22name%22%3A%22image.png%22%2C%22size%22%3A137688%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A234.38333%2C%22y%22%3A61.454166%2C%22width%22%3A61.454169999999976%2C%22height%22%3A10.718744000000001%2C%22text%22%3A%22%E5%AE%89423%3A26%22%7D%2C%7B%22x%22%3A570.2375%2C%22y%22%3A62.88333%2C%22width%22%3A28.58330000000001%2C%22height%22%3A10.004170000000002%2C%22text%22%3A%22123%3A26%22%7D%2C%7B%22x%22%3A243.67291%2C%22y%22%3A83.60625%2C%22width%22%3A16.435429999999997%2C%22height%22%3A15.720829999999992%2C%22text%22%3A%22%E5%9B%9E%22%7D%2C%7B%22x%22%3A75.745834%2C%22y%22%3A86.464584%2C%22width%22%3A91.466666%2C%22height%22%3A10.004165999999998%2C%22text%22%3A%22mobile.nytimes.com%22%7D%2C%7B%22x%22%3A377.3%2C%22y%22%3A86.464584%2C%22width%22%3A93.61039999999997%2C%22height%22%3A10.004165999999998%2C%22text%22%3A%22mobile.nytimes.com%22%7D%2C%7B%22x%22%3A371.58334%2C%22y%22%3A113.61875%2C%22width%22%3A115.76248999999996%2C%22height%22%3A12.147909999999996%2C%22text%22%3A%22MainMenwMainMenu%22%7D%2C%7B%22x%22%3A117.90625%2C%22y%22%3A115.7625%2C%22width%22%3A121.47917000000001%2C%22height%22%3A15.720839999999995%2C%22text%22%3A%22ehcrcwlorkcimcs%22%7D%2C%7B%22x%22%3A379.44376%2C%22y%22%3A129.33958%2C%22width%22%3A54.30831999999998%2C%22height%22%3A9.289589999999976%2C%22text%22%3A%22USEDTION%22%7D%2C%7B%22x%22%3A420.8896%2C%22y%22%3A129.33958%2C%22width%22%3A93.61040000000003%2C%22height%22%3A8.574999999999989%2C%22text%22%3A%22ionInternotionalEdition%22%7D%2C%7B%22x%22%3A75.745834%2C%22y%22%3A144.34583%2C%22width%22%3A109.331256%2C%22height%22%3A8.575009999999992%2C%22text%22%3A%22%E5%8A%A0222014U84563OP0T%22%7D%2C%7B%22x%22%3A223.66458%2C%22y%22%3A144.34583%2C%22width%22%3A40.73126000000002%2C%22height%22%3A7.860420000000005%2C%22text%22%3A%22SU8S8NNE%22%7D%2C%7B%22x%22%3A264.39584%2C%22y%22%3A145.06041%2C%22width%22%3A25.01040999999998%2C%22height%22%3A7.145840000000021%2C%22text%22%3A%22ILO0N%22%7D%2C%7B%22x%22%3A400.88126%2C%22y%22%3A156.49374%2C%22width%22%3A31.441640000000007%2C%22height%22%3A10.004169999999988%2C%22text%22%3A%22Home%22%7D%2C%7B%22x%22%3A400.88126%2C%22y%22%3A171.5%2C%22width%22%3A31.441640000000007%2C%22height%22%3A9.28958%2C%22text%22%3A%22Home%22%7D%2C%7B%22x%22%3A91.46667%2C%22y%22%3A175.07292%2C%22width%22%3A107.18749%2C%22height%22%3A12.147909999999996%2C%22text%22%3A%22TheNewBabyTrike%22%7D%2C%7B%22x%22%3A400.16666%2C%22y%22%3A185.07709%2C%22width%22%3A33.58542%2C%22height%22%3A9.28958%2C%22text%22%3A%22World%22%7D%2C%7B%22x%22%3A398.02292%2C%22y%22%3A198.65416%2C%22width%22%3A70.74374%2C%22height%22%3A10.71875%2C%22text%22%3A%22USUSN%22%7D%2C%7B%22x%22%3A398.02292%2C%22y%22%3A212.23125%2C%22width%22%3A98.61248%2C%22height%22%3A10.71875%2C%22text%22%3A%22PoliticsusPolitics%22%7D%2C%7B%22x%22%3A74.316666%2C%22y%22%3A215.80417%2C%22width%22%3A130.05416400000001%2C%22height%22%3A10.71875%2C%22text%22%3A%22SupremeCourtUpholds%22%7D%2C%7B%22x%22%3A401.59583%2C%22y%22%3A227.95209%2C%22width%22%3A57.88125000000002%2C%22height%22%3A10.004160000000013%2C%22text%22%3A%22TheUpshoi%22%7D%2C%7B%22x%22%3A74.316666%2C%22y%22%3A229.38124%2C%22width%22%3A155.779164%2C%22height%22%3A10.71875%2C%22text%22%3A%22Michigan'%60sAffirmativeAction%22%7D%2C%7B%22x%22%3A400.16666%2C%22y%22%3A241.52916%2C%22width%22%3A63.597939999999994%2C%22height%22%3A10.71875%2C%22text%22%3A%22NYReRion%22%7D%2C%7B%22x%22%3A74.316666%2C%22y%22%3A242.95833%2C%22width%22%3A43.589584%2C%22height%22%3A10.004170000000016%2C%22text%22%3A%22Ban%22%7D%2C%7B%22x%22%3A399.4521%2C%22y%22%3A256.5354%2C%22width%22%3A87.17916000000002%2C%22height%22%3A10.00418000000002%2C%22text%22%3A%22BusinessBusiness%22%7D%2C%7B%22x%22%3A74.316666%2C%22y%22%3A257.96457%2C%22width%22%3A161.495834%2C%22height%22%3A9.28958%2C%22text%22%3A%22ThesupremeCourtonTuesdayupheid%22%7D%2C%7B%22x%22%3A72.17291%2C%22y%22%3A270.1125%2C%22width%22%3A170.78542%2C%22height%22%3A9.28956999999997%2C%22text%22%3A%22aMIchiganvorerinltiatlvetharbanned%22%7D%2C%7B%22x%22%3A400.16666%2C%22y%22%3A270.1125%2C%22width%22%3A67.17084%2C%22height%22%3A10.718739999999968%2C%22text%22%3A%22BuSIncSsDaY%22%7D%2C%7B%22x%22%3A70.74375%2C%22y%22%3A281.54584%2C%22width%22%3A206.51458%2C%22height%22%3A9.28958%2C%22text%22%3A%22ractalpreferencesinadmisstonstothestate'spublie%22%7D%2C%7B%22x%22%3A400.88126%2C%22y%22%3A284.40417%2C%22width%22%3A57.881219999999985%2C%22height%22%3A10.71875%2C%22text%22%3A%22Technology%22%7D%2C%7B%22x%22%3A72.8875%2C%22y%22%3A293.69376%2C%22width%22%3A60.02499999999999%2C%22height%22%3A8.574979999999982%2C%22text%22%3A%22universities%22%7D%2C%7B%22x%22%3A399.4521%2C%22y%22%3A299.4104%2C%22width%22%3A34.299980000000005%2C%22height%22%3A10.00418000000002%2C%22text%22%3A%22Sports%22%7D%2C%7B%22x%22%3A400.16666%2C%22y%22%3A313.7021%2C%22width%22%3A32.156240000000025%2C%22height%22%3A10.004140000000007%2C%22text%22%3A%22Sports%22%7D%2C%7B%22x%22%3A72.17291%2C%22y%22%3A326.56458%2C%22width%22%3A125.05207999999999%2C%22height%22%3A10.00418000000002%2C%22text%22%3A%22SupremeCourtHears%22%7D%2C%7B%22x%22%3A399.4521%2C%22y%22%3A337.99792%2C%22width%22%3A42.16040000000004%2C%22height%22%3A10.004159999999956%2C%22text%22%3A%22gpinion%22%7D%2C%7B%22x%22%3A72.17291%2C%22y%22%3A338.7125%2C%22width%22%3A134.34168%2C%22height%22%3A10.718740000000025%2C%22text%22%3A%22ArgumentsinAcrcoCase%22%7D%2C%7B%22x%22%3A400.16666%2C%22y%22%3A353.00415%2C%22width%22%3A40.73126000000002%2C%22height%22%3A9.28958%2C%22text%22%3A%22Qpinion%22%7D%2C%7B%22x%22%3A72.8875%2C%22y%22%3A354.43332%2C%22width%22%3A128.625%2C%22height%22%3A9.28958%2C%22text%22%3A%22Televisionbroadeastersare%22%7D%2C%7B%22x%22%3A72.8875%2C%22y%22%3A365.86667%2C%22width%22%3A156.49374%2C%22height%22%3A9.28958%2C%22text%22%3A%22challengingAereo%2CanInternetstart-up%22%7D%2C%7B%22x%22%3A399.4521%2C%22y%22%3A367.29584%2C%22width%22%3A39.30205000000001%2C%22height%22%3A9.28958%2C%22text%22%3A%22Science%22%7D%2C%7B%22x%22%3A72.17291%2C%22y%22%3A377.3%2C%22width%22%3A160.78125%2C%22height%22%3A9.28956999999997%2C%22text%22%3A%22thatuscsarraysofsmallantennasto%22%7D%2C%7B%22x%22%3A400.16666%2C%22y%22%3A380.15833%2C%22width%22%3A34.30001000000004%2C%22height%22%3A10.71875%2C%22text%22%3A%22Heaith%22%7D%2C%7B%22x%22%3A71.458336%2C%22y%22%3A390.1625%2C%22width%22%3A165.068744%2C%22height%22%3A8.574999999999989%2C%22text%22%3A%22SReamovertheuIrsignoLsTosubscribers%22%7D%2C%7B%22x%22%3A400.16666%2C%22y%22%3A394.44998%2C%22width%22%3A21.4375%2C%22height%22%3A10.00418000000002%2C%22text%22%3A%22Arts%22%7D%2C%7B%22x%22%3A400.16666%2C%22y%22%3A408.74167%2C%22width%22%3A22.86667%2C%22height%22%3A10.71875%2C%22text%22%3A%22Arts%22%7D%2C%7B%22x%22%3A73.60208%2C%22y%22%3A420.8896%2C%22width%22%3A161.49584%2C%22height%22%3A12.14790000000005%2C%22text%22%3A%22WithSharpRebuketoRussia%2C%22%7D%2C%7B%22x%22%3A399.4521%2C%22y%22%3A423.03333%2C%22width%22%3A26.43956000000003%2C%22height%22%3A10.004170000000045%2C%22text%22%3A%22style%22%7D%2C%7B%22x%22%3A76.46042%2C%22y%22%3A435.18124%2C%22width%22%3A148.63333%2C%22height%22%3A9.289589999999976%2C%22text%22%3A%22Biden-offersStrongSumnort%22%7D%2C%7B%22x%22%3A400.88126%2C%22y%22%3A436.6104%2C%22width%22%3A26.439570000000003%2C%22height%22%3A7.860429999999951%2C%22text%22%3A%22Srole%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E5%AE%89423%3A26%20123%3A26%20%E5%9B%9E%20mobile.nytimes.com%20mobile.nytimes.com%20MainMenwMainMenu%20ehcrcwlorkcimcs%20USEDTION%20ionInternotionalEdition%20%E5%8A%A0222014U84563OP0T%20SU8S8NNE%20ILO0N%20Home%20Home%20TheNewBabyTrike%20World%20USUSN%20PoliticsusPolitics%20SupremeCourtUpholds%20TheUpshoi%20Michigan'%60sAffirmativeAction%20NYReRion%20Ban%20BusinessBusiness%20ThesupremeCourtonTuesdayupheid%20aMIchiganvorerinltiatlvetharbanned%20BuSIncSsDaY%20ractalpreferencesinadmisstonstothestate'spublie%20Technology%20universities%20Sports%20Sports%20SupremeCourtHears%20gpinion%20ArgumentsinAcrcoCase%20Qpinion%20Televisionbroadeastersare%20challengingAereo%2CanInternetstart-up%20Science%20thatuscsarraysofsmallantennasto%20Heaith%20SReamovertheuIrsignoLsTosubscribers%20Arts%20Arts%20WithSharpRebuketoRussia%2C%20style%20Biden-offersStrongSumnort%20Srole%22%2C%22width%22%3A343%2C%22height%22%3A281%7D\"></card></p><p data-lake-id=\"32bd222344819687779db1b3aabb2bd6\"><br /></p><p data-lake-id=\"01dbad8ce70169d39b5a9d7489f17434\">所以上面的代码中的 <code>&lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&gt;</code> 会阻塞首屏的渲染，当浏览器解析到这里时，虽然 DOM 的解析仍然会向下进行，但浏览器会一直等待 <code>styles.css</code> 加载完成并且构建成相应的 CSSOM 后再继续渲染。</p><h4 id=\"AaPEF\" data-lake-id=\"a8bbac84331776af82bf9652b7bbd954\">媒体查询和阻塞渲染</h4><p data-lake-id=\"0f1e09651a411b88ab334c70483ba2ad\">上面提到，CSS 在 <strong>默认</strong> 的情况下会阻塞渲染，但是可以通过合理的条件查询避免不必要的阻塞渲染，例如下面的代码中</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%3Clink%20href%3D%5C%22style.css%5C%22%20rel%3D%5C%22stylesheet%5C%22%3E%5Cn%3Clink%20href%3D%5C%22other.css%5C%22%20rel%3D%5C%22stylesheet%5C%22%20media%3D%5C%22(min-width%3A%20900px)%5C%22%3E%22%2C%22id%22%3A%22SxeKp%22%7D\"></card><p data-lake-id=\"c47129245fe293e2539ae888b95b250b\"><code>style.css</code> 会阻塞渲染，而 <code>other.css</code> 就只在屏幕宽度符合查询条件时才会阻塞渲染，浏览器会针对这些条件进行判断。</p><h3 id=\"z37Rf\" data-lake-id=\"db3ee5cf3cc5bf9d6eab28d98cbd7bea\">异步 stylesheet</h3><p data-lake-id=\"cafd7f8a40c4cf875f8b2267be192c22\">如果我们通过 js 动态插入 <code>stylesheet</code> ，同样也不会阻塞页面的渲染，下面这个例子中， <code>test.css</code> 的加载并不会阻塞页面的渲染。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%3Chead%3E%5Cn%20%20%3Cscript%3E%5Cn%20%20%20var%20a%20%3D%20document.createElement('link')%3B%5Cn%20%20%20a.href%20%3D%20'test.css'%3B%5Cn%20%20%20a.rel%20%3D%20'stylesheet'%3B%5Cn%20%20%20document.head.appendChild(a)%3B%5Cn%20%20%3C%2Fscript%3E%5Cn%3C%2Fhead%3E%5Cn%3Cbody%3E%5Cn%5Cn%3Ch1%3EThis%20is%20content%3C%2Fh1%3E%5Cn%5Cn%3C%2Fbody%3E%22%2C%22id%22%3A%22DsRMX%22%7D\"></card><p data-lake-id=\"a70c14c078e5223ac96a570add033c3d\"><br /></p><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"725ce7e089344dcdf361941e16a5d8cc\">在 Safari 下的表现有所区别，内联 script 插入的 CSS 仍然会阻塞渲染，但通过 requestAnimationFrame 异步插入的 CSS 则不会。</p></blockquote><h2 id=\"JKX9p\" data-lake-id=\"28ecc7eb52dd5f4b99066bb8649ee045\">Script</h2><p data-lake-id=\"df0597b4d19f1b4bc2fab98e03eabb69\">Script 标签也可能会阻塞页面的渲染，这取决于它在页面中的具体位置和属性。</p><h3 id=\"GrgYx\" data-lake-id=\"a88dedcecbf8baafa97a0cac84368aec\">在 DOM 之前</h3><p data-lake-id=\"ebea575b2936d7d937137e1e03584495\">如果 Script 标签出现在 DOM 之前，浏览器会选择完整加载并执行完相应的 JS 后才会继续解析 DOM（是的，和 CSS 不同，是连解析都会阻塞的）。这是为了 JS 能够顺序和确定地执行，防止 JS 加载好后 DOM 已经和预期的不同。</p><h3 id=\"VYNEe\" data-lake-id=\"45c44651194c6955ad2870b668b41ff7\">在 DOM 之后</h3><p data-lake-id=\"49b07139816a7415cde7cd0b7bb018e2\">DOM 后的 Script 不会阻塞前面已经加载好的 DOM 的渲染，所以一般来说我们都推荐把 Script 标签放在页面的底部。</p><h4 id=\"Pb7WS\" data-lake-id=\"6600afa933c1df61392deef8bc9335f0\">Safari</h4><p data-lake-id=\"1c454a8a2c17c5e11192f6367c83f9db\">在 Safari 中，情况有一些不同。即使 Script 在 DOM 的后面，Safari 并不会直接把 DOM 渲染出来，而是等待整个页面的 JS 全都加载并且执行完毕后才真正渲染页面。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%3Cdiv%20id%3D%5C%22test%5C%22%3Etest%3C%2Fdiv%3E%5Cn%3Cscript%3E%5Cn%20%20console.log(document.getElementById('test'))%3B%5Cn%3C%2Fscript%3E%5Cn%3Cscript%20src%3D%5C%22footer.js%5C%22%3E%3C%2Fscript%3E%22%2C%22id%22%3A%22DKYW2%22%7D\"></card><p data-lake-id=\"2967eef17861d44155f503e4ac052721\">上面的代码在 Chrome 中会直接渲染出 <code>test</code> 元素，而在 Safari 中，虽然能够在 console 中打出元素，但是却要等到 <code>footer.js</code> 完全加载完后才会渲染页面。</p><p data-lake-id=\"a369fc1dfbb611dde9b5ee5e6009dd5b\"><br /></p><p data-lake-id=\"4dddb0cbff758ef8e20b5bded4836159\">如果你需要针对 Safari 做一些渲染优化，可以考虑使用 <code>requestAnimationFrame</code> 来插入标签从而确认不影响用户首屏。</p><blockquote><p data-lake-id=\"4df18bd1f5980c998d3c2e1047026447\">这个问题在后续版本的 Safari 中可能会得到解决</p></blockquote><h3 id=\"KSKFB\" data-lake-id=\"b3a7314ba814f0684aa0e606083834cd\">async</h3><p data-lake-id=\"e42159d696cff05f51144d2967f70aab\">我们可以通过给 <span>Script</span> 添加 <code>async</code> 属性告知浏览器该 <span>Script 不阻塞页面的渲染，浏览器将会一边加载一边继续解析 DOM，加载好后立即执行。浏览器并不会保证有 </span><code><span>async</span></code> 属性的 Script 标签的执行顺序，需要注意的是， <code>async</code> 对于内联脚本是没有意义的。</p><h3 id=\"TuNA9\" data-lake-id=\"34ee3d0c32a08a960c859a97c91a076f\">defer</h3><p data-lake-id=\"b0aaaf70b788ae56db917c92eeaa91a5\"><code>defer</code> 和 <code>async</code> 的作用有些区别，在于告知浏览器不阻塞页面渲染的同时，把脚本推迟到 <code>DOMContentLoaded</code> 事件前执行。除此之外，页面上多个 <code>defer</code> 的 Script 标签仍然会保持执行顺序。同样的，defer 对于内联脚本没有意义。</p><h3 id=\"8gchi\" data-lake-id=\"95a7856be5e4086482a20eb6e3dee80f\">动态插入</h3><p data-lake-id=\"203762e662de23ed259fe4cddf40cee9\">由 JS 动态插入的脚本对页面的影响和 <code>async</code> 类似，加载不会阻塞页面渲染，加载完成后立即执行。</p><h2 id=\"uk7BE\" data-lake-id=\"0b2bcc88fde3c4e5e8af76464e566d18\">JavaScript 对渲染的影响</h2><p data-lake-id=\"50afefeb1a432dbd681821426a643ecb\">上面说 Script 对渲染的影响，主要还是说资源文件的网络加载阻塞了页面渲染。而除了这些情况外，其实 JS 本身的执行就是会对页面渲染造成影响的。</p><p data-lake-id=\"bc526da9b974950a3f41fa4675efd8d2\"><br /></p><p data-lake-id=\"4a162f15ebe8edbcf436c3bc4015436c\">我们都知道页面中的 JavaScript 代码（除了 Worker）都运行在一个线程中，由 EventLoop 驱动</p><p data-lake-id=\"975961c51cfc4f9b425e0b8a3fb2a6c0\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585838012767-3aa4b188-ef41-4743-bf5d-1f35cbfc9c01.png%22%2C%22originWidth%22%3A1220%2C%22originHeight%22%3A316%2C%22name%22%3A%22image.png%22%2C%22size%22%3A116969%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A610%2C%22height%22%3A158%7D\"></card></p><p data-lake-id=\"5c56e9bfe457d34b522f96c936e80ba9\">浏览器在事件循环中需要等待队列中的 JS 执行完毕，才能确定是否需要更新渲染，所以 JS 的执行本身其实就会导致渲染被阻塞。</p><p data-lake-id=\"ef2ca30304bc977aa4987312bde9576c\"><br /></p><p data-lake-id=\"0fb7cc121792c56aac93f50e04a3cc59\">下面这个例子中，由于 JS 一直阻塞了 EventLoop， <code>test</code> 这个元素是不会被渲染出来的。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%3Cscript%3E%5Cn%20%20while(true)%7B%5Cn%20%20%5Ctconsole.log('test')%3A%5Cn%20%20%7D%5Cn%3C%2Fscript%3E%5Cn%3Ch1%3Etest%3C%2Fh1%3E%22%2C%22id%22%3A%22FnLRd%22%7D\"></card><h2 id=\"KrepY\" data-lake-id=\"b8c2aeeee5d4cc1faeba504f625064a2\">建议</h2><h3 id=\"tB2vN\" data-lake-id=\"53a40cf39096c7bb1720231015fe18bc\">尽可能精简和内联你的 CSS</h3><p data-lake-id=\"652135c5ae6754cb1d268cfad95906cb\">由于页面的渲染完全依赖于 CSS 的加载，所以尽可能的精简首屏的 CSS，如果可能的话考虑内联进页面。</p><h3 id=\"bfI00\" data-lake-id=\"5a29a60731757ab2e55dcbcac8844854\">使用媒体查询减少 CSS 的阻塞</h3><p data-lake-id=\"e180b292e9918f7914d22f61c5e115ed\">如果有明确只在特定条件下生效的 CSS（例如 print），考虑使用合适的媒体查询减小对渲染的阻塞。</p><h3 id=\"ObXFY\" data-lake-id=\"047de29929c42e056604046580d34f63\">使用 preload 提前关键资源的加载</h3><p data-lake-id=\"3b3f19844f20e93cb4208fda1ea14e2f\"><code>&lt;link rel=&quot;preload&quot;&gt;</code> 可以提高资源加载优先级和提前时间，如果确定有引用的资源必然阻塞渲染，考虑用 <code>preload</code> 提前它的加载。</p><h3 id=\"z6QI5\" data-lake-id=\"8c0e19ab6813621abdcd3d914edc3979\">减少阻塞渲染的 script</h3><p data-lake-id=\"17fd6d4013d489b8db3da1ead294f0aa\"><span>Script</span> 的加载和执行对渲染的阻塞非常明显，如果不必要的话合理使用 <code>async</code> <code>defer</code> 或者移动到页面底部。如果需要优化 Safari 的渲染性能，考虑使用 <code>requestAnimation</code> 来插入 <code>script</code> 等异步内容。</p><h3 id=\"jKWgb\" data-lake-id=\"b0748ffa493494d766301ada751bdd22\">避免长时间运行的 JS，尤其是首屏渲染前</h3><p data-lake-id=\"233ac85de884d446d7cbf2544d73402e\">在首屏渲染之前执行一个很耗时的 JS 可能以为着白屏，尽可能避免这种情况。</p><h3 id=\"05XJ6\" data-lake-id=\"1415cffae7af0c0cd8f48cf1e252731d\">使用 Bigpipe 优化数据较多的页面</h3><p data-lake-id=\"0e212231b6a30c1bdf5d02e9d89172a2\">如果页面取数分为非常多块而且耗时（例如个人中心这样的页面），考虑使用 Bigpipe 让页面尽可能早的开始渲染，在分块时注意第一个 <code>chunk</code> 的大小是否能够填满浏览器的缓冲区。</p><p data-lake-id=\"3f316c90b24ff84562c0c78e7a5fb299\"><br /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-04-02T14:41:12.000Z",
    "deleted_at": null,
    "created_at": "2020-04-02T14:33:11.000Z",
    "updated_at": "2020-04-08T03:07:39.000Z",
    "published_at": "2020-04-08T03:07:38.000Z",
    "first_published_at": "2020-04-02T14:38:29.000Z",
    "word_count": 2134,
    "cover": "https://cdn.nlark.com/yuque/0/2020/png/236311/1585838072215-a9fab628-ddaa-4974-9b19-60dd6e1c69be.png",
    "description": "当浏览器开始下载 HTML 后，就会一遍解析一遍开始渲染页面的内容。我们做性能优化其中一个重要的目的就是为了让用户尽可能早的看到有效的内容，所以了解浏览器的渲染机制是非常有必要的。渲染过程HTMLHTML 显而易见是渲染必不可少的内容，浏览器接收到 HTML 的内容就会开始解析内容，构建响应的...",
    "custom_description": "当浏览器开始下载 HTML 后，就会一遍解析一遍开始渲染页面的内容。我们做性能优化其中一个重要的目的就是为了让用户尽可能早的看到有效的内容，所以了解浏览器的渲染机制是非常有必要的。",
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 5800118,
    "slug": "why-so-slow-ttfb",
    "title": "TTFB 为什么这么慢",
    "book_id": 653495,
    "book": {
      "id": 653495,
      "type": "Column",
      "slug": "blog",
      "name": "blog",
      "user_id": 236311,
      "description": "",
      "creator_id": 236311,
      "public": 0,
      "items_count": 7,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-04-06T15:07:10.653Z",
      "updated_at": "2020-04-06T15:07:10.000Z",
      "created_at": "2019-12-24T14:26:42.000Z",
      "namespace": "xcodebuild/blog",
      "user": {
        "id": 236311,
        "type": "User",
        "login": "xcodebuild",
        "name": "xcodebuIld",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/236311/1546508350871-89a1db68-50d3-4776-9b7b-97ba81a8dfbe.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 0,
        "created_at": "2019-01-03T03:16:21.000Z",
        "updated_at": "2020-03-23T08:18:51.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 236311,
    "creator": {
      "id": 236311,
      "type": "User",
      "login": "xcodebuild",
      "name": "xcodebuIld",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/236311/1546508350871-89a1db68-50d3-4776-9b7b-97ba81a8dfbe.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 0,
      "created_at": "2019-01-03T03:16:21.000Z",
      "updated_at": "2020-03-23T08:18:51.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "TTFB （Time to First Byte）是指客户端从发起请求到接收到服务器响应的第一个字节的时间，是反应网站性能的一个重要指标 。由于网页的下载时间受到页面体积，客户端带宽等影响更大，TTFB 一般来说能够更好的反应服务端的性能。\n<a name=\"1d6b723c\"></a>\n## 精确定义\n上面说\"从发起请求到接收到服务器响应的第一个字节\"仍然有一些模糊，精确一点说，是在完成 DNS 查询、TCP 握手、SSL 握手后 **发起 HTTP 请求报文 **到 **接收到服务端第一个响应报文** 的时间差距。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585797190134-89e36276-31aa-487b-978d-5c9065ffc621.png#align=left&display=inline&height=429&name=image.png&originHeight=858&originWidth=862&size=128265&status=done&style=none&width=431)\n<a name=\"RTT\"></a>\n## RTT 和 TCP 建连 \n如果不了解 RTT 和 TCP 建连的耗时，可以看一下 [TCP 建连为什么这么慢](https://www.xcodebuild.com/2020/03/26/yuque/why-so-slow-connect/)\n<a name=\"41933693\"></a>\n## TTFB 多少是个合理值\n我们拿到 TTFB 这个指标后，最广泛的问题就是 TTFB 究竟应该多少是个合理值？一般来说，我们可以泛泛地认为对于静态页面，50ms 是个非常理想的值（因为大部分情况下 RTT 基本就在这个范围了），而如果超过了 500ms，一般用户就会感觉到明显的等待。\n<a name=\"c4edbbcb\"></a>\n### TTFB 如何构成\n其实要理解 TTFB 合理的时长，我们可以看一下 TTFB 具体怎么构成。<br />\n<br />我们可以使用 tcpdump 抓一下 `curl http://www.baidu.com` 时发生了什么\n```javascript\n客户端 -> 服务器：seq 3612756767\n服务器 -> 客户端：seq 3932881577, ack 3612756768\n客户端 -> 服务器：ack 3932881578 // 到这里完成三次握手\n客户端 -> 服务器：seq 3612756768:3612756845, length 77: HTTP: GET / HTTP/1.1 // 发送 GET 请求的 HTTP 报文\n服务器 -> 客户端：ack 3612756845\n服务器 -> 客户端：seq 3932881578:3932883030, ack 3612756845, length 1452: HTTP: HTTP/1.1 200 OK // First Byte 到达\n服务器 -> 客户端：seq 3932883030:3932884359, ack 3612756845, win 776, length 1329: HTTP // 继续传输 HTTP 响应报文\n// ...\n```\n我们看网络的来回可以发现，GET 请求发出后，到收到 First Byte 的时间其实**接近**于一个 RTT + 后端处理（一般我们叫 ServerRT）的时间。<br />\n<br />所以对一个页面的 TTFB 来说，它的**时长在通常情况下接近于和服务器的 RTT + ServerRT（可能要多一些协议层的消耗）。**\n<a name=\"17587da8\"></a>\n### 试验环境验证\n为了验证这个推论是否正确，我们用一些 RT 基本为零的页面进行验证。其中 Initial Connection 的时间（TCP 握手时间）也是接近 1 RTT 的。所以总体来说 TTFB 应该和  Initial Connection 非常接近。\n<a name=\"4e2410fd\"></a>\n#### 空页面\n准备搞台海外机器实际试试看 TTFB 和 RTT 的差距，空页面是非常接近的<br />![](https://cdn.nlark.com/yuque/0/2020/png/236311/1585796879380-d29fc5fd-495e-45ca-8035-52e904a47d4c.png#align=left&display=inline&height=790&originHeight=790&originWidth=1924&size=0&status=done&style=none&width=1924)<br />\n\n<a name=\"117d2ea0\"></a>\n### 大体积页面\n怀疑页面大小是导致协议层的开销增大（会拆成多个 TCP 包），找了个 gzip 后 100kb 的 js，访问一下看看<br />![](https://cdn.nlark.com/yuque/0/2020/png/236311/1585796879373-a00576f2-669e-46f7-a45c-f928b59d01af.png#align=left&display=inline&height=920&originHeight=920&originWidth=1914&size=0&status=done&style=none&width=1914)<br />似乎稍微大了一丢丢，但差距仍然很小，试试看更大的（gzip后仍有 1.x MB）<br />![](https://cdn.nlark.com/yuque/0/2020/png/236311/1585796879379-d368668f-4fa3-4c0d-a0d4-85f12041a9ab.png#align=left&display=inline&height=908&originHeight=908&originWidth=1926&size=0&status=done&style=none&width=1926)<br />\n<br />看到差距仍然非常小，所以说页面的体积对于 TTFB 是基本没有影响的，不会因为回传的 HTTP 报文太大导致首字节传输耗时明显增大。\n<a name=\"f63d1776\"></a>\n### 如何降低 TTFB\n那么，当 TTFB 很长时，我们该如何降低 TTFB 呢\n<a name=\"7cb5a81c\"></a>\n#### 减少请求的传输量\n例如 cookie 或者 body 很大的 POST 请求，他们的发送会更加耗时。例如当我们尝试把 cookie 变得非常长后抓到的请求变成了：\n```javascript\n客户端 -> 服务器：seq 2144370637:2144372089: HTTP: GET / HTTP/1.1 // 发送 GET 请求的 HTTP 报文\n客户端 -> 服务器：seq 2144372089:2144372988: HTTP // 继续发送，没法送完\n\n服务器 -> 客户端：ack 2144372089\n服务器 -> 客户端：ack 2144372988 // 两次 ACK\n\n服务器 -> 客户端 // First Byte 到达\n```\n发送请求的 TCP 包直接被拆成了多个，首字节说的是服务端的首字节，客户端发给服务端的包客户端需要接收完整才能做出响应然后返回。<br />\n<br />所以我们应该避免在请求中携带过多无用信息。\n<a name=\"1d26492f\"></a>\n#### 减少服务端处理时间\n这点最容易理解，减少服务端的处理时间（ServerRT），TTFB 自然会下降。\n<a name=\"b4e97df0\"></a>\n#### 减少 RTT 时间\n这点一般没有什么特别好的办法，RTT 是由网络状况和物理位置决定的，想要减少 RTT 就只能在离用户更近的地方增加服务器节点了。\n<a name=\"7785bb09\"></a>\n## TTFB 越低越好么\n先直接放结论，**不是的**<br />\n<br />优化性能都是为了用户体验，而 TTFB 只是描述某一段过程的参考技术指标。他只所以被看得比较重要，是因为其受影响的因素相对没那么多，能够比较客观的反应服务端的处理时间 + 网络耗时。\n<a name=\"92d33d9b\"></a>\n## TTFB 和 download 的权衡\n<a name=\"BDJtd\"></a>\n## Gzip\n一个很典型的例子，当我们开启 Gzip 时，对于一个比较大的页面 TTFB 必然上涨（压缩需要时间），但是实际上传输的速度要快很多。用户能够更快的看到页面（首字节是无法用于渲染的）。<br />\n<br />这种情况下我们不应该去追求 TTFB 的短，真正应该在意的是用户的真实体验。\n<a name=\"3b7ba694\"></a>\n### 动态加速\n动态加速是个类似的例子，一些 CDN 厂商通过动态加速技术让网页更快的传输。然而由于 CDN 节点会更快的建立连接。导致发起请求的时间被提前了，而 CND 节点则承担了原来和服务器建连的成本，另外 CND 也会在节点中做一些 buffer，这都会导致 TTFB 看起来更长了，然而实际上页面的加载速度是得到了提升的。\n<a name=\"b823255e\"></a>\n#### 单点测试\n我们在本地针对 Akamai 的动态加速进行了单点测试\n<a name=\"Akamai\"></a>\n##### Akamai\n```shell\ncurl -w \"@curl-format.txt\" -so ./ppc.html https://23.218.15.80/ppc/mp3.html -H \"Host: www.alibaba.com\" --insecure\n```\n\n\n```shell\ntime_namelookup:  0.004775\n      time_connect:  0.073131 (TCP handshake)\n   time_appconnect:  0.232171 (SSL handshake)\n  time_pretransfer:  0.232290\n    ¦time_redirect:  0.000000\ntime_starttransfer:  1.401208\n                   ----------\n        time_total:  1.812241\n```\n后端 RT：1561455906142 - 1561455905344 = 798\n```shell\nTTFB - RTT - RT =  1169 - 69 - 798 = 300\n\nTTFB - RT = 1169 - 798 = 371\n```\n<a name=\"a395b613\"></a>\n##### 美国统一接入层\n```shell\ncurl -w \"@curl-format.txt\" -so ./ppc.html https://205.204.101.142/ppc/mp3.html -H \"Host: www.alibaba.com\" --insecure\n```\n\n\n```javascript\ntime_namelookup:  0.005029\n      time_connect:  0.161610 (TCP handshake)\n   time_appconnect:  0.806566 (SSL handshake)\n  time_pretransfer:  0.806884\n    ¦time_redirect:  0.000000\ntime_starttransfer:  1.830675\n                   ----------\n        time_total:  8.795626\n```\n\n<br />后端 RT = 1561456655052-1561456654266 = 786<br />\n\n```shell\nTTFB - RTT - RT = 1024 - 156 - 786 = 82\n\nTTFB - RT = 1024 - 786 = 238\n```\n<a name=\"4f641c3c\"></a>\n##### 单点测试结论\n可以看到 Akamai 的动态加速实际上使 TTFB - RT - RTT 的时间更长了（因为 CDN 节点本身的 RTT 短），同时 TTFB - RT 也变长了（CDN 会 buffer 一定量的数据才返回）。**然而总体的传输时间从 8.7s 降低到了 1.8s。**<br />\n<br />这和我们之前对首屏的观测也是一致的，动态加速拉长了 TTFB，但总体首屏是下降的。因为用户是要下载一定有效的内容才能真正进行渲染。<br />\n<br />![](https://cdn.nlark.com/yuque/0/2020/png/236311/1585796879410-eb31a3ce-3064-4d5d-8c94-18dacb1c2770.png#align=left&display=inline&height=484&originHeight=484&originWidth=1742&size=0&status=done&style=none&width=1742)\n<a name=\"54bbba80\"></a>\n## 结论\nTTFB 是一个非常重要的网站性能指标，能够在前端比较客观的反应出后端的耗时。**但是 First Byte 是无法渲染出任何东西的**，我们用 TTFB 来侧面衡量网站的后端耗时**不代表 TTFB 越短越好**。<br />\n<br />在有些场景下我们使用的一些优化手段让 First Byte 刻意晚了一些（gzip 内容，buffer 一定的内容再开始传输等），这个时候 TTFB 作为一个侧面印证的指标就不是那么的精确了，在这种场景下 TTFB 失去了原本的含义，不需要过于纠结。<br />\n<br />如果可能的话，还是把 ServerRT 的耗时尽可能也带到前端来参与统计。\n<a name=\"3b40e721\"></a>\n## 拓展阅读\n\n- [Stop worrying about Time To First Byte (TTFB)](https://blog.cloudflare.com/ttfb-time-to-first-byte-considered-meaningles/)\n- [Server-Timing](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Server-Timing)\n- [Round-trip delay time](https://en.wikipedia.org/wiki/Round-trip_delay_time)\n",
    "body_draft": "TTFB （Time to First Byte）是指客户端从发起请求到接收到服务器响应的第一个字节的时间，是反应网站性能的一个重要指标 。由于网页的下载时间受到页面体积，客户端带宽等影响更大，TTFB 一般来说能够更好的反应服务端的性能。\n<a name=\"1d6b723c\"></a>\n## 精确定义\n上面说\"从发起请求到接收到服务器响应的第一个字节\"仍然有一些模糊，精确一点说，是在完成 DNS 查询、TCP 握手、SSL 握手后 **发起 HTTP 请求报文 **到 **接收到服务端第一个响应报文** 的时间差距。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585797190134-89e36276-31aa-487b-978d-5c9065ffc621.png#align=left&display=inline&height=429&name=image.png&originHeight=858&originWidth=862&size=128265&status=done&style=none&width=431)\n<a name=\"RTT\"></a>\n## RTT 和 TCP 建连 \n如果不了解 RTT 和 TCP 建连的耗时，可以看一下 [TCP 建连为什么这么慢](https://www.xcodebuild.com/2020/03/26/yuque/why-so-slow-connect/)\n<a name=\"41933693\"></a>\n## TTFB 多少是个合理值\n我们拿到 TTFB 这个指标后，最广泛的问题就是 TTFB 究竟应该多少是个合理值？一般来说，我们可以泛泛地认为对于静态页面，50ms 是个非常理想的值（因为大部分情况下 RTT 基本就在这个范围了），而如果超过了 500ms，一般用户就会感觉到明显的等待。\n<a name=\"c4edbbcb\"></a>\n### TTFB 如何构成\n其实要理解 TTFB 合理的时长，我们可以看一下 TTFB 具体怎么构成。<br />\n<br />我们可以使用 tcpdump 抓一下 `curl http://www.baidu.com` 时发生了什么\n```javascript\n客户端 -> 服务器：seq 3612756767\n服务器 -> 客户端：seq 3932881577, ack 3612756768\n客户端 -> 服务器：ack 3932881578 // 到这里完成三次握手\n客户端 -> 服务器：seq 3612756768:3612756845, length 77: HTTP: GET / HTTP/1.1 // 发送 GET 请求的 HTTP 报文\n服务器 -> 客户端：ack 3612756845\n服务器 -> 客户端：seq 3932881578:3932883030, ack 3612756845, length 1452: HTTP: HTTP/1.1 200 OK // First Byte 到达\n服务器 -> 客户端：seq 3932883030:3932884359, ack 3612756845, win 776, length 1329: HTTP // 继续传输 HTTP 响应报文\n// ...\n```\n我们看网络的来回可以发现，GET 请求发出后，到收到 First Byte 的时间其实**接近**于一个 RTT + 后端处理（一般我们叫 ServerRT）的时间。<br />\n<br />所以对一个页面的 TTFB 来说，它的**时长在通常情况下接近于和服务器的 RTT + ServerRT（可能要多一些协议层的消耗）。**\n<a name=\"17587da8\"></a>\n### 试验环境验证\n为了验证这个推论是否正确，我们用一些 RT 基本为零的页面进行验证。其中 Initial Connection 的时间（TCP 握手时间）也是接近 1 RTT 的。所以总体来说 TTFB 应该和  Initial Connection 非常接近。\n<a name=\"4e2410fd\"></a>\n#### 空页面\n准备搞台海外机器实际试试看 TTFB 和 RTT 的差距，空页面是非常接近的<br />![](https://cdn.nlark.com/yuque/0/2020/png/236311/1585796879380-d29fc5fd-495e-45ca-8035-52e904a47d4c.png#align=left&display=inline&height=790&originHeight=790&originWidth=1924&size=0&status=done&style=none&width=1924)<br />\n\n<a name=\"117d2ea0\"></a>\n### 大体积页面\n怀疑页面大小是导致协议层的开销增大（会拆成多个 TCP 包），找了个 gzip 后 100kb 的 js，访问一下看看<br />![](https://cdn.nlark.com/yuque/0/2020/png/236311/1585796879373-a00576f2-669e-46f7-a45c-f928b59d01af.png#align=left&display=inline&height=920&originHeight=920&originWidth=1914&size=0&status=done&style=none&width=1914)<br />似乎稍微大了一丢丢，但差距仍然很小，试试看更大的（gzip后仍有 1.x MB）<br />![](https://cdn.nlark.com/yuque/0/2020/png/236311/1585796879379-d368668f-4fa3-4c0d-a0d4-85f12041a9ab.png#align=left&display=inline&height=908&originHeight=908&originWidth=1926&size=0&status=done&style=none&width=1926)<br />\n<br />看到差距仍然非常小，所以说页面的体积对于 TTFB 是基本没有影响的，不会因为回传的 HTTP 报文太大导致首字节传输耗时明显增大。\n<a name=\"f63d1776\"></a>\n### 如何降低 TTFB\n那么，当 TTFB 很长时，我们该如何降低 TTFB 呢\n<a name=\"7cb5a81c\"></a>\n#### 减少请求的传输量\n例如 cookie 或者 body 很大的 POST 请求，他们的发送会更加耗时。例如当我们尝试把 cookie 变得非常长后抓到的请求变成了：\n```javascript\n客户端 -> 服务器：seq 2144370637:2144372089: HTTP: GET / HTTP/1.1 // 发送 GET 请求的 HTTP 报文\n客户端 -> 服务器：seq 2144372089:2144372988: HTTP // 继续发送，没法送完\n\n服务器 -> 客户端：ack 2144372089\n服务器 -> 客户端：ack 2144372988 // 两次 ACK\n\n服务器 -> 客户端 // First Byte 到达\n```\n发送请求的 TCP 包直接被拆成了多个，首字节说的是服务端的首字节，客户端发给服务端的包客户端需要接收完整才能做出响应然后返回。<br />\n<br />所以我们应该避免在请求中携带过多无用信息。\n<a name=\"1d26492f\"></a>\n#### 减少服务端处理时间\n这点最容易理解，减少服务端的处理时间（ServerRT），TTFB 自然会下降。\n<a name=\"b4e97df0\"></a>\n#### 减少 RTT 时间\n这点一般没有什么特别好的办法，RTT 是由网络状况和物理位置决定的，想要减少 RTT 就只能在离用户更近的地方增加服务器节点了。\n<a name=\"7785bb09\"></a>\n## TTFB 越低越好么\n先直接放结论，**不是的**<br />\n<br />优化性能都是为了用户体验，而 TTFB 只是描述某一段过程的参考技术指标。他只所以被看得比较重要，是因为其受影响的因素相对没那么多，能够比较客观的反应服务端的处理时间 + 网络耗时。\n<a name=\"92d33d9b\"></a>\n## TTFB 和 download 的权衡\n<a name=\"BDJtd\"></a>\n## Gzip\n一个很典型的例子，当我们开启 Gzip 时，对于一个比较大的页面 TTFB 必然上涨（压缩需要时间），但是实际上传输的速度要快很多。用户能够更快的看到页面（首字节是无法用于渲染的）。<br />\n<br />这种情况下我们不应该去追求 TTFB 的短，真正应该在意的是用户的真实体验。\n<a name=\"3b7ba694\"></a>\n### 动态加速\n动态加速是个类似的例子，一些 CDN 厂商通过动态加速技术让网页更快的传输。然而由于 CDN 节点会更快的建立连接。导致发起请求的时间被提前了，而 CND 节点则承担了原来和服务器建连的成本，另外 CND 也会在节点中做一些 buffer，这都会导致 TTFB 看起来更长了，然而实际上页面的加载速度是得到了提升的。\n<a name=\"b823255e\"></a>\n#### 单点测试\n我们在本地针对 Akamai 的动态加速进行了单点测试\n<a name=\"Akamai\"></a>\n##### Akamai\n```shell\ncurl -w \"@curl-format.txt\" -so ./ppc.html https://23.218.15.80/ppc/mp3.html -H \"Host: www.alibaba.com\" --insecure\n```\n\n\n```shell\ntime_namelookup:  0.004775\n      time_connect:  0.073131 (TCP handshake)\n   time_appconnect:  0.232171 (SSL handshake)\n  time_pretransfer:  0.232290\n    ¦time_redirect:  0.000000\ntime_starttransfer:  1.401208\n                   ----------\n        time_total:  1.812241\n```\n后端 RT：1561455906142 - 1561455905344 = 798\n```shell\nTTFB - RTT - RT =  1169 - 69 - 798 = 300\n\nTTFB - RT = 1169 - 798 = 371\n```\n<a name=\"a395b613\"></a>\n##### 美国统一接入层\n```shell\ncurl -w \"@curl-format.txt\" -so ./ppc.html https://205.204.101.142/ppc/mp3.html -H \"Host: www.alibaba.com\" --insecure\n```\n\n\n```javascript\ntime_namelookup:  0.005029\n      time_connect:  0.161610 (TCP handshake)\n   time_appconnect:  0.806566 (SSL handshake)\n  time_pretransfer:  0.806884\n    ¦time_redirect:  0.000000\ntime_starttransfer:  1.830675\n                   ----------\n        time_total:  8.795626\n```\n\n<br />后端 RT = 1561456655052-1561456654266 = 786<br />\n\n```shell\nTTFB - RTT - RT = 1024 - 156 - 786 = 82\n\nTTFB - RT = 1024 - 786 = 238\n```\n<a name=\"4f641c3c\"></a>\n##### 单点测试结论\n可以看到 Akamai 的动态加速实际上使 TTFB - RT - RTT 的时间更长了（因为 CDN 节点本身的 RTT 短），同时 TTFB - RT 也变长了（CDN 会 buffer 一定量的数据才返回）。**然而总体的传输时间从 8.7s 降低到了 1.8s。**<br />\n<br />这和我们之前对首屏的观测也是一致的，动态加速拉长了 TTFB，但总体首屏是下降的。因为用户是要下载一定有效的内容才能真正进行渲染。<br />\n<br />![](https://cdn.nlark.com/yuque/0/2020/png/236311/1585796879410-eb31a3ce-3064-4d5d-8c94-18dacb1c2770.png#align=left&display=inline&height=484&originHeight=484&originWidth=1742&size=0&status=done&style=none&width=1742)\n<a name=\"54bbba80\"></a>\n## 结论\nTTFB 是一个非常重要的网站性能指标，能够在前端比较客观的反应出后端的耗时。**但是 First Byte 是无法渲染出任何东西的**，我们用 TTFB 来侧面衡量网站的后端耗时**不代表 TTFB 越短越好**。<br />\n<br />在有些场景下我们使用的一些优化手段让 First Byte 刻意晚了一些（gzip 内容，buffer 一定的内容再开始传输等），这个时候 TTFB 作为一个侧面印证的指标就不是那么的精确了，在这种场景下 TTFB 失去了原本的含义，不需要过于纠结。<br />\n<br />如果可能的话，还是把 ServerRT 的耗时尽可能也带到前端来参与统计。\n<a name=\"3b40e721\"></a>\n## 拓展阅读\n\n- [Stop worrying about Time To First Byte (TTFB)](https://blog.cloudflare.com/ttfb-time-to-first-byte-considered-meaningles/)\n- [Server-Timing](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Server-Timing)\n- [Round-trip delay time](https://en.wikipedia.org/wiki/Round-trip_delay_time)\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">TTFB （Time to First Byte）是指客户端从发起请求到接收到服务器响应的第一个字节的时间，是反应网站性能的一个重要指标&nbsp;。由于网页的下载时间受到页面体积，客户端带宽等影响更大，TTFB 一般来说能够更好的反应服务端的性能。</p><h2 id=\"1d6b723c\" data-lake-id=\"df9520cd5811d903389b93a632280796\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">精确定义</h2><p data-lake-id=\"1f9d6d981d20703cbf385a8ca5d25e6c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">上面说\"从发起请求到接收到服务器响应的第一个字节\"仍然有一些模糊，精确一点说，是在完成 DNS 查询、TCP 握手、SSL 握手后 <strong>发起 HTTP 请求报文&nbsp;</strong>到 <strong>接收到服务端第一个响应报文</strong> 的时间差距。</p><p data-lake-id=\"aef4abb9cf4c637e9da5614a8bc483aa\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585797190134-89e36276-31aa-487b-978d-5c9065ffc621.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585797190134-89e36276-31aa-487b-978d-5c9065ffc621.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 431px; height: 429px;\"></span></p><h2 id=\"RTT\" data-lake-id=\"40e98b682d4701f1215df372bb6cb1e9\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">RTT 和 TCP 建连&nbsp;</h2><p data-lake-id=\"a7b993ec4c619b2b1f7deaf4edce356d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">如果不了解 RTT 和 TCP 建连的耗时，可以看一下&nbsp;<a href=\"https://www.xcodebuild.com/2020/03/26/yuque/why-so-slow-connect/\" target=\"_blank\">TCP 建连为什么这么慢</a></p><h2 id=\"41933693\" data-lake-id=\"482d01aa8b96f7a33d2337b7fe90f9b1\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">TTFB 多少是个合理值</h2><p data-lake-id=\"0482b14458a8908ba66282503a563ab1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们拿到 TTFB 这个指标后，最广泛的问题就是 TTFB 究竟应该多少是个合理值？一般来说，我们可以泛泛地认为对于静态页面，50ms 是个非常理想的值（因为大部分情况下 RTT 基本就在这个范围了），而如果超过了 500ms，一般用户就会感觉到明显的等待。</p><h3 id=\"c4edbbcb\" data-lake-id=\"1dfac908007300a5aef2c15d65a2c54f\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">TTFB 如何构成</h3><p data-lake-id=\"33b3b4744f506feeab6aa42dead36e49\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">其实要理解 TTFB 合理的时长，我们可以看一下 TTFB 具体怎么构成。</p><p data-lake-id=\"632fac13ce780f83d38a9e612855e007\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f8b02ebd02661cc86cf8277b3c8cd890\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们可以使用 tcpdump 抓一下 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">curl http://www.baidu.com</code> 时发生了什么</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"cc06a0ce\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">客户端</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">服务器：seq</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3612756767</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">服务器</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">客户端：seq</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3932881577</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ack</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3612756768</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">客户端</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">服务器：ack</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3932881578</span> <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 到这里完成三次握手</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">客户端</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">服务器：seq</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3612756768</span>:<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3612756845</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">length</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">77</span>: <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">HTTP</span>: <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">GET</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">HTTP</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/</span><span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1.1</span> <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 发送 GET 请求的 HTTP 报文</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">服务器</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">客户端：ack</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3612756845</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">服务器</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">客户端：seq</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3932881578</span>:<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3932883030</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ack</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3612756845</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">length</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1452</span>: <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">HTTP</span>: <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">HTTP</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/</span><span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1.1</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">200</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">OK</span> <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// First Byte 到达</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">服务器</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">客户端：seq</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3932883030</span>:<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3932884359</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ack</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3612756845</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">win</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">776</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">length</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1329</span>: <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">HTTP</span> <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 继续传输 HTTP 响应报文</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// ...</span></span></span></pre></div></div></div><p data-lake-id=\"c907b71d8c8a156b841b41a15bf3e337\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们看网络的来回可以发现，GET 请求发出后，到收到 First Byte 的时间其实<strong>接近</strong>于一个 RTT + 后端处理（一般我们叫 ServerRT）的时间。</p><p data-lake-id=\"f476ae11b4faea8ed724e7383d39e682\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"4349e51afc07b344f34b91717e2f68d4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">所以对一个页面的 TTFB 来说，它的<strong>时长在通常情况下接近于和服务器的 RTT + ServerRT（可能要多一些协议层的消耗）。</strong></p><h3 id=\"17587da8\" data-lake-id=\"649c7f8b4c7538d7e22918a015e4276e\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">试验环境验证</h3><p data-lake-id=\"af3df8021a0cd4454d5fbef24900b867\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">为了验证这个推论是否正确，我们用一些 RT 基本为零的页面进行验证。其中 Initial Connection 的时间（TCP 握手时间）也是接近 1 RTT 的。所以总体来说 TTFB 应该和&nbsp;&nbsp;Initial Connection 非常接近。</p><h4 id=\"4e2410fd\" data-lake-id=\"a745a2f43491740344742d6fbe371a06\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">空页面</h4><p data-lake-id=\"a393e54fc6bac0ab4e8f0c99fc53cc11\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">准备搞台海外机器实际试试看 TTFB 和 RTT 的差距，空页面是非常接近的</p><p data-lake-id=\"3a35d19f130ca1c0517678e9afdffca2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585796879380-d29fc5fd-495e-45ca-8035-52e904a47d4c.png?x-oss-process=image/resize,w_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585796879380-d29fc5fd-495e-45ca-8035-52e904a47d4c.png\" class=\"image lake-drag-image\" style=\"visibility: visible; border: none; box-shadow: none; width: 746px; height: 306px;\"></span></p><p data-lake-id=\"b43ebb0429aa9a478cfd767d5a01dbb3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"117d2ea0\" data-lake-id=\"d355a4f938f85fb9293d7d37ca6bdb36\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">大体积页面</h3><p data-lake-id=\"b1a8609ce3bb283cd8d56f96d80ba717\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">怀疑页面大小是导致协议层的开销增大（会拆成多个 TCP 包），找了个 gzip 后 100kb 的 js，访问一下看看</p><p data-lake-id=\"11f41c80e076d5dfab1d26a10366c619\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585796879373-a00576f2-669e-46f7-a45c-f928b59d01af.png?x-oss-process=image/resize,w_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585796879373-a00576f2-669e-46f7-a45c-f928b59d01af.png\" class=\"image lake-drag-image\" style=\"visibility: visible; border: none; box-shadow: none; width: 746px; height: 359px;\"></span></p><p data-lake-id=\"73e430102a34a2193f79797b74e73beb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">似乎稍微大了一丢丢，但差距仍然很小，试试看更大的（gzip后仍有 1.x MB）</p><p data-lake-id=\"20d223880f515c803d9cfdc3989a8578\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585796879379-d368668f-4fa3-4c0d-a0d4-85f12041a9ab.png?x-oss-process=image/resize,w_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585796879379-d368668f-4fa3-4c0d-a0d4-85f12041a9ab.png\" class=\"image lake-drag-image\" style=\"visibility: visible; border: none; box-shadow: none; width: 746px; height: 352px;\"></span></p><p data-lake-id=\"a99768a0c690c37b39d54bfae2bbb7bd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"4b8b4a7e3b35789522fe7af387649f6d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">看到差距仍然非常小，所以说页面的体积对于 TTFB 是基本没有影响的，不会因为回传的 HTTP 报文太大导致首字节传输耗时明显增大。</p><h3 id=\"f63d1776\" data-lake-id=\"80d851490555d2ae44027b763695a6b6\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">如何降低 TTFB</h3><p data-lake-id=\"eebfd494382501cb72cac90283118220\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">那么，当 TTFB 很长时，我们该如何降低 TTFB 呢</p><h4 id=\"7cb5a81c\" data-lake-id=\"7da5f6cb0bc20c431d314a3238a8675f\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">减少请求的传输量</h4><p data-lake-id=\"fb7f551f757f937b0a6724db1c9106f5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">例如 cookie 或者 body 很大的 POST 请求，他们的发送会更加耗时。例如当我们尝试把 cookie 变得非常长后抓到的请求变成了：</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"11e2ee28\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">客户端</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">服务器：seq</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2144370637</span>:<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2144372089</span>: <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">HTTP</span>: <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">GET</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">HTTP</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/</span><span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1.1</span> <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 发送 GET 请求的 HTTP 报文</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">客户端</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">服务器：seq</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2144372089</span>:<span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2144372988</span>: <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">HTTP</span> <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 继续发送，没法送完</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">服务器</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">客户端：ack</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2144372089</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">服务器</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">客户端：ack</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2144372988</span> <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 两次 ACK</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">服务器</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">客户端</span> <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// First Byte 到达</span></span></span></pre></div></div></div><p data-lake-id=\"8750562b81551e17ee26f7a13ee3a2e1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">发送请求的 TCP 包直接被拆成了多个，首字节说的是服务端的首字节，客户端发给服务端的包客户端需要接收完整才能做出响应然后返回。</p><p data-lake-id=\"51757438d5abb0d75b63f5562d3bf7ab\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"9a95ecffc75bf83e922deb478714e298\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">所以我们应该避免在请求中携带过多无用信息。</p><h4 id=\"1d26492f\" data-lake-id=\"07a3cdefd27a99711b29488eb7d3523e\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">减少服务端处理时间</h4><p data-lake-id=\"4542e7812e281ee400213424b34d88af\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这点最容易理解，减少服务端的处理时间（ServerRT），TTFB 自然会下降。</p><h4 id=\"b4e97df0\" data-lake-id=\"ad6bd9770a54abce53739a435c3ae7f6\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">减少 RTT 时间</h4><p data-lake-id=\"470cc9f63b2bdad1194bff83dd9215b1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这点一般没有什么特别好的办法，RTT 是由网络状况和物理位置决定的，想要减少 RTT 就只能在离用户更近的地方增加服务器节点了。</p><h2 id=\"7785bb09\" data-lake-id=\"e3fb204f9b933151d09840fc82f219e2\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">TTFB 越低越好么</h2><p data-lake-id=\"e94f128e0b7f613be509a98dc572c973\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">先直接放结论，<strong>不是的</strong></p><p data-lake-id=\"65d959f6d5ce211ff9ef1021ceb66434\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"0c924d69a8b7426584b35f07697b539a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">优化性能都是为了用户体验，而 TTFB 只是描述某一段过程的参考技术指标。他只所以被看得比较重要，是因为其受影响的因素相对没那么多，能够比较客观的反应服务端的处理时间 + 网络耗时。</p><h2 id=\"92d33d9b\" data-lake-id=\"b980f301a69b04dce01fd4ad00fed6ff\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">TTFB 和 download 的权衡</h2><h2 id=\"BDJtd\" data-lake-id=\"fcc8b769b26a3a8ee465f9bcb037b16f\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Gzip</h2><p data-lake-id=\"208a43fe43319edc021d00cb4789477e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">一个很典型的例子，当我们开启 Gzip 时，对于一个比较大的页面 TTFB 必然上涨（压缩需要时间），但是实际上传输的速度要快很多。用户能够更快的看到页面（首字节是无法用于渲染的）。</p><p data-lake-id=\"332fc372dc3bb4c94bbf963ea349d764\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"ce85644b29afc7f257ecd121647487d9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这种情况下我们不应该去追求 TTFB 的短，真正应该在意的是用户的真实体验。</p><h3 id=\"3b7ba694\" data-lake-id=\"8ae0696d24260574e615965a7ee36502\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">动态加速</h3><p data-lake-id=\"8648e03b128035a901c31b7c131bc24a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">动态加速是个类似的例子，一些 CDN 厂商通过动态加速技术让网页更快的传输。然而由于 CDN 节点会更快的建立连接。导致发起请求的时间被提前了，而 CND 节点则承担了原来和服务器建连的成本，另外 CND 也会在节点中做一些 buffer，这都会导致 TTFB 看起来更长了，然而实际上页面的加载速度是得到了提升的。</p><h4 id=\"b823255e\" data-lake-id=\"583155260572ea960fdd190e4af5bd70\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">单点测试</h4><p data-lake-id=\"6ca68adf867cc3938b3a28401072e3bb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们在本地针对 Akamai 的动态加速进行了单点测试</p><h5 id=\"Akamai\" data-lake-id=\"54651eefb104d7b03bd31e999f8b1563\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">Akamai</h5><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"9a30de81\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">curl</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-w</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"@curl-format.txt\"</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-so</span> ./ppc.html https://23.218.15.80/ppc/mp3.html <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-H</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"Host: www.alibaba.com\"</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--insecure</span></span></span></pre></div></div></div><p data-lake-id=\"ded3ee76328bee7113928ba050c8dfbd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"78dec5d6\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">time_namelookup:  <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>.004775\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      time_connect:  <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>.073131 (TCP handshake)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">   time_appconnect:  <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>.232171 (SSL handshake)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  time_pretransfer:  <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>.232290\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    ¦time_redirect:  <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>.000000\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">time_starttransfer:  <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>.401208\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                   <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--</span><span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--</span><span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--</span><span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--</span><span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        time_total:  <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>.812241</span></span></pre></div></div></div><p data-lake-id=\"6975c3bdb8f03a9ee7bdb303eefcedc8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">后端 RT：1561455906142 - 1561455905344 =&nbsp;798</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"b4bf0c34\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">TTFB <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span> RTT <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span> RT <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span>  <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1169</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">69</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">798</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">300</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">TTFB <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span> RT <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1169</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">798</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">371</span></span></span></pre></div></div></div><h5 id=\"a395b613\" data-lake-id=\"934a91b7e4e14b87af6bd5620f1e282b\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">美国统一接入层</h5><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"7661da5c\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">curl</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-w</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"@curl-format.txt\"</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-so</span> ./ppc.html https://205.204.101.142/ppc/mp3.html <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-H</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"Host: www.alibaba.com\"</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--insecure</span></span></span></pre></div></div></div><p data-lake-id=\"8ad86783e5a7fa0b44fa18d5478265a8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"0112856f\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">time_namelookup</span>:  <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0.005029</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">time_connect</span>:  <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0.161610</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">TCP</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">handshake</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">   <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">time_appconnect</span>:  <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0.806566</span> (<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">SSL</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">handshake</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">time_pretransfer</span>:  <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0.806884</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">¦time_redirect</span>:  <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0.000000</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">time_starttransfer</span>:  <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1.830675</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">                   <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">--</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">        <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">time_total</span>:  <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">8.795626</span></span></span></pre></div></div></div><p data-lake-id=\"961aa78b8b862a7c265f2563e2d0dd40\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"1318ccdfcf76f2d3a91ea26b0ae60d36\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">后端 RT =&nbsp;1561456655052-1561456654266 = 786</p><p data-lake-id=\"17ec1c9a32cce8bc39dfbd06e6a9fac3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"ec53cd8c\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">TTFB <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span> RTT <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span> RT <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1024</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">156</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">786</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">82</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">TTFB <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span> RT <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1024</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">786</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">238</span></span></span></pre></div></div></div><h5 id=\"4f641c3c\" data-lake-id=\"6d20dd90bdbbe6666bd327bee64d3240\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">单点测试结论</h5><p data-lake-id=\"c9acf22b153fcf1285a40e21324feabc\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">可以看到 Akamai 的动态加速实际上使 TTFB - RT - RTT 的时间更长了（因为 CDN 节点本身的 RTT 短），同时 TTFB - RT 也变长了（CDN 会 buffer 一定量的数据才返回）。<strong>然而总体的传输时间从 8.7s 降低到了 1.8s。</strong></p><p data-lake-id=\"8663160ff9496024b8dff2f499f0fc4c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"39708cec3f75d8d8f6aef8697f0c5a30\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这和我们之前对首屏的观测也是一致的，动态加速拉长了 TTFB，但总体首屏是下降的。因为用户是要下载一定有效的内容才能真正进行渲染。</p><p data-lake-id=\"e177f53df346d4b8ed6b012ac905c9ea\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d82e22ccffc250a285b10aea6b016754\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585796879410-eb31a3ce-3064-4d5d-8c94-18dacb1c2770.png?x-oss-process=image/resize,w_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585796879410-eb31a3ce-3064-4d5d-8c94-18dacb1c2770.png\" class=\"image lake-drag-image\" style=\"visibility: visible; border: none; box-shadow: none; width: 746px; height: 207px;\"></span></p><h2 id=\"54bbba80\" data-lake-id=\"14da2a25cb21b518fa67dba65797f330\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">结论</h2><p data-lake-id=\"7ad67adff38b8bc1a752e3b7aa2ebeaf\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">TTFB 是一个非常重要的网站性能指标，能够在前端比较客观的反应出后端的耗时。<strong>但是 First Byte 是无法渲染出任何东西的</strong>，我们用 TTFB 来侧面衡量网站的后端耗时<strong>不代表 TTFB 越短越好</strong>。</p><p data-lake-id=\"582d6ac763504c0476b424a11c8733cb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"71778315b60ca3304eb6a8d9ab7b40a4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在有些场景下我们使用的一些优化手段让 First Byte 刻意晚了一些（gzip 内容，buffer 一定的内容再开始传输等），这个时候 TTFB 作为一个侧面印证的指标就不是那么的精确了，在这种场景下 TTFB 失去了原本的含义，不需要过于纠结。</p><p data-lake-id=\"0b20a752ccf04af42c2d56832b37a1fd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"61eb187668e9d090a4e4388bc77ad4ff\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">如果可能的话，还是把 ServerRT 的耗时尽可能也带到前端来参与统计。</p><h2 id=\"3b40e721\" data-lake-id=\"585950afedef52a8022e41a0989abea8\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">拓展阅读</h2><ul data-lake-id=\"56444255becbffe5635b98289741de19\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"497b6cf156fd214b401e7a09cbf7acef\"><a href=\"https://blog.cloudflare.com/ttfb-time-to-first-byte-considered-meaningles/\" target=\"_blank\">Stop worrying about Time To First Byte (TTFB)</a></li><li data-lake-id=\"b4ee745a50951a5224ead195ea839980\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Server-Timing\" target=\"_blank\">Server-Timing</a></li><li data-lake-id=\"5339bc95b7c83176445739d762eb0644\"><a href=\"https://en.wikipedia.org/wiki/Round-trip_delay_time\" target=\"_blank\">Round-trip delay time</a></li></ul></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">TTFB （Time to First Byte）是指客户端从发起请求到接收到服务器响应的第一个字节的时间，是反应网站性能的一个重要指标 。由于网页的下载时间受到页面体积，客户端带宽等影响更大，TTFB 一般来说能够更好的反应服务端的性能。</p><h2 id=\"1d6b723c\" data-lake-id=\"df9520cd5811d903389b93a632280796\">精确定义</h2><p data-lake-id=\"1f9d6d981d20703cbf385a8ca5d25e6c\">上面说&quot;从发起请求到接收到服务器响应的第一个字节&quot;仍然有一些模糊，精确一点说，是在完成 DNS 查询、TCP 握手、SSL 握手后 <strong>发起 HTTP 请求报文 </strong>到 <strong>接收到服务端第一个响应报文</strong> 的时间差距。</p><p data-lake-id=\"aef4abb9cf4c637e9da5614a8bc483aa\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585797190134-89e36276-31aa-487b-978d-5c9065ffc621.png%22%2C%22originWidth%22%3A862%2C%22originHeight%22%3A858%2C%22name%22%3A%22image.png%22%2C%22size%22%3A128265%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A49.385418%2C%22y%22%3A41.30417%2C%22width%22%3A202.031252%2C%22height%22%3A21.549998000000002%2C%22text%22%3A%22Queuedat10.33s%22%7D%2C%7B%22x%22%3A46.69167%2C%22y%22%3A87.995834%2C%22width%22%3A200.23543%2C%22height%22%3A21.550005999999996%2C%22text%22%3A%22Startedat10.33s%22%7D%2C%7B%22x%22%3A740.78125%2C%22y%22%3A153.54375%2C%22width%22%3A61.05835000000002%2C%22height%22%3A24.243750000000006%2C%22text%22%3A%22TIME%22%7D%2C%7B%22x%22%3A45.79375%2C%22y%22%3A154.44167%2C%22width%22%3A242.43751000000003%2C%22height%22%3A23.345830000000007%2C%22text%22%3A%22ResourceScheduling%22%7D%2C%7B%22x%22%3A710.2521%2C%22y%22%3A199.33751%2C%22width%22%3A90.68959999999993%2C%22height%22%3A23.345820000000003%2C%22text%22%3A%220.81ms%22%7D%2C%7B%22x%22%3A45.79375%2C%22y%22%3A201.13333%2C%22width%22%3A108.64791999999998%2C%22height%22%3A24.24376000000001%2C%22text%22%3A%22Queueing%22%7D%2C%7B%22x%22%3A44.895836%2C%22y%22%3A269.375%2C%22width%22%3A196.643764%2C%22height%22%3A24.243740000000003%2C%22text%22%3A%22ConnectionStart%22%7D%2C%7B%22x%22%3A741.6792%2C%22y%22%3A269.375%2C%22width%22%3A60.16039999999998%2C%22height%22%3A22.447940000000017%2C%22text%22%3A%22TIME%22%7D%2C%7B%22x%22%3A44.895836%2C%22y%22%3A315.16876%2C%22width%22%3A79.91458399999999%2C%22height%22%3A22.44790999999998%2C%22text%22%3A%22Stalled%22%7D%2C%7B%22x%22%3A708.4563%2C%22y%22%3A315.16876%2C%22width%22%3A93.38329999999996%2C%22height%22%3A23.345839999999953%2C%22text%22%3A%222.14ms%22%7D%2C%7B%22x%22%3A43.997917%2C%22y%22%3A361.8604%2C%22width%22%3A201.133343%2C%22height%22%3A26.039619999999957%2C%22text%22%3A%22Proxynegotiation%22%7D%2C%7B%22x%22%3A708.4563%2C%22y%22%3A364.55417%2C%22width%22%3A93.38329999999996%2C%22height%22%3A20.65210000000002%2C%22text%22%3A%220.41ms%22%7D%2C%7B%22x%22%3A43.997917%2C%22y%22%3A410.34793%2C%22width%22%3A148.156253%2C%22height%22%3A26.03956999999997%2C%22text%22%3A%22DNSLookup%22%7D%2C%7B%22x%22%3A694.0896%2C%22y%22%3A412.14377%2C%22width%22%3A105.05629999999996%2C%22height%22%3A24.24372999999997%2C%22text%22%3A%2210.15ms%22%7D%2C%7B%22x%22%3A681.5188%2C%22y%22%3A459.73334%2C%22width%22%3A114.03539999999998%2C%22height%22%3A22.447929999999985%2C%22text%22%3A%22157.94ms%22%7D%2C%7B%22x%22%3A45.79375%2C%22y%22%3A460.63126%2C%22width%22%3A191.25625000000002%2C%22height%22%3A20.65210000000002%2C%22text%22%3A%22lnitialconnection%22%7D%2C%7B%22x%22%3A45.79375%2C%22y%22%3A507.32294%2C%22width%22%3A48.4875%2C%22height%22%3A21.549959999999942%2C%22text%22%3A%22SSL%22%7D%2C%7B%22x%22%3A683.3146%2C%22y%22%3A508.22086%2C%22width%22%3A119.42295000000001%2C%22height%22%3A21.550039999999967%2C%22text%22%3A%22125.64ms%22%7D%2C%7B%22x%22%3A739.88336%2C%22y%22%3A576.4625%2C%22width%22%3A61.95623999999998%2C%22height%22%3A22.447959999999966%2C%22text%22%3A%22TIME%22%7D%2C%7B%22x%22%3A45.79375%2C%22y%22%3A577.3604%2C%22width%22%3A215.50001000000003%2C%22height%22%3A22.44794999999999%2C%22text%22%3A%22Request%2FResponse%22%7D%2C%7B%22x%22%3A46.69167%2C%22y%22%3A623.1542%2C%22width%22%3A150.85000000000002%2C%22height%22%3A25.141640000000052%2C%22text%22%3A%22Requestsent%22%7D%2C%7B%22x%22%3A707.55835%2C%22y%22%3A623.1542%2C%22width%22%3A93.38334999999995%2C%22height%22%3A21.549960000000056%2C%22text%22%3A%220.29ms%22%7D%2C%7B%22x%22%3A49.385418%2C%22y%22%3A670.7438%2C%22width%22%3A158.033342%2C%22height%22%3A23.345800000000054%2C%22text%22%3A%22Waiting((TFB)%22%7D%2C%7B%22x%22%3A683.3146%2C%22y%22%3A672.5396%2C%22width%22%3A115.83129999999994%2C%22height%22%3A20.65210000000002%2C%22text%22%3A%22122.19ms%22%7D%2C%7B%22x%22%3A693.1917%2C%22y%22%3A718.3334%2C%22width%22%3A89.79164000000003%2C%22height%22%3A24.24369999999999%2C%22text%22%3A%2249.62ms%22%7D%2C%7B%22x%22%3A47.589584%2C%22y%22%3A720.1292%2C%22width%22%3A210.11251599999997%2C%22height%22%3A20.65205000000003%2C%22text%22%3A%22ContentDownload%22%7D%2C%7B%22x%22%3A677.9271%2C%22y%22%3A787.47296%2C%22width%22%3A126.60620000000006%2C%22height%22%3A27.835390000000075%2C%22text%22%3A%22343.46ms%22%7D%2C%7B%22x%22%3A47.589584%2C%22y%22%3A789.2688%2C%22width%22%3A130.197916%2C%22height%22%3A21.549999999999955%2C%22text%22%3A%22Explanation%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22Queuedat10.33s%20Startedat10.33s%20TIME%20ResourceScheduling%200.81ms%20Queueing%20ConnectionStart%20TIME%20Stalled%202.14ms%20Proxynegotiation%200.41ms%20DNSLookup%2010.15ms%20157.94ms%20lnitialconnection%20SSL%20125.64ms%20TIME%20Request%2FResponse%20Requestsent%200.29ms%20Waiting((TFB)%20122.19ms%2049.62ms%20ContentDownload%20343.46ms%20Explanation%22%2C%22width%22%3A431%2C%22height%22%3A429%7D\"></card></p><h2 id=\"RTT\" data-lake-id=\"40e98b682d4701f1215df372bb6cb1e9\">RTT 和 TCP 建连 </h2><p data-lake-id=\"a7b993ec4c619b2b1f7deaf4edce356d\">如果不了解 RTT 和 TCP 建连的耗时，可以看一下 <a href=\"https://www.xcodebuild.com/2020/03/26/yuque/why-so-slow-connect/\" target=\"_blank\">TCP 建连为什么这么慢</a></p><h2 id=\"41933693\" data-lake-id=\"482d01aa8b96f7a33d2337b7fe90f9b1\">TTFB 多少是个合理值</h2><p data-lake-id=\"0482b14458a8908ba66282503a563ab1\">我们拿到 TTFB 这个指标后，最广泛的问题就是 TTFB 究竟应该多少是个合理值？一般来说，我们可以泛泛地认为对于静态页面，50ms 是个非常理想的值（因为大部分情况下 RTT 基本就在这个范围了），而如果超过了 500ms，一般用户就会感觉到明显的等待。</p><h3 id=\"c4edbbcb\" data-lake-id=\"1dfac908007300a5aef2c15d65a2c54f\">TTFB 如何构成</h3><p data-lake-id=\"33b3b4744f506feeab6aa42dead36e49\">其实要理解 TTFB 合理的时长，我们可以看一下 TTFB 具体怎么构成。</p><p data-lake-id=\"632fac13ce780f83d38a9e612855e007\"><br /></p><p data-lake-id=\"f8b02ebd02661cc86cf8277b3c8cd890\">我们可以使用 tcpdump 抓一下 <code>curl http://www.baidu.com</code> 时发生了什么</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22cc06a0ce%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%E5%AE%A2%E6%88%B7%E7%AB%AF%20-%3E%20%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%9Aseq%203612756767%5Cn%E6%9C%8D%E5%8A%A1%E5%99%A8%20-%3E%20%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%9Aseq%203932881577%2C%20ack%203612756768%5Cn%E5%AE%A2%E6%88%B7%E7%AB%AF%20-%3E%20%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%9Aack%203932881578%20%2F%2F%20%E5%88%B0%E8%BF%99%E9%87%8C%E5%AE%8C%E6%88%90%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%5Cn%E5%AE%A2%E6%88%B7%E7%AB%AF%20-%3E%20%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%9Aseq%203612756768%3A3612756845%2C%20length%2077%3A%20HTTP%3A%20GET%20%2F%20HTTP%2F1.1%20%2F%2F%20%E5%8F%91%E9%80%81%20GET%20%E8%AF%B7%E6%B1%82%E7%9A%84%20HTTP%20%E6%8A%A5%E6%96%87%5Cn%E6%9C%8D%E5%8A%A1%E5%99%A8%20-%3E%20%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%9Aack%203612756845%5Cn%E6%9C%8D%E5%8A%A1%E5%99%A8%20-%3E%20%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%9Aseq%203932881578%3A3932883030%2C%20ack%203612756845%2C%20length%201452%3A%20HTTP%3A%20HTTP%2F1.1%20200%20OK%20%2F%2F%20First%20Byte%20%E5%88%B0%E8%BE%BE%5Cn%E6%9C%8D%E5%8A%A1%E5%99%A8%20-%3E%20%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%9Aseq%203932883030%3A3932884359%2C%20ack%203612756845%2C%20win%20776%2C%20length%201329%3A%20HTTP%20%2F%2F%20%E7%BB%A7%E7%BB%AD%E4%BC%A0%E8%BE%93%20HTTP%20%E5%93%8D%E5%BA%94%E6%8A%A5%E6%96%87%5Cn%2F%2F%20...%22%7D\"></card><p data-lake-id=\"c907b71d8c8a156b841b41a15bf3e337\">我们看网络的来回可以发现，GET 请求发出后，到收到 First Byte 的时间其实<strong>接近</strong>于一个 RTT + 后端处理（一般我们叫 ServerRT）的时间。</p><p data-lake-id=\"f476ae11b4faea8ed724e7383d39e682\"><br /></p><p data-lake-id=\"4349e51afc07b344f34b91717e2f68d4\">所以对一个页面的 TTFB 来说，它的<strong>时长在通常情况下接近于和服务器的 RTT + ServerRT（可能要多一些协议层的消耗）。</strong></p><h3 id=\"17587da8\" data-lake-id=\"649c7f8b4c7538d7e22918a015e4276e\">试验环境验证</h3><p data-lake-id=\"af3df8021a0cd4454d5fbef24900b867\">为了验证这个推论是否正确，我们用一些 RT 基本为零的页面进行验证。其中 Initial Connection 的时间（TCP 握手时间）也是接近 1 RTT 的。所以总体来说 TTFB 应该和  Initial Connection 非常接近。</p><h4 id=\"4e2410fd\" data-lake-id=\"a745a2f43491740344742d6fbe371a06\">空页面</h4><p data-lake-id=\"a393e54fc6bac0ab4e8f0c99fc53cc11\">准备搞台海外机器实际试试看 TTFB 和 RTT 的差距，空页面是非常接近的</p><p data-lake-id=\"3a35d19f130ca1c0517678e9afdffca2\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585796879380-d29fc5fd-495e-45ca-8035-52e904a47d4c.png%22%2C%22originWidth%22%3A1924%2C%22originHeight%22%3A790%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A1924%2C%22height%22%3A790%7D\"></card></p><p data-lake-id=\"b43ebb0429aa9a478cfd767d5a01dbb3\"><br /></p><h3 id=\"117d2ea0\" data-lake-id=\"d355a4f938f85fb9293d7d37ca6bdb36\">大体积页面</h3><p data-lake-id=\"b1a8609ce3bb283cd8d56f96d80ba717\">怀疑页面大小是导致协议层的开销增大（会拆成多个 TCP 包），找了个 gzip 后 100kb 的 js，访问一下看看</p><p data-lake-id=\"11f41c80e076d5dfab1d26a10366c619\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585796879373-a00576f2-669e-46f7-a45c-f928b59d01af.png%22%2C%22originWidth%22%3A1914%2C%22originHeight%22%3A920%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A1914%2C%22height%22%3A920%7D\"></card></p><p data-lake-id=\"73e430102a34a2193f79797b74e73beb\">似乎稍微大了一丢丢，但差距仍然很小，试试看更大的（gzip后仍有 1.x MB）</p><p data-lake-id=\"20d223880f515c803d9cfdc3989a8578\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585796879379-d368668f-4fa3-4c0d-a0d4-85f12041a9ab.png%22%2C%22originWidth%22%3A1926%2C%22originHeight%22%3A908%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A1926%2C%22height%22%3A908%7D\"></card></p><p data-lake-id=\"a99768a0c690c37b39d54bfae2bbb7bd\"><br /></p><p data-lake-id=\"4b8b4a7e3b35789522fe7af387649f6d\">看到差距仍然非常小，所以说页面的体积对于 TTFB 是基本没有影响的，不会因为回传的 HTTP 报文太大导致首字节传输耗时明显增大。</p><h3 id=\"f63d1776\" data-lake-id=\"80d851490555d2ae44027b763695a6b6\">如何降低 TTFB</h3><p data-lake-id=\"eebfd494382501cb72cac90283118220\">那么，当 TTFB 很长时，我们该如何降低 TTFB 呢</p><h4 id=\"7cb5a81c\" data-lake-id=\"7da5f6cb0bc20c431d314a3238a8675f\">减少请求的传输量</h4><p data-lake-id=\"fb7f551f757f937b0a6724db1c9106f5\">例如 cookie 或者 body 很大的 POST 请求，他们的发送会更加耗时。例如当我们尝试把 cookie 变得非常长后抓到的请求变成了：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2211e2ee28%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%E5%AE%A2%E6%88%B7%E7%AB%AF%20-%3E%20%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%9Aseq%202144370637%3A2144372089%3A%20HTTP%3A%20GET%20%2F%20HTTP%2F1.1%20%2F%2F%20%E5%8F%91%E9%80%81%20GET%20%E8%AF%B7%E6%B1%82%E7%9A%84%20HTTP%20%E6%8A%A5%E6%96%87%5Cn%E5%AE%A2%E6%88%B7%E7%AB%AF%20-%3E%20%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%9Aseq%202144372089%3A2144372988%3A%20HTTP%20%2F%2F%20%E7%BB%A7%E7%BB%AD%E5%8F%91%E9%80%81%EF%BC%8C%E6%B2%A1%E6%B3%95%E9%80%81%E5%AE%8C%5Cn%5Cn%E6%9C%8D%E5%8A%A1%E5%99%A8%20-%3E%20%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%9Aack%202144372089%5Cn%E6%9C%8D%E5%8A%A1%E5%99%A8%20-%3E%20%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%9Aack%202144372988%20%2F%2F%20%E4%B8%A4%E6%AC%A1%20ACK%5Cn%5Cn%E6%9C%8D%E5%8A%A1%E5%99%A8%20-%3E%20%E5%AE%A2%E6%88%B7%E7%AB%AF%20%2F%2F%20First%20Byte%20%E5%88%B0%E8%BE%BE%22%7D\"></card><p data-lake-id=\"8750562b81551e17ee26f7a13ee3a2e1\">发送请求的 TCP 包直接被拆成了多个，首字节说的是服务端的首字节，客户端发给服务端的包客户端需要接收完整才能做出响应然后返回。</p><p data-lake-id=\"51757438d5abb0d75b63f5562d3bf7ab\"><br /></p><p data-lake-id=\"9a95ecffc75bf83e922deb478714e298\">所以我们应该避免在请求中携带过多无用信息。</p><h4 id=\"1d26492f\" data-lake-id=\"07a3cdefd27a99711b29488eb7d3523e\">减少服务端处理时间</h4><p data-lake-id=\"4542e7812e281ee400213424b34d88af\">这点最容易理解，减少服务端的处理时间（ServerRT），TTFB 自然会下降。</p><h4 id=\"b4e97df0\" data-lake-id=\"ad6bd9770a54abce53739a435c3ae7f6\">减少 RTT 时间</h4><p data-lake-id=\"470cc9f63b2bdad1194bff83dd9215b1\">这点一般没有什么特别好的办法，RTT 是由网络状况和物理位置决定的，想要减少 RTT 就只能在离用户更近的地方增加服务器节点了。</p><h2 id=\"7785bb09\" data-lake-id=\"e3fb204f9b933151d09840fc82f219e2\">TTFB 越低越好么</h2><p data-lake-id=\"e94f128e0b7f613be509a98dc572c973\">先直接放结论，<strong>不是的</strong></p><p data-lake-id=\"65d959f6d5ce211ff9ef1021ceb66434\"><br /></p><p data-lake-id=\"0c924d69a8b7426584b35f07697b539a\">优化性能都是为了用户体验，而 TTFB 只是描述某一段过程的参考技术指标。他只所以被看得比较重要，是因为其受影响的因素相对没那么多，能够比较客观的反应服务端的处理时间 + 网络耗时。</p><h2 id=\"92d33d9b\" data-lake-id=\"b980f301a69b04dce01fd4ad00fed6ff\">TTFB 和 download 的权衡</h2><h2 id=\"BDJtd\" data-lake-id=\"fcc8b769b26a3a8ee465f9bcb037b16f\">Gzip</h2><p data-lake-id=\"208a43fe43319edc021d00cb4789477e\">一个很典型的例子，当我们开启 Gzip 时，对于一个比较大的页面 TTFB 必然上涨（压缩需要时间），但是实际上传输的速度要快很多。用户能够更快的看到页面（首字节是无法用于渲染的）。</p><p data-lake-id=\"332fc372dc3bb4c94bbf963ea349d764\"><br /></p><p data-lake-id=\"ce85644b29afc7f257ecd121647487d9\">这种情况下我们不应该去追求 TTFB 的短，真正应该在意的是用户的真实体验。</p><h3 id=\"3b7ba694\" data-lake-id=\"8ae0696d24260574e615965a7ee36502\">动态加速</h3><p data-lake-id=\"8648e03b128035a901c31b7c131bc24a\">动态加速是个类似的例子，一些 CDN 厂商通过动态加速技术让网页更快的传输。然而由于 CDN 节点会更快的建立连接。导致发起请求的时间被提前了，而 CND 节点则承担了原来和服务器建连的成本，另外 CND 也会在节点中做一些 buffer，这都会导致 TTFB 看起来更长了，然而实际上页面的加载速度是得到了提升的。</p><h4 id=\"b823255e\" data-lake-id=\"583155260572ea960fdd190e4af5bd70\">单点测试</h4><p data-lake-id=\"6ca68adf867cc3938b3a28401072e3bb\">我们在本地针对 Akamai 的动态加速进行了单点测试</p><h5 id=\"Akamai\" data-lake-id=\"54651eefb104d7b03bd31e999f8b1563\">Akamai</h5><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%229a30de81%22%2C%22mode%22%3A%22shell%22%2C%22code%22%3A%22curl%20-w%20%5C%22%40curl-format.txt%5C%22%20-so%20.%2Fppc.html%20https%3A%2F%2F23.218.15.80%2Fppc%2Fmp3.html%20-H%20%5C%22Host%3A%20www.alibaba.com%5C%22%20--insecure%22%7D\"></card><p data-lake-id=\"ded3ee76328bee7113928ba050c8dfbd\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2278dec5d6%22%2C%22mode%22%3A%22shell%22%2C%22code%22%3A%22time_namelookup%3A%20%200.004775%5Cn%20%20%20%20%20%20time_connect%3A%20%200.073131%20(TCP%20handshake)%5Cn%20%20%20time_appconnect%3A%20%200.232171%20(SSL%20handshake)%5Cn%20%20time_pretransfer%3A%20%200.232290%5Cn%20%20%20%20%C2%A6time_redirect%3A%20%200.000000%5Cntime_starttransfer%3A%20%201.401208%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20----------%5Cn%20%20%20%20%20%20%20%20time_total%3A%20%201.812241%22%7D\"></card><p data-lake-id=\"6975c3bdb8f03a9ee7bdb303eefcedc8\">后端 RT：1561455906142 - 1561455905344 = 798</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22b4bf0c34%22%2C%22mode%22%3A%22shell%22%2C%22code%22%3A%22TTFB%20-%20RTT%20-%20RT%20%3D%20%201169%20-%2069%20-%20798%20%3D%20300%5Cn%5CnTTFB%20-%20RT%20%3D%201169%20-%20798%20%3D%20371%22%7D\"></card><h5 id=\"a395b613\" data-lake-id=\"934a91b7e4e14b87af6bd5620f1e282b\">美国统一接入层</h5><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%227661da5c%22%2C%22mode%22%3A%22shell%22%2C%22code%22%3A%22curl%20-w%20%5C%22%40curl-format.txt%5C%22%20-so%20.%2Fppc.html%20https%3A%2F%2F205.204.101.142%2Fppc%2Fmp3.html%20-H%20%5C%22Host%3A%20www.alibaba.com%5C%22%20--insecure%22%7D\"></card><p data-lake-id=\"8ad86783e5a7fa0b44fa18d5478265a8\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%220112856f%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22time_namelookup%3A%20%200.005029%5Cn%20%20%20%20%20%20time_connect%3A%20%200.161610%20(TCP%20handshake)%5Cn%20%20%20time_appconnect%3A%20%200.806566%20(SSL%20handshake)%5Cn%20%20time_pretransfer%3A%20%200.806884%5Cn%20%20%20%20%C2%A6time_redirect%3A%20%200.000000%5Cntime_starttransfer%3A%20%201.830675%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20----------%5Cn%20%20%20%20%20%20%20%20time_total%3A%20%208.795626%22%7D\"></card><p data-lake-id=\"961aa78b8b862a7c265f2563e2d0dd40\"><br /></p><p data-lake-id=\"1318ccdfcf76f2d3a91ea26b0ae60d36\">后端 RT = 1561456655052-1561456654266 = 786</p><p data-lake-id=\"17ec1c9a32cce8bc39dfbd06e6a9fac3\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22ec53cd8c%22%2C%22mode%22%3A%22shell%22%2C%22code%22%3A%22TTFB%20-%20RTT%20-%20RT%20%3D%201024%20-%20156%20-%20786%20%3D%2082%5Cn%5CnTTFB%20-%20RT%20%3D%201024%20-%20786%20%3D%20238%22%7D\"></card><h5 id=\"4f641c3c\" data-lake-id=\"6d20dd90bdbbe6666bd327bee64d3240\">单点测试结论</h5><p data-lake-id=\"c9acf22b153fcf1285a40e21324feabc\">可以看到 Akamai 的动态加速实际上使 TTFB - RT - RTT 的时间更长了（因为 CDN 节点本身的 RTT 短），同时 TTFB - RT 也变长了（CDN 会 buffer 一定量的数据才返回）。<strong>然而总体的传输时间从 8.7s 降低到了 1.8s。</strong></p><p data-lake-id=\"8663160ff9496024b8dff2f499f0fc4c\"><br /></p><p data-lake-id=\"39708cec3f75d8d8f6aef8697f0c5a30\">这和我们之前对首屏的观测也是一致的，动态加速拉长了 TTFB，但总体首屏是下降的。因为用户是要下载一定有效的内容才能真正进行渲染。</p><p data-lake-id=\"e177f53df346d4b8ed6b012ac905c9ea\"><br /></p><p data-lake-id=\"d82e22ccffc250a285b10aea6b016754\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585796879410-eb31a3ce-3064-4d5d-8c94-18dacb1c2770.png%22%2C%22originWidth%22%3A1742%2C%22originHeight%22%3A484%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A1742%2C%22height%22%3A484%7D\"></card></p><h2 id=\"54bbba80\" data-lake-id=\"14da2a25cb21b518fa67dba65797f330\">结论</h2><p data-lake-id=\"7ad67adff38b8bc1a752e3b7aa2ebeaf\">TTFB 是一个非常重要的网站性能指标，能够在前端比较客观的反应出后端的耗时。<strong>但是 First Byte 是无法渲染出任何东西的</strong>，我们用 TTFB 来侧面衡量网站的后端耗时<strong>不代表 TTFB 越短越好</strong>。</p><p data-lake-id=\"582d6ac763504c0476b424a11c8733cb\"><br /></p><p data-lake-id=\"71778315b60ca3304eb6a8d9ab7b40a4\">在有些场景下我们使用的一些优化手段让 First Byte 刻意晚了一些（gzip 内容，buffer 一定的内容再开始传输等），这个时候 TTFB 作为一个侧面印证的指标就不是那么的精确了，在这种场景下 TTFB 失去了原本的含义，不需要过于纠结。</p><p data-lake-id=\"0b20a752ccf04af42c2d56832b37a1fd\"><br /></p><p data-lake-id=\"61eb187668e9d090a4e4388bc77ad4ff\">如果可能的话，还是把 ServerRT 的耗时尽可能也带到前端来参与统计。</p><h2 id=\"3b40e721\" data-lake-id=\"585950afedef52a8022e41a0989abea8\">拓展阅读</h2><ul data-lake-id=\"56444255becbffe5635b98289741de19\"><li data-lake-id=\"497b6cf156fd214b401e7a09cbf7acef\"><a href=\"https://blog.cloudflare.com/ttfb-time-to-first-byte-considered-meaningles/\" target=\"_blank\">Stop worrying about Time To First Byte (TTFB)</a></li><li data-lake-id=\"b4ee745a50951a5224ead195ea839980\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Server-Timing\" target=\"_blank\">Server-Timing</a></li><li data-lake-id=\"5339bc95b7c83176445739d762eb0644\"><a href=\"https://en.wikipedia.org/wiki/Round-trip_delay_time\" target=\"_blank\">Round-trip delay time</a></li></ul>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">TTFB （Time to First Byte）是指客户端从发起请求到接收到服务器响应的第一个字节的时间，是反应网站性能的一个重要指标 。由于网页的下载时间受到页面体积，客户端带宽等影响更大，TTFB 一般来说能够更好的反应服务端的性能。</p><h2 id=\"1d6b723c\" data-lake-id=\"df9520cd5811d903389b93a632280796\">精确定义</h2><p data-lake-id=\"1f9d6d981d20703cbf385a8ca5d25e6c\">上面说&quot;从发起请求到接收到服务器响应的第一个字节&quot;仍然有一些模糊，精确一点说，是在完成 DNS 查询、TCP 握手、SSL 握手后 <strong>发起 HTTP 请求报文 </strong>到 <strong>接收到服务端第一个响应报文</strong> 的时间差距。</p><p data-lake-id=\"aef4abb9cf4c637e9da5614a8bc483aa\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585797190134-89e36276-31aa-487b-978d-5c9065ffc621.png%22%2C%22originWidth%22%3A862%2C%22originHeight%22%3A858%2C%22name%22%3A%22image.png%22%2C%22size%22%3A128265%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A49.385418%2C%22y%22%3A41.30417%2C%22width%22%3A202.031252%2C%22height%22%3A21.549998000000002%2C%22text%22%3A%22Queuedat10.33s%22%7D%2C%7B%22x%22%3A46.69167%2C%22y%22%3A87.995834%2C%22width%22%3A200.23543%2C%22height%22%3A21.550005999999996%2C%22text%22%3A%22Startedat10.33s%22%7D%2C%7B%22x%22%3A740.78125%2C%22y%22%3A153.54375%2C%22width%22%3A61.05835000000002%2C%22height%22%3A24.243750000000006%2C%22text%22%3A%22TIME%22%7D%2C%7B%22x%22%3A45.79375%2C%22y%22%3A154.44167%2C%22width%22%3A242.43751000000003%2C%22height%22%3A23.345830000000007%2C%22text%22%3A%22ResourceScheduling%22%7D%2C%7B%22x%22%3A710.2521%2C%22y%22%3A199.33751%2C%22width%22%3A90.68959999999993%2C%22height%22%3A23.345820000000003%2C%22text%22%3A%220.81ms%22%7D%2C%7B%22x%22%3A45.79375%2C%22y%22%3A201.13333%2C%22width%22%3A108.64791999999998%2C%22height%22%3A24.24376000000001%2C%22text%22%3A%22Queueing%22%7D%2C%7B%22x%22%3A44.895836%2C%22y%22%3A269.375%2C%22width%22%3A196.643764%2C%22height%22%3A24.243740000000003%2C%22text%22%3A%22ConnectionStart%22%7D%2C%7B%22x%22%3A741.6792%2C%22y%22%3A269.375%2C%22width%22%3A60.16039999999998%2C%22height%22%3A22.447940000000017%2C%22text%22%3A%22TIME%22%7D%2C%7B%22x%22%3A44.895836%2C%22y%22%3A315.16876%2C%22width%22%3A79.91458399999999%2C%22height%22%3A22.44790999999998%2C%22text%22%3A%22Stalled%22%7D%2C%7B%22x%22%3A708.4563%2C%22y%22%3A315.16876%2C%22width%22%3A93.38329999999996%2C%22height%22%3A23.345839999999953%2C%22text%22%3A%222.14ms%22%7D%2C%7B%22x%22%3A43.997917%2C%22y%22%3A361.8604%2C%22width%22%3A201.133343%2C%22height%22%3A26.039619999999957%2C%22text%22%3A%22Proxynegotiation%22%7D%2C%7B%22x%22%3A708.4563%2C%22y%22%3A364.55417%2C%22width%22%3A93.38329999999996%2C%22height%22%3A20.65210000000002%2C%22text%22%3A%220.41ms%22%7D%2C%7B%22x%22%3A43.997917%2C%22y%22%3A410.34793%2C%22width%22%3A148.156253%2C%22height%22%3A26.03956999999997%2C%22text%22%3A%22DNSLookup%22%7D%2C%7B%22x%22%3A694.0896%2C%22y%22%3A412.14377%2C%22width%22%3A105.05629999999996%2C%22height%22%3A24.24372999999997%2C%22text%22%3A%2210.15ms%22%7D%2C%7B%22x%22%3A681.5188%2C%22y%22%3A459.73334%2C%22width%22%3A114.03539999999998%2C%22height%22%3A22.447929999999985%2C%22text%22%3A%22157.94ms%22%7D%2C%7B%22x%22%3A45.79375%2C%22y%22%3A460.63126%2C%22width%22%3A191.25625000000002%2C%22height%22%3A20.65210000000002%2C%22text%22%3A%22lnitialconnection%22%7D%2C%7B%22x%22%3A45.79375%2C%22y%22%3A507.32294%2C%22width%22%3A48.4875%2C%22height%22%3A21.549959999999942%2C%22text%22%3A%22SSL%22%7D%2C%7B%22x%22%3A683.3146%2C%22y%22%3A508.22086%2C%22width%22%3A119.42295000000001%2C%22height%22%3A21.550039999999967%2C%22text%22%3A%22125.64ms%22%7D%2C%7B%22x%22%3A739.88336%2C%22y%22%3A576.4625%2C%22width%22%3A61.95623999999998%2C%22height%22%3A22.447959999999966%2C%22text%22%3A%22TIME%22%7D%2C%7B%22x%22%3A45.79375%2C%22y%22%3A577.3604%2C%22width%22%3A215.50001000000003%2C%22height%22%3A22.44794999999999%2C%22text%22%3A%22Request%2FResponse%22%7D%2C%7B%22x%22%3A46.69167%2C%22y%22%3A623.1542%2C%22width%22%3A150.85000000000002%2C%22height%22%3A25.141640000000052%2C%22text%22%3A%22Requestsent%22%7D%2C%7B%22x%22%3A707.55835%2C%22y%22%3A623.1542%2C%22width%22%3A93.38334999999995%2C%22height%22%3A21.549960000000056%2C%22text%22%3A%220.29ms%22%7D%2C%7B%22x%22%3A49.385418%2C%22y%22%3A670.7438%2C%22width%22%3A158.033342%2C%22height%22%3A23.345800000000054%2C%22text%22%3A%22Waiting((TFB)%22%7D%2C%7B%22x%22%3A683.3146%2C%22y%22%3A672.5396%2C%22width%22%3A115.83129999999994%2C%22height%22%3A20.65210000000002%2C%22text%22%3A%22122.19ms%22%7D%2C%7B%22x%22%3A693.1917%2C%22y%22%3A718.3334%2C%22width%22%3A89.79164000000003%2C%22height%22%3A24.24369999999999%2C%22text%22%3A%2249.62ms%22%7D%2C%7B%22x%22%3A47.589584%2C%22y%22%3A720.1292%2C%22width%22%3A210.11251599999997%2C%22height%22%3A20.65205000000003%2C%22text%22%3A%22ContentDownload%22%7D%2C%7B%22x%22%3A677.9271%2C%22y%22%3A787.47296%2C%22width%22%3A126.60620000000006%2C%22height%22%3A27.835390000000075%2C%22text%22%3A%22343.46ms%22%7D%2C%7B%22x%22%3A47.589584%2C%22y%22%3A789.2688%2C%22width%22%3A130.197916%2C%22height%22%3A21.549999999999955%2C%22text%22%3A%22Explanation%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22Queuedat10.33s%20Startedat10.33s%20TIME%20ResourceScheduling%200.81ms%20Queueing%20ConnectionStart%20TIME%20Stalled%202.14ms%20Proxynegotiation%200.41ms%20DNSLookup%2010.15ms%20157.94ms%20lnitialconnection%20SSL%20125.64ms%20TIME%20Request%2FResponse%20Requestsent%200.29ms%20Waiting((TFB)%20122.19ms%2049.62ms%20ContentDownload%20343.46ms%20Explanation%22%2C%22width%22%3A431%2C%22height%22%3A429%7D\"></card></p><h2 id=\"RTT\" data-lake-id=\"40e98b682d4701f1215df372bb6cb1e9\">RTT 和 TCP 建连 </h2><p data-lake-id=\"a7b993ec4c619b2b1f7deaf4edce356d\">如果不了解 RTT 和 TCP 建连的耗时，可以看一下 <a href=\"https://www.xcodebuild.com/2020/03/26/yuque/why-so-slow-connect/\" target=\"_blank\">TCP 建连为什么这么慢</a></p><h2 id=\"41933693\" data-lake-id=\"482d01aa8b96f7a33d2337b7fe90f9b1\">TTFB 多少是个合理值</h2><p data-lake-id=\"0482b14458a8908ba66282503a563ab1\">我们拿到 TTFB 这个指标后，最广泛的问题就是 TTFB 究竟应该多少是个合理值？一般来说，我们可以泛泛地认为对于静态页面，50ms 是个非常理想的值（因为大部分情况下 RTT 基本就在这个范围了），而如果超过了 500ms，一般用户就会感觉到明显的等待。</p><h3 id=\"c4edbbcb\" data-lake-id=\"1dfac908007300a5aef2c15d65a2c54f\">TTFB 如何构成</h3><p data-lake-id=\"33b3b4744f506feeab6aa42dead36e49\">其实要理解 TTFB 合理的时长，我们可以看一下 TTFB 具体怎么构成。</p><p data-lake-id=\"632fac13ce780f83d38a9e612855e007\"><br /></p><p data-lake-id=\"f8b02ebd02661cc86cf8277b3c8cd890\">我们可以使用 tcpdump 抓一下 <code>curl http://www.baidu.com</code> 时发生了什么</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22cc06a0ce%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%E5%AE%A2%E6%88%B7%E7%AB%AF%20-%3E%20%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%9Aseq%203612756767%5Cn%E6%9C%8D%E5%8A%A1%E5%99%A8%20-%3E%20%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%9Aseq%203932881577%2C%20ack%203612756768%5Cn%E5%AE%A2%E6%88%B7%E7%AB%AF%20-%3E%20%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%9Aack%203932881578%20%2F%2F%20%E5%88%B0%E8%BF%99%E9%87%8C%E5%AE%8C%E6%88%90%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%5Cn%E5%AE%A2%E6%88%B7%E7%AB%AF%20-%3E%20%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%9Aseq%203612756768%3A3612756845%2C%20length%2077%3A%20HTTP%3A%20GET%20%2F%20HTTP%2F1.1%20%2F%2F%20%E5%8F%91%E9%80%81%20GET%20%E8%AF%B7%E6%B1%82%E7%9A%84%20HTTP%20%E6%8A%A5%E6%96%87%5Cn%E6%9C%8D%E5%8A%A1%E5%99%A8%20-%3E%20%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%9Aack%203612756845%5Cn%E6%9C%8D%E5%8A%A1%E5%99%A8%20-%3E%20%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%9Aseq%203932881578%3A3932883030%2C%20ack%203612756845%2C%20length%201452%3A%20HTTP%3A%20HTTP%2F1.1%20200%20OK%20%2F%2F%20First%20Byte%20%E5%88%B0%E8%BE%BE%5Cn%E6%9C%8D%E5%8A%A1%E5%99%A8%20-%3E%20%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%9Aseq%203932883030%3A3932884359%2C%20ack%203612756845%2C%20win%20776%2C%20length%201329%3A%20HTTP%20%2F%2F%20%E7%BB%A7%E7%BB%AD%E4%BC%A0%E8%BE%93%20HTTP%20%E5%93%8D%E5%BA%94%E6%8A%A5%E6%96%87%5Cn%2F%2F%20...%22%7D\"></card><p data-lake-id=\"c907b71d8c8a156b841b41a15bf3e337\">我们看网络的来回可以发现，GET 请求发出后，到收到 First Byte 的时间其实<strong>接近</strong>于一个 RTT + 后端处理（一般我们叫 ServerRT）的时间。</p><p data-lake-id=\"f476ae11b4faea8ed724e7383d39e682\"><br /></p><p data-lake-id=\"4349e51afc07b344f34b91717e2f68d4\">所以对一个页面的 TTFB 来说，它的<strong>时长在通常情况下接近于和服务器的 RTT + ServerRT（可能要多一些协议层的消耗）。</strong></p><h3 id=\"17587da8\" data-lake-id=\"649c7f8b4c7538d7e22918a015e4276e\">试验环境验证</h3><p data-lake-id=\"af3df8021a0cd4454d5fbef24900b867\">为了验证这个推论是否正确，我们用一些 RT 基本为零的页面进行验证。其中 Initial Connection 的时间（TCP 握手时间）也是接近 1 RTT 的。所以总体来说 TTFB 应该和  Initial Connection 非常接近。</p><h4 id=\"4e2410fd\" data-lake-id=\"a745a2f43491740344742d6fbe371a06\">空页面</h4><p data-lake-id=\"a393e54fc6bac0ab4e8f0c99fc53cc11\">准备搞台海外机器实际试试看 TTFB 和 RTT 的差距，空页面是非常接近的</p><p data-lake-id=\"3a35d19f130ca1c0517678e9afdffca2\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585796879380-d29fc5fd-495e-45ca-8035-52e904a47d4c.png%22%2C%22originWidth%22%3A1924%2C%22originHeight%22%3A790%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A1924%2C%22height%22%3A790%7D\"></card></p><p data-lake-id=\"b43ebb0429aa9a478cfd767d5a01dbb3\"><br /></p><h3 id=\"117d2ea0\" data-lake-id=\"d355a4f938f85fb9293d7d37ca6bdb36\">大体积页面</h3><p data-lake-id=\"b1a8609ce3bb283cd8d56f96d80ba717\">怀疑页面大小是导致协议层的开销增大（会拆成多个 TCP 包），找了个 gzip 后 100kb 的 js，访问一下看看</p><p data-lake-id=\"11f41c80e076d5dfab1d26a10366c619\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585796879373-a00576f2-669e-46f7-a45c-f928b59d01af.png%22%2C%22originWidth%22%3A1914%2C%22originHeight%22%3A920%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A1914%2C%22height%22%3A920%7D\"></card></p><p data-lake-id=\"73e430102a34a2193f79797b74e73beb\">似乎稍微大了一丢丢，但差距仍然很小，试试看更大的（gzip后仍有 1.x MB）</p><p data-lake-id=\"20d223880f515c803d9cfdc3989a8578\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585796879379-d368668f-4fa3-4c0d-a0d4-85f12041a9ab.png%22%2C%22originWidth%22%3A1926%2C%22originHeight%22%3A908%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A1926%2C%22height%22%3A908%7D\"></card></p><p data-lake-id=\"a99768a0c690c37b39d54bfae2bbb7bd\"><br /></p><p data-lake-id=\"4b8b4a7e3b35789522fe7af387649f6d\">看到差距仍然非常小，所以说页面的体积对于 TTFB 是基本没有影响的，不会因为回传的 HTTP 报文太大导致首字节传输耗时明显增大。</p><h3 id=\"f63d1776\" data-lake-id=\"80d851490555d2ae44027b763695a6b6\">如何降低 TTFB</h3><p data-lake-id=\"eebfd494382501cb72cac90283118220\">那么，当 TTFB 很长时，我们该如何降低 TTFB 呢</p><h4 id=\"7cb5a81c\" data-lake-id=\"7da5f6cb0bc20c431d314a3238a8675f\">减少请求的传输量</h4><p data-lake-id=\"fb7f551f757f937b0a6724db1c9106f5\">例如 cookie 或者 body 很大的 POST 请求，他们的发送会更加耗时。例如当我们尝试把 cookie 变得非常长后抓到的请求变成了：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2211e2ee28%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%E5%AE%A2%E6%88%B7%E7%AB%AF%20-%3E%20%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%9Aseq%202144370637%3A2144372089%3A%20HTTP%3A%20GET%20%2F%20HTTP%2F1.1%20%2F%2F%20%E5%8F%91%E9%80%81%20GET%20%E8%AF%B7%E6%B1%82%E7%9A%84%20HTTP%20%E6%8A%A5%E6%96%87%5Cn%E5%AE%A2%E6%88%B7%E7%AB%AF%20-%3E%20%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%9Aseq%202144372089%3A2144372988%3A%20HTTP%20%2F%2F%20%E7%BB%A7%E7%BB%AD%E5%8F%91%E9%80%81%EF%BC%8C%E6%B2%A1%E6%B3%95%E9%80%81%E5%AE%8C%5Cn%5Cn%E6%9C%8D%E5%8A%A1%E5%99%A8%20-%3E%20%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%9Aack%202144372089%5Cn%E6%9C%8D%E5%8A%A1%E5%99%A8%20-%3E%20%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%9Aack%202144372988%20%2F%2F%20%E4%B8%A4%E6%AC%A1%20ACK%5Cn%5Cn%E6%9C%8D%E5%8A%A1%E5%99%A8%20-%3E%20%E5%AE%A2%E6%88%B7%E7%AB%AF%20%2F%2F%20First%20Byte%20%E5%88%B0%E8%BE%BE%22%7D\"></card><p data-lake-id=\"8750562b81551e17ee26f7a13ee3a2e1\">发送请求的 TCP 包直接被拆成了多个，首字节说的是服务端的首字节，客户端发给服务端的包客户端需要接收完整才能做出响应然后返回。</p><p data-lake-id=\"51757438d5abb0d75b63f5562d3bf7ab\"><br /></p><p data-lake-id=\"9a95ecffc75bf83e922deb478714e298\">所以我们应该避免在请求中携带过多无用信息。</p><h4 id=\"1d26492f\" data-lake-id=\"07a3cdefd27a99711b29488eb7d3523e\">减少服务端处理时间</h4><p data-lake-id=\"4542e7812e281ee400213424b34d88af\">这点最容易理解，减少服务端的处理时间（ServerRT），TTFB 自然会下降。</p><h4 id=\"b4e97df0\" data-lake-id=\"ad6bd9770a54abce53739a435c3ae7f6\">减少 RTT 时间</h4><p data-lake-id=\"470cc9f63b2bdad1194bff83dd9215b1\">这点一般没有什么特别好的办法，RTT 是由网络状况和物理位置决定的，想要减少 RTT 就只能在离用户更近的地方增加服务器节点了。</p><h2 id=\"7785bb09\" data-lake-id=\"e3fb204f9b933151d09840fc82f219e2\">TTFB 越低越好么</h2><p data-lake-id=\"e94f128e0b7f613be509a98dc572c973\">先直接放结论，<strong>不是的</strong></p><p data-lake-id=\"65d959f6d5ce211ff9ef1021ceb66434\"><br /></p><p data-lake-id=\"0c924d69a8b7426584b35f07697b539a\">优化性能都是为了用户体验，而 TTFB 只是描述某一段过程的参考技术指标。他只所以被看得比较重要，是因为其受影响的因素相对没那么多，能够比较客观的反应服务端的处理时间 + 网络耗时。</p><h2 id=\"92d33d9b\" data-lake-id=\"b980f301a69b04dce01fd4ad00fed6ff\">TTFB 和 download 的权衡</h2><h2 id=\"BDJtd\" data-lake-id=\"fcc8b769b26a3a8ee465f9bcb037b16f\">Gzip</h2><p data-lake-id=\"208a43fe43319edc021d00cb4789477e\">一个很典型的例子，当我们开启 Gzip 时，对于一个比较大的页面 TTFB 必然上涨（压缩需要时间），但是实际上传输的速度要快很多。用户能够更快的看到页面（首字节是无法用于渲染的）。</p><p data-lake-id=\"332fc372dc3bb4c94bbf963ea349d764\"><br /></p><p data-lake-id=\"ce85644b29afc7f257ecd121647487d9\">这种情况下我们不应该去追求 TTFB 的短，真正应该在意的是用户的真实体验。</p><h3 id=\"3b7ba694\" data-lake-id=\"8ae0696d24260574e615965a7ee36502\">动态加速</h3><p data-lake-id=\"8648e03b128035a901c31b7c131bc24a\">动态加速是个类似的例子，一些 CDN 厂商通过动态加速技术让网页更快的传输。然而由于 CDN 节点会更快的建立连接。导致发起请求的时间被提前了，而 CND 节点则承担了原来和服务器建连的成本，另外 CND 也会在节点中做一些 buffer，这都会导致 TTFB 看起来更长了，然而实际上页面的加载速度是得到了提升的。</p><h4 id=\"b823255e\" data-lake-id=\"583155260572ea960fdd190e4af5bd70\">单点测试</h4><p data-lake-id=\"6ca68adf867cc3938b3a28401072e3bb\">我们在本地针对 Akamai 的动态加速进行了单点测试</p><h5 id=\"Akamai\" data-lake-id=\"54651eefb104d7b03bd31e999f8b1563\">Akamai</h5><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%229a30de81%22%2C%22mode%22%3A%22shell%22%2C%22code%22%3A%22curl%20-w%20%5C%22%40curl-format.txt%5C%22%20-so%20.%2Fppc.html%20https%3A%2F%2F23.218.15.80%2Fppc%2Fmp3.html%20-H%20%5C%22Host%3A%20www.alibaba.com%5C%22%20--insecure%22%7D\"></card><p data-lake-id=\"ded3ee76328bee7113928ba050c8dfbd\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%2278dec5d6%22%2C%22mode%22%3A%22shell%22%2C%22code%22%3A%22time_namelookup%3A%20%200.004775%5Cn%20%20%20%20%20%20time_connect%3A%20%200.073131%20(TCP%20handshake)%5Cn%20%20%20time_appconnect%3A%20%200.232171%20(SSL%20handshake)%5Cn%20%20time_pretransfer%3A%20%200.232290%5Cn%20%20%20%20%C2%A6time_redirect%3A%20%200.000000%5Cntime_starttransfer%3A%20%201.401208%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20----------%5Cn%20%20%20%20%20%20%20%20time_total%3A%20%201.812241%22%7D\"></card><p data-lake-id=\"6975c3bdb8f03a9ee7bdb303eefcedc8\">后端 RT：1561455906142 - 1561455905344 = 798</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22b4bf0c34%22%2C%22mode%22%3A%22shell%22%2C%22code%22%3A%22TTFB%20-%20RTT%20-%20RT%20%3D%20%201169%20-%2069%20-%20798%20%3D%20300%5Cn%5CnTTFB%20-%20RT%20%3D%201169%20-%20798%20%3D%20371%22%7D\"></card><h5 id=\"a395b613\" data-lake-id=\"934a91b7e4e14b87af6bd5620f1e282b\">美国统一接入层</h5><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%227661da5c%22%2C%22mode%22%3A%22shell%22%2C%22code%22%3A%22curl%20-w%20%5C%22%40curl-format.txt%5C%22%20-so%20.%2Fppc.html%20https%3A%2F%2F205.204.101.142%2Fppc%2Fmp3.html%20-H%20%5C%22Host%3A%20www.alibaba.com%5C%22%20--insecure%22%7D\"></card><p data-lake-id=\"8ad86783e5a7fa0b44fa18d5478265a8\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%220112856f%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22time_namelookup%3A%20%200.005029%5Cn%20%20%20%20%20%20time_connect%3A%20%200.161610%20(TCP%20handshake)%5Cn%20%20%20time_appconnect%3A%20%200.806566%20(SSL%20handshake)%5Cn%20%20time_pretransfer%3A%20%200.806884%5Cn%20%20%20%20%C2%A6time_redirect%3A%20%200.000000%5Cntime_starttransfer%3A%20%201.830675%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20----------%5Cn%20%20%20%20%20%20%20%20time_total%3A%20%208.795626%22%7D\"></card><p data-lake-id=\"961aa78b8b862a7c265f2563e2d0dd40\"><br /></p><p data-lake-id=\"1318ccdfcf76f2d3a91ea26b0ae60d36\">后端 RT = 1561456655052-1561456654266 = 786</p><p data-lake-id=\"17ec1c9a32cce8bc39dfbd06e6a9fac3\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22id%22%3A%22ec53cd8c%22%2C%22mode%22%3A%22shell%22%2C%22code%22%3A%22TTFB%20-%20RTT%20-%20RT%20%3D%201024%20-%20156%20-%20786%20%3D%2082%5Cn%5CnTTFB%20-%20RT%20%3D%201024%20-%20786%20%3D%20238%22%7D\"></card><h5 id=\"4f641c3c\" data-lake-id=\"6d20dd90bdbbe6666bd327bee64d3240\">单点测试结论</h5><p data-lake-id=\"c9acf22b153fcf1285a40e21324feabc\">可以看到 Akamai 的动态加速实际上使 TTFB - RT - RTT 的时间更长了（因为 CDN 节点本身的 RTT 短），同时 TTFB - RT 也变长了（CDN 会 buffer 一定量的数据才返回）。<strong>然而总体的传输时间从 8.7s 降低到了 1.8s。</strong></p><p data-lake-id=\"8663160ff9496024b8dff2f499f0fc4c\"><br /></p><p data-lake-id=\"39708cec3f75d8d8f6aef8697f0c5a30\">这和我们之前对首屏的观测也是一致的，动态加速拉长了 TTFB，但总体首屏是下降的。因为用户是要下载一定有效的内容才能真正进行渲染。</p><p data-lake-id=\"e177f53df346d4b8ed6b012ac905c9ea\"><br /></p><p data-lake-id=\"d82e22ccffc250a285b10aea6b016754\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585796879410-eb31a3ce-3064-4d5d-8c94-18dacb1c2770.png%22%2C%22originWidth%22%3A1742%2C%22originHeight%22%3A484%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A1742%2C%22height%22%3A484%7D\"></card></p><h2 id=\"54bbba80\" data-lake-id=\"14da2a25cb21b518fa67dba65797f330\">结论</h2><p data-lake-id=\"7ad67adff38b8bc1a752e3b7aa2ebeaf\">TTFB 是一个非常重要的网站性能指标，能够在前端比较客观的反应出后端的耗时。<strong>但是 First Byte 是无法渲染出任何东西的</strong>，我们用 TTFB 来侧面衡量网站的后端耗时<strong>不代表 TTFB 越短越好</strong>。</p><p data-lake-id=\"582d6ac763504c0476b424a11c8733cb\"><br /></p><p data-lake-id=\"71778315b60ca3304eb6a8d9ab7b40a4\">在有些场景下我们使用的一些优化手段让 First Byte 刻意晚了一些（gzip 内容，buffer 一定的内容再开始传输等），这个时候 TTFB 作为一个侧面印证的指标就不是那么的精确了，在这种场景下 TTFB 失去了原本的含义，不需要过于纠结。</p><p data-lake-id=\"0b20a752ccf04af42c2d56832b37a1fd\"><br /></p><p data-lake-id=\"61eb187668e9d090a4e4388bc77ad4ff\">如果可能的话，还是把 ServerRT 的耗时尽可能也带到前端来参与统计。</p><h2 id=\"3b40e721\" data-lake-id=\"585950afedef52a8022e41a0989abea8\">拓展阅读</h2><ul data-lake-id=\"56444255becbffe5635b98289741de19\"><li data-lake-id=\"497b6cf156fd214b401e7a09cbf7acef\"><a href=\"https://blog.cloudflare.com/ttfb-time-to-first-byte-considered-meaningles/\" target=\"_blank\">Stop worrying about Time To First Byte (TTFB)</a></li><li data-lake-id=\"b4ee745a50951a5224ead195ea839980\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Server-Timing\" target=\"_blank\">Server-Timing</a></li><li data-lake-id=\"5339bc95b7c83176445739d762eb0644\"><a href=\"https://en.wikipedia.org/wiki/Round-trip_delay_time\" target=\"_blank\">Round-trip delay time</a></li></ul>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-04-02T03:21:58.000Z",
    "deleted_at": null,
    "created_at": "2020-04-02T03:07:55.000Z",
    "updated_at": "2020-04-02T03:21:58.000Z",
    "published_at": "2020-04-02T03:21:58.000Z",
    "first_published_at": "2020-04-02T03:21:58.000Z",
    "word_count": 2137,
    "cover": "https://cdn.nlark.com/yuque/0/2020/png/236311/1585797190134-89e36276-31aa-487b-978d-5c9065ffc621.png",
    "description": "TTFB （Time to First Byte）是指客户端从发起请求到接收到服务器响应的第一个字节的时间，是反应网站性能的一个重要指标 。由于网页的下载时间受到页面体积，客户端带宽等影响更大，TTFB 一般来说能够更好的反应服务端的性能。精确定义上面说\"从发起请求到接收到服务器响应的第一个字...",
    "custom_description": "TTFB （Time to First Byte）是指客户端从发起请求到接收到服务器响应的第一个字节的时间，是反应网站性能的一个重要指标 。由于网页的下载时间受到页面体积，客户端带宽等影响更大，TTFB 一般来说能够更好的反应服务端的性能。",
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 5791309,
    "slug": "why-so-slow-redirect",
    "title": "Redirect 为什么这么慢",
    "book_id": 653495,
    "book": {
      "id": 653495,
      "type": "Column",
      "slug": "blog",
      "name": "blog",
      "user_id": 236311,
      "description": "",
      "creator_id": 236311,
      "public": 0,
      "items_count": 7,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-04-06T15:07:10.653Z",
      "updated_at": "2020-04-06T15:07:10.000Z",
      "created_at": "2019-12-24T14:26:42.000Z",
      "namespace": "xcodebuild/blog",
      "user": {
        "id": 236311,
        "type": "User",
        "login": "xcodebuild",
        "name": "xcodebuIld",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/236311/1546508350871-89a1db68-50d3-4776-9b7b-97ba81a8dfbe.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 0,
        "created_at": "2019-01-03T03:16:21.000Z",
        "updated_at": "2020-03-23T08:18:51.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 236311,
    "creator": {
      "id": 236311,
      "type": "User",
      "login": "xcodebuild",
      "name": "xcodebuIld",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/236311/1546508350871-89a1db68-50d3-4776-9b7b-97ba81a8dfbe.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 0,
      "created_at": "2019-01-03T03:16:21.000Z",
      "updated_at": "2020-03-23T08:18:51.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "我们有个非常经典的面试题，叫做《从用户按下回车到看到页面的过程中，都发生了什么》。<br />\n<br />很多人都知道浏览器拿到 URL 后要解析域名，建立 TCP 连接、SSL 握手、等待后端响应等。当其中有个非常容易被忽略的环节： `Redirect`。<br />\n<br />只是一张比较常见的 `Performance Model` 的分析图，紧跟着 `navigationStart` 的第一步其实就是 `redirect`。<br />\n<br />更加精准的说，我们一般从监控层面统计到的 `redirect` 耗时是 `fetchStart - navigationStart` 的耗时。（后面会解释为什么不是 `redirectEnd-redirectStart` ）。<br />\n<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773901-e9ed7c39-8d5f-46a3-938b-233b54b4c798.png#align=left&display=inline&height=278&name=image.png&originHeight=555&originWidth=912&size=53689&status=done&style=none&width=456)<br />\n\n<a name=\"QaAlr\"></a>\n## 什么是 redirect\n`redirect` 一般是指** HTTP 重定向**，例如常见的  `302/301` 等。<br />\n<br />一个常见的例子例如当我们访问  `https://baidu.com` 时就会发现连接自动变成了 `https://www.baidu.com` ，实际上是服务端响应 `302` 让浏览器重定向到了 `https://www.baidu.com` 。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773913-c1e0c9f8-6998-4874-8793-715091f01dbf.png#align=left&display=inline&height=184&name=image.png&originHeight=292&originWidth=571&size=61031&status=done&style=none&width=360)<br />而这个阶段实际上是非常耗时的，相比于直接访问 `https://www.baidu.com` 来说，相当于空走了一个`发起请求 => 服务端响应` 的时间。<br />\n<br />我们可以通过 WebpageTest 来看一下这两者之间的区别。<br />\n<br />访问 https://baidu.com<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773941-fd3745b7-0a4f-47a2-a521-bfaa61557aa3.png#align=left&display=inline&height=138&name=image.png&originHeight=276&originWidth=1340&size=50780&status=done&style=none&width=670)<br />访问 https://www.baidu.com<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773900-b14c0816-eac7-4d71-aa2c-a2062cbb93f2.png#align=left&display=inline&height=169&name=image.png&originHeight=338&originWidth=1162&size=48980&status=done&style=none&width=581)<br />可以看到前者经过 302 相当于整整多了一个请求，看似不经意的的一次跳转让整个访问时间几乎翻倍。\n<a name=\"mOjXk\"></a>\n## 哪些情况下有 redirect\n存在 redirect 的情况有很多种，比较常见的场景有：<br />\n\n- 登录鉴权后的跳转\n- http => https 的升级重定向\n- baidu.com => www.baidu.com 这种域名重定向，也常见于移动设备上 baidu.com => m.baidu.com\n- 从 SEO 或者站外引流渠道来的流量，往往会从 Google/Facebook 等服务器 302 过来\n- 投放短链的\n\n\n<br />其中一些场景是我们可控可优化的，例如把 `baidu.com => www.baidu.com` 这种重定向使用 301 而不是 302，从 `http://alibaba.com => https://www.alibaba.com` 的过程一次重定向完成而不是 `http://alibaba.com => https://alibaba.com => https://www.alibaba.com` ，以及在运营投放中尽可能避免短链等。<br />\n<br />也有部分场景虽然在我们手中，但是没有什么优化空间的，例如登录鉴权本质上就需要请求一次后端后根据响应的结果进行跳转。<br />\n<br />同时也有部分是我们完全不可控制的，例如从 Google 重定向过来的耗时。<br />\n<br />比较典型的例如我们在 Gmail 中发送的连接<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773923-cf3372c8-4a0c-4948-86fe-177437034c87.png#align=left&display=inline&height=246&name=image.png&originHeight=492&originWidth=1088&size=243068&status=done&style=none&width=544)<br />无论发送的是原连接还是文字链接，在 Gmail 的网页版中打开都会先去 `www.google.com` 的服务器，然后 302 到我们的链接上，这个过程就会造成相当长的耗时。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773957-f74dfc4f-c901-4181-84b8-ed474cdcee44.png#align=left&display=inline&height=700&name=image.png&originHeight=1400&originWidth=2200&size=1284042&status=done&style=none&width=1100)\n<a name=\"JaAEE\"></a>\n## 前端监控如何统计 redirect\n**先放结论，前端监控无法精确统计 `redirect` 耗时，我们只能统计到 `fetchStart - navigationStart`的耗时。**<br />\n<br />原因是因为浏览器的安全策略规定了我们只能拿到同域的重定向信息，其中也包括性能信息。<br />\n<br />而看上面常见的 redirect 的场景，几乎没有场景属于同域重定向。（http://baidu.com 和 https://baidu.com 也不属于同域）。于是大部分情况下，`redirectStart` 和 `redirectEnd` 都是空值。<br />\n\n> 其实按照新的标准，如果重定向的服务端返回了 Timing-Allow-Origin Header，我们在 Performance Timing API 中也能拿到 `redirect` 相关信息。然而截止到 2020.3 为止，gmail 的跳转仍然实现这个特性。\n> <br />![](https://cdn.nlark.com/yuque/0/2020/png/236311/1585755165516-1e373148-c3f9-46f8-9b98-c47f11db0570.png#align=left&display=inline&height=325&originHeight=325&originWidth=842&size=0&status=done&style=none&width=842)\n\n\n<br />**为了方便讨论，我们把能够统计的这段不精准的 `redirect` 耗时命个名，叫 `beforeFetch` **。那么这段时间中还中还包括什么时间呢？\n<a name=\"DMmAi\"></a>\n### 浏览器打开耗时\n是的，如果用户从浏览器外（例如钉钉）打开一个连接，钉钉通知浏览器打开新标签页甚至是冷启动的时间都会被计算到 `beforeFetch` 中。<br />\n<br />经过测试，从钉钉点开链接冷启动 Chrome，在 15 寸的 MacBook 上会导致页面的 `redirect` 耗时增加 `700ms+` 。<br />\n<br />![Untitled (1).png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773947-9c793634-36c9-4adb-ae07-78052996a908.png#align=left&display=inline&height=474&name=Untitled%20%281%29.png&originHeight=474&originWidth=2322&size=119365&status=done&style=none&width=2322)<br />\n<br />而在 Chrome 打开的情况下点开一个链接，也会增加 `80ms` 。<br />\n<br />![Untitled.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773944-66306574-87d3-4b37-bdd5-a083cf238801.png#align=left&display=inline&height=172&name=Untitled.png&originHeight=172&originWidth=2062&size=50994&status=done&style=none&width=2062)<br />\n\n<a name=\"owaqU\"></a>\n### 标签页初始化时间\n同样的，初始化标签页时间也被计算在内（其实上面的 80ms 就是一种），只是平时感知不明显，如果你开着 `Auto Devtools for popup` ，在打开新标签页的情况下 `beforeFetch` 的时间也会增加的非常明显。<br />\n\n<a name=\"FXvio\"></a>\n## 如何优化\n\n- 减少可控部分的重定向，应该使用 `301` 的地方不要使用 `302` ，尽量不投放短链或者需要不必要重定向的连接\n- 固定的 302 逻辑（例如设备重定向到不同域名）可以前置到 CDN，减少耗时\n- 如果是未来即将发生的 redirect，我们可以使用 preconnect 等提前建立 redirect 的目标连接，可以参见：[TCP 建连为什么这么慢](https://www.xcodebuild.com/2020/03/26/yuque/why-so-slow-connect/)\n- `beforeFetch` 的时间在某些场景（例如邮件，推送等）场景确实会高很多，除了这些场景可能存在更多重定向外，也有可能是因为浏览器启动耗时也被统计进去了\n\n\n\n<a name=\"RQRec\"></a>\n## 参考阅读\n\n- [TCP 建连为什么这么慢](https://www.xcodebuild.com/2020/03/26/yuque/why-so-slow-connect/)\n- [Timing-Allow-Origin](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Timing-Allow-Origin)\n",
    "body_draft": "我们有个非常经典的面试题，叫做《从用户按下回车到看到页面的过程中，都发生了什么》。<br />\n<br />很多人都知道浏览器拿到 URL 后要解析域名，建立 TCP 连接、SSL 握手、等待后端响应等。当其中有个非常容易被忽略的环节： `Redirect`。<br />\n<br />只是一张比较常见的 `Performance Model` 的分析图，紧跟着 `navigationStart` 的第一步其实就是 `redirect`。<br />\n<br />更加精准的说，我们一般从监控层面统计到的 `redirect` 耗时是 `fetchStart - navigationStart` 的耗时。（后面会解释为什么不是 `redirectEnd-redirectStart` ）。<br />\n<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773901-e9ed7c39-8d5f-46a3-938b-233b54b4c798.png#align=left&display=inline&height=278&name=image.png&originHeight=555&originWidth=912&size=53689&status=done&style=none&width=456)<br />\n\n<a name=\"QaAlr\"></a>\n## 什么是 redirect\n`redirect` 一般是指** HTTP 重定向**，例如常见的  `302/301` 等。<br />\n<br />一个常见的例子例如当我们访问  `https://baidu.com` 时就会发现连接自动变成了 `https://www.baidu.com` ，实际上是服务端响应 `302` 让浏览器重定向到了 `https://www.baidu.com` 。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773913-c1e0c9f8-6998-4874-8793-715091f01dbf.png#align=left&display=inline&height=184&name=image.png&originHeight=292&originWidth=571&size=61031&status=done&style=none&width=360)<br />而这个阶段实际上是非常耗时的，相比于直接访问 `https://www.baidu.com` 来说，相当于空走了一个`发起请求 => 服务端响应` 的时间。<br />\n<br />我们可以通过 WebpageTest 来看一下这两者之间的区别。<br />\n<br />访问 https://baidu.com<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773941-fd3745b7-0a4f-47a2-a521-bfaa61557aa3.png#align=left&display=inline&height=138&name=image.png&originHeight=276&originWidth=1340&size=50780&status=done&style=none&width=670)<br />访问 https://www.baidu.com<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773900-b14c0816-eac7-4d71-aa2c-a2062cbb93f2.png#align=left&display=inline&height=169&name=image.png&originHeight=338&originWidth=1162&size=48980&status=done&style=none&width=581)<br />可以看到前者经过 302 相当于整整多了一个请求，看似不经意的的一次跳转让整个访问时间几乎翻倍。\n<a name=\"mOjXk\"></a>\n## 哪些情况下有 redirect\n存在 redirect 的情况有很多种，比较常见的场景有：<br />\n\n- 登录鉴权后的跳转\n- http => https 的升级重定向\n- baidu.com => www.baidu.com 这种域名重定向，也常见于移动设备上 baidu.com => m.baidu.com\n- 从 SEO 或者站外引流渠道来的流量，往往会从 Google/Facebook 等服务器 302 过来\n- 投放短链的\n\n\n<br />其中一些场景是我们可控可优化的，例如把 `baidu.com => www.baidu.com` 这种重定向使用 301 而不是 302，从 `http://alibaba.com => https://www.alibaba.com` 的过程一次重定向完成而不是 `http://alibaba.com => https://alibaba.com => https://www.alibaba.com` ，以及在运营投放中尽可能避免短链等。<br />\n<br />也有部分场景虽然在我们手中，但是没有什么优化空间的，例如登录鉴权本质上就需要请求一次后端后根据响应的结果进行跳转。<br />\n<br />同时也有部分是我们完全不可控制的，例如从 Google 重定向过来的耗时。<br />\n<br />比较典型的例如我们在 Gmail 中发送的连接<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773923-cf3372c8-4a0c-4948-86fe-177437034c87.png#align=left&display=inline&height=246&name=image.png&originHeight=492&originWidth=1088&size=243068&status=done&style=none&width=544)<br />无论发送的是原连接还是文字链接，在 Gmail 的网页版中打开都会先去 `www.google.com` 的服务器，然后 302 到我们的链接上，这个过程就会造成相当长的耗时。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773957-f74dfc4f-c901-4181-84b8-ed474cdcee44.png#align=left&display=inline&height=700&name=image.png&originHeight=1400&originWidth=2200&size=1284042&status=done&style=none&width=1100)\n<a name=\"JaAEE\"></a>\n## 前端监控如何统计 redirect\n**先放结论，前端监控无法精确统计 `redirect` 耗时，我们只能统计到 `fetchStart - navigationStart`的耗时。**<br />\n<br />原因是因为浏览器的安全策略规定了我们只能拿到同域的重定向信息，其中也包括性能信息。<br />\n<br />而看上面常见的 redirect 的场景，几乎没有场景属于同域重定向。（http://baidu.com 和 https://baidu.com 也不属于同域）。于是大部分情况下，`redirectStart` 和 `redirectEnd` 都是空值。<br />\n\n> 其实按照新的标准，如果重定向的服务端返回了 Timing-Allow-Origin Header，我们在 Performance Timing API 中也能拿到 `redirect` 相关信息。然而截止到 2020.3 为止，gmail 的跳转仍然实现这个特性。\n> <br />![](https://cdn.nlark.com/yuque/0/2020/png/236311/1585755165516-1e373148-c3f9-46f8-9b98-c47f11db0570.png#align=left&display=inline&height=325&originHeight=325&originWidth=842&size=0&status=done&style=none&width=842)\n\n\n<br />**为了方便讨论，我们把能够统计的这段不精准的 `redirect` 耗时命个名，叫 `beforeFetch` **。那么这段时间中还中还包括什么时间呢？\n<a name=\"DMmAi\"></a>\n### 浏览器打开耗时\n是的，如果用户从浏览器外（例如钉钉）打开一个连接，钉钉通知浏览器打开新标签页甚至是冷启动的时间都会被计算到 `beforeFetch` 中。<br />\n<br />经过测试，从钉钉点开链接冷启动 Chrome，在 15 寸的 MacBook 上会导致页面的 `redirect` 耗时增加 `700ms+` 。<br />\n<br />![Untitled (1).png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773947-9c793634-36c9-4adb-ae07-78052996a908.png#align=left&display=inline&height=474&name=Untitled%20%281%29.png&originHeight=474&originWidth=2322&size=119365&status=done&style=none&width=2322)<br />\n<br />而在 Chrome 打开的情况下点开一个链接，也会增加 `80ms` 。<br />\n<br />![Untitled.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773944-66306574-87d3-4b37-bdd5-a083cf238801.png#align=left&display=inline&height=172&name=Untitled.png&originHeight=172&originWidth=2062&size=50994&status=done&style=none&width=2062)<br />\n\n<a name=\"owaqU\"></a>\n### 标签页初始化时间\n同样的，初始化标签页时间也被计算在内（其实上面的 80ms 就是一种），只是平时感知不明显，如果你开着 `Auto Devtools for popup` ，在打开新标签页的情况下 `beforeFetch` 的时间也会增加的非常明显。<br />\n\n<a name=\"FXvio\"></a>\n## 如何优化\n\n- 减少可控部分的重定向，应该使用 `301` 的地方不要使用 `302` ，尽量不投放短链或者需要不必要重定向的连接\n- 固定的 302 逻辑（例如设备重定向到不同域名）可以前置到 CDN，减少耗时\n- 如果是未来即将发生的 redirect，我们可以使用 preconnect 等提前建立 redirect 的目标连接，可以参见：[TCP 建连为什么这么慢](https://www.xcodebuild.com/2020/03/26/yuque/why-so-slow-connect/)\n- `beforeFetch` 的时间在某些场景（例如邮件，推送等）场景确实会高很多，除了这些场景可能存在更多重定向外，也有可能是因为浏览器启动耗时也被统计进去了\n\n\n\n<a name=\"RQRec\"></a>\n## 参考阅读\n\n- [TCP 建连为什么这么慢](https://www.xcodebuild.com/2020/03/26/yuque/why-so-slow-connect/)\n- [Timing-Allow-Origin](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Timing-Allow-Origin)\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们有个非常经典的面试题，叫做《从用户按下回车到看到页面的过程中，都发生了什么》。</p><p data-lake-id=\"5067ce43eb8b9db0798d77eda7ff845c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"ce33e44aa4d3937243e960372f593c75\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">很多人都知道浏览器拿到 URL 后要解析域名，建立 TCP 连接、SSL 握手、等待后端响应等。当其中有个非常容易被忽略的环节： <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Redirect</code>。</p><p data-lake-id=\"da8b71ddc724105f323dc0034214cd18\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"666977789ee0deb2ea108d41f511d2b2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">只是一张比较常见的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Performance Model</code> 的分析图，紧跟着 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">navigationStart</code> 的第一步其实就是 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">redirect</code>。</p><p data-lake-id=\"a3c1704868809233614b524a1bb3e8d5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"47e08f891e4c59003668aa0e4023fec2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">更加精准的说，我们一般从监控层面统计到的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">redirect</code> 耗时是 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">fetchStart - navigationStart</code> 的耗时。（后面会解释为什么不是 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">redirectEnd-redirectStart</code> ）。</p><p data-lake-id=\"a2df562f35f6e569c2050e9a4c1df84a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"71473bdf0ced98b9f1d9dd6527ad4765\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773901-e9ed7c39-8d5f-46a3-938b-233b54b4c798.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773901-e9ed7c39-8d5f-46a3-938b-233b54b4c798.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 456px; height: 278px;\"></span></p><p data-lake-id=\"7385f76377fb74ff72b9501bf47fa534\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"QaAlr\" data-lake-id=\"6b4728bfc5eb2157391026087c4fa1f2\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">什么是 redirect</h2><p data-lake-id=\"8aaf10334afd5b61a9ad5178182c6da9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">redirect</code> 一般是指<strong> HTTP&nbsp;重定向</strong>，例如常见的  <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">302/301</code> 等。</p><p data-lake-id=\"086555f88cf7392a1db0bacc7902c5d2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"3018175ec397db01eb63276677718a7e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">一个常见的例子例如当我们访问  <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">https://baidu.com</code> 时就会发现连接自动变成了 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">https://www.baidu.com</code> ，实际上是服务端响应 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">302</code> 让浏览器重定向到了 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">https://www.baidu.com</code> 。</p><p data-lake-id=\"58a325d2525f889b49a0eea6b607fe34\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773913-c1e0c9f8-6998-4874-8793-715091f01dbf.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773913-c1e0c9f8-6998-4874-8793-715091f01dbf.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 360px; height: 184px;\"></span></p><p data-lake-id=\"17bb9befc133fcde060d16640fde2b58\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">而这个阶段实际上是非常耗时的，相比于直接访问 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">https://www.baidu.com</code> 来说，相当于空走了一个<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">发起请求 =&gt; 服务端响应</code> 的时间。</p><p data-lake-id=\"a1e079e6076767c3a8e12332a91c44a5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"509fa822b06b6d8afd771355110e7529\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们可以通过 WebpageTest 来看一下这两者之间的区别。</p><p data-lake-id=\"def75d38256dbb117b4abb031e36052e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"ee54c631114930d90a0b3270fed1058f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">访问 https://baidu.com</p><p data-lake-id=\"de8496c66e5bbac236723a80f06c7f6a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773941-fd3745b7-0a4f-47a2-a521-bfaa61557aa3.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773941-fd3745b7-0a4f-47a2-a521-bfaa61557aa3.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 670px; height: 138px;\"></span></p><p data-lake-id=\"88406be308544b9013d85d2af67c2145\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">访问 https://www.baidu.com</p><p data-lake-id=\"870e6f3f6198658d854da61c04ae4d9b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773900-b14c0816-eac7-4d71-aa2c-a2062cbb93f2.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773900-b14c0816-eac7-4d71-aa2c-a2062cbb93f2.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 581px; height: 169px;\"></span></p><p data-lake-id=\"644aaff6d3cd912f8e4f2dce094e8c6a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">可以看到前者经过 302 相当于整整多了一个请求，看似不经意的的一次跳转让整个访问时间几乎翻倍。</p><h2 id=\"mOjXk\" data-lake-id=\"0ca551bc87f950729f8507e15ea5e0fc\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">哪些情况下有 redirect</h2><p data-lake-id=\"4bdff36ecadc3cdf5da221033914f42b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">存在 redirect 的情况有很多种，比较常见的场景有：</p><p data-lake-id=\"2d3bd5f59a257934afd6f05684369bd0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ul data-lake-id=\"b9368d058fcdfa5b386ce6d0852e2552\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"8e90bdb40eb55527a5fa31bc6c9c8e52\">登录鉴权后的跳转</li><li data-lake-id=\"3111d6c839a303a4025c3d88a788fc03\">http =&gt; https 的升级重定向</li><li data-lake-id=\"4daeaf4c0f851e6058cd99cfc0794e19\">baidu.com =&gt; www.baidu.com 这种域名重定向，也常见于移动设备上 baidu.com =&gt; m.baidu.com</li><li data-lake-id=\"9e85482b899f8e51a5318a1b84181248\">从 SEO 或者站外引流渠道来的流量，往往会从 Google/Facebook 等服务器 302 过来</li><li data-lake-id=\"640ad985a0968d6b050088c64adb713f\">投放短链的</li></ul><p data-lake-id=\"3e9c9ed6ace0d2e50b585751ca3d8dc4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"76b1d6d207c6151cd2758daf90d7a4cf\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">其中一些场景是我们可控可优化的，例如把 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">baidu.com =&gt; www.baidu.com</code> 这种重定向使用 301 而不是 302，从 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">http://alibaba.com =&gt; https://www.alibaba.com</code> 的过程一次重定向完成而不是 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">http://alibaba.com =&gt; https://alibaba.com =&gt; https://www.alibaba.com</code> ，以及在运营投放中尽可能避免短链等。</p><p data-lake-id=\"70b0b706b55cae8005a67ce3987435ad\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"7c50ff40cbc1a88bace64aaf3e7d4423\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">也有部分场景虽然在我们手中，但是没有什么优化空间的，例如登录鉴权本质上就需要请求一次后端后根据响应的结果进行跳转。</p><p data-lake-id=\"7a84af012ac3d14e5474ffee25fb7801\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"5b01af8a1b27eece34bb53a9ec0056ca\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">同时也有部分是我们完全不可控制的，例如从 Google 重定向过来的耗时。</p><p data-lake-id=\"be34f9d0f3e58258cc9f11fa03cd276b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f0dfdbee32a9579c1dbd171e02d6e802\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">比较典型的例如我们在 Gmail 中发送的连接</p><p data-lake-id=\"6ee9ba98779e4f3e267131dc877a1abb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773923-cf3372c8-4a0c-4948-86fe-177437034c87.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773923-cf3372c8-4a0c-4948-86fe-177437034c87.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 544px; height: 246px;\"></span></p><p data-lake-id=\"d6a2ebb71e3e39c82aea7a22761c521b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">无论发送的是原连接还是文字链接，在 Gmail 的网页版中打开都会先去 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">www.google.com</code> 的服务器，然后 302 到我们的链接上，这个过程就会造成相当长的耗时。</p><p data-lake-id=\"b6c0de688ced467b4b51de8650df9143\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773957-f74dfc4f-c901-4181-84b8-ed474cdcee44.png?x-oss-process=image/resize,w_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773957-f74dfc4f-c901-4181-84b8-ed474cdcee44.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 746px; height: 475px;\"></span></p><h2 id=\"JaAEE\" data-lake-id=\"317069bfe5c0a832d0c58b65888cae0a\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">前端监控如何统计 redirect</h2><p data-lake-id=\"70b90cb11e4b9cf345e294efe1d2c57b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong>先放结论，前端监控无法精确统计 </strong><strong><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">redirect</code></strong><strong>&nbsp;耗时，我们只能统计到&nbsp;</strong><strong><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">fetchStart - navigationStart</code></strong><strong>的耗时。</strong></p><p data-lake-id=\"937db3ad732f0b50f17aedc4789aea3f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d1320afd8a8b259d2b65777c9f8eac96\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">原因是因为浏览器的安全策略规定了我们只能拿到同域的重定向信息，其中也包括性能信息。</p><p data-lake-id=\"61fac9c71cd300e6c9b5487b1711e9d7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"a39456305606512d8442f338e61974e7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">而看上面常见的 redirect 的场景，几乎没有场景属于同域重定向。（http://baidu.com 和 https://baidu.com 也不属于同域）。于是大部分情况下，<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"><span>redirectStart</span></code> 和 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"><span>redirectEnd</span></code> 都是空值。</p><p data-lake-id=\"b2e02770b82934f70340160b64a1486c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"296c625a8bb1bdada81f297709f7cca2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #6A737D;\">其实按照新的标准，如果重定向的服务端返回了 Timing-Allow-Origin Header，我们在 Performance Timing API 中也能拿到&nbsp;</span><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">redirect</code><span style=\"color: #6A737D;\">&nbsp;相关信息。然而截止到 2020.3 为止，gmail 的跳转仍然实现这个特性。</span></p><p data-lake-id=\"3fe0dca5257caeed45f52d9428353cfd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #6A737D;\"><br></span><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585755165516-1e373148-c3f9-46f8-9b98-c47f11db0570.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585755165516-1e373148-c3f9-46f8-9b98-c47f11db0570.png\" class=\"image lake-drag-image\" style=\"visibility: visible; border: none; box-shadow: none; width: 729px; height: 281px;\"></span></p></blockquote><p data-lake-id=\"9bfa559029774722fe096d31d531dd19\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"a3788bbf2194e468fb2616366c34e441\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong>为了方便讨论，我们把能够统计的这段不精准的 </strong><strong><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">redirect</code></strong><strong>&nbsp;耗时命个名，叫 </strong><strong><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">beforeFetch</code></strong><strong>&nbsp;</strong>。那么这段时间中还中还包括什么时间呢？</p><h3 id=\"DMmAi\" data-lake-id=\"606cbdf69392c302153cd91654b8228a\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">浏览器打开耗时</h3><p data-lake-id=\"0feccf961283274fe3ef04a4fed46fab\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">是的，如果用户从浏览器外（例如钉钉）打开一个连接，钉钉通知浏览器打开新标签页甚至是冷启动的时间都会被计算到 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">beforeFetch</code> 中。</p><p data-lake-id=\"580978ded5651b47bf6fd2510ea5f75d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"fd0e6a6520c4677935e86584e3613cfa\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">经过测试，从钉钉点开链接冷启动 Chrome，在 15 寸的 MacBook 上会导致页面的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">redirect</code> 耗时增加 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">700ms+</code> 。</p><p data-lake-id=\"e998aefbee4050985ef72ec48f592ea3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"60b7cbe281492f8c3c3daef46dd2239b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773947-9c793634-36c9-4adb-ae07-78052996a908.png?x-oss-process=image/resize,w_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773947-9c793634-36c9-4adb-ae07-78052996a908.png\" class=\"image lake-drag-image\" alt=\"Untitled (1).png\" title=\"Untitled (1).png\" style=\"visibility: visible; border: none; box-shadow: none; width: 746px; height: 152px;\"></span></p><p data-lake-id=\"5fb4ccba07c0e2071c712372ab549440\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"0b07401ccf092e03a256a1069d444fb0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span>而在 Chrome 打开的情况下点开一个链接，也会增加 </span><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"><span>80ms</span></code> 。</p><p data-lake-id=\"428c9d3430cd1356e34573f044ac3b72\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"71b9e6341af713b103ead013c1a47951\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773944-66306574-87d3-4b37-bdd5-a083cf238801.png?x-oss-process=image/resize,w_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773944-66306574-87d3-4b37-bdd5-a083cf238801.png\" class=\"image lake-drag-image\" alt=\"Untitled.png\" title=\"Untitled.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 746px; height: 62px;\"></span></p><p class=\"\" data-lake-id=\"ef0525ea861cbe3c9b170f11790e72d8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"owaqU\" data-lake-id=\"0b856f13c2f4e64ccb690346f7c28550\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">标签页初始化时间</h3><p data-lake-id=\"8445d995e6e08ce43a4448d87ba3ee20\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">同样的，初始化标签页时间也被计算在内（其实上面的 80ms 就是一种），只是平时感知不明显，如果你开着 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Auto Devtools for popup</code> ，在打开新标签页的情况下 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">beforeFetch</code> 的时间也会增加的非常明显。</p><p data-lake-id=\"0e744bde8c68057a2ee3a304496b496f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"FXvio\" data-lake-id=\"1fa622331e978dbacf86b69849321607\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">如何优化</h2><ul data-lake-id=\"326b82b43cf8ec182afb38ee6ac2a89c\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"56a9b4f52c2af4db6e2df627746355a0\">减少可控部分的重定向，应该使用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">301</code> 的地方不要使用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">302</code> ，尽量不投放短链或者需要不必要重定向的连接</li><li data-lake-id=\"673a2d12021c6abfccc7e538e745df91\">固定的 302 逻辑（例如设备重定向到不同域名）可以前置到 CDN，减少耗时</li><li data-lake-id=\"9de7920df7455401a9224336093e0acc\">如果是未来即将发生的&nbsp;redirect，我们可以使用&nbsp;preconnect&nbsp;等提前建立&nbsp;redirect&nbsp;的目标连接，可以参见：<a href=\"https://www.xcodebuild.com/2020/03/26/yuque/why-so-slow-connect/\" target=\"_blank\"><span>TCP 建连为什么这么慢</span></a></li><li data-lake-id=\"a5fb92188481df5c231bd2c41143b7a6\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">beforeFetch</code> 的时间在某些场景（例如邮件，推送等）场景确实会高很多，除了这些场景可能存在更多重定向外，也有可能是因为浏览器启动耗时也被统计进去了</li></ul><p data-lake-id=\"e64d0dfb8a6fd01bcff0263be80f23a8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 data-lake-id=\"91b0a91caf2fa18c5bfa444bcf1a9f6f\" id=\"RQRec\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">参考阅读</h2><ul data-lake-id=\"851feb26ccac64bfc6bc42ebf567123f\" start=\"-\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"8e01833fe228b807db811fc1181e97df\"><a href=\"https://www.xcodebuild.com/2020/03/26/yuque/why-so-slow-connect/\" target=\"_blank\">TCP 建连为什么这么慢</a></li><li data-lake-id=\"5aef3a4b46f8af577c3415e4f4ead7fa\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Timing-Allow-Origin\" target=\"_blank\">Timing-Allow-Origin</a></li></ul></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">我们有个非常经典的面试题，叫做《从用户按下回车到看到页面的过程中，都发生了什么》。</p><p data-lake-id=\"5067ce43eb8b9db0798d77eda7ff845c\"><br /></p><p data-lake-id=\"ce33e44aa4d3937243e960372f593c75\">很多人都知道浏览器拿到 URL 后要解析域名，建立 TCP 连接、SSL 握手、等待后端响应等。当其中有个非常容易被忽略的环节： <code>Redirect</code>。</p><p data-lake-id=\"da8b71ddc724105f323dc0034214cd18\"><br /></p><p data-lake-id=\"666977789ee0deb2ea108d41f511d2b2\">只是一张比较常见的 <code>Performance Model</code> 的分析图，紧跟着 <code>navigationStart</code> 的第一步其实就是 <code>redirect</code>。</p><p data-lake-id=\"a3c1704868809233614b524a1bb3e8d5\"><br /></p><p data-lake-id=\"47e08f891e4c59003668aa0e4023fec2\">更加精准的说，我们一般从监控层面统计到的 <code>redirect</code> 耗时是 <code>fetchStart - navigationStart</code> 的耗时。（后面会解释为什么不是 <code>redirectEnd-redirectStart</code> ）。</p><p data-lake-id=\"a2df562f35f6e569c2050e9a4c1df84a\"><br /></p><p data-lake-id=\"71473bdf0ced98b9f1d9dd6527ad4765\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585754773901-e9ed7c39-8d5f-46a3-938b-233b54b4c798.png%22%2C%22originWidth%22%3A912%2C%22originHeight%22%3A555%2C%22name%22%3A%22image.png%22%2C%22size%22%3A53689%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A456%2C%22height%22%3A278%7D\"></card></p><p data-lake-id=\"7385f76377fb74ff72b9501bf47fa534\"><br /></p><h2 id=\"QaAlr\" data-lake-id=\"6b4728bfc5eb2157391026087c4fa1f2\">什么是 redirect</h2><p data-lake-id=\"8aaf10334afd5b61a9ad5178182c6da9\"><code>redirect</code> 一般是指<strong> HTTP 重定向</strong>，例如常见的  <code>302/301</code> 等。</p><p data-lake-id=\"086555f88cf7392a1db0bacc7902c5d2\"><br /></p><p data-lake-id=\"3018175ec397db01eb63276677718a7e\">一个常见的例子例如当我们访问  <code>https://baidu.com</code> 时就会发现连接自动变成了 <code>https://www.baidu.com</code> ，实际上是服务端响应 <code>302</code> 让浏览器重定向到了 <code>https://www.baidu.com</code> 。</p><p data-lake-id=\"58a325d2525f889b49a0eea6b607fe34\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585754773913-c1e0c9f8-6998-4874-8793-715091f01dbf.png%22%2C%22originWidth%22%3A571%2C%22originHeight%22%3A292%2C%22name%22%3A%22image.png%22%2C%22size%22%3A61031%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A360%2C%22height%22%3A184%7D\"></card></p><p data-lake-id=\"17bb9befc133fcde060d16640fde2b58\">而这个阶段实际上是非常耗时的，相比于直接访问 <code>https://www.baidu.com</code> 来说，相当于空走了一个<code>发起请求 =&gt; 服务端响应</code> 的时间。</p><p data-lake-id=\"a1e079e6076767c3a8e12332a91c44a5\"><br /></p><p data-lake-id=\"509fa822b06b6d8afd771355110e7529\">我们可以通过 WebpageTest 来看一下这两者之间的区别。</p><p data-lake-id=\"def75d38256dbb117b4abb031e36052e\"><br /></p><p data-lake-id=\"ee54c631114930d90a0b3270fed1058f\">访问 https://baidu.com</p><p data-lake-id=\"de8496c66e5bbac236723a80f06c7f6a\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585754773941-fd3745b7-0a4f-47a2-a521-bfaa61557aa3.png%22%2C%22originWidth%22%3A1340%2C%22originHeight%22%3A276%2C%22name%22%3A%22image.png%22%2C%22size%22%3A50780%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A670%2C%22height%22%3A138%7D\"></card></p><p data-lake-id=\"88406be308544b9013d85d2af67c2145\">访问 https://www.baidu.com</p><p data-lake-id=\"870e6f3f6198658d854da61c04ae4d9b\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585754773900-b14c0816-eac7-4d71-aa2c-a2062cbb93f2.png%22%2C%22originWidth%22%3A1162%2C%22originHeight%22%3A338%2C%22name%22%3A%22image.png%22%2C%22size%22%3A48980%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A581%2C%22height%22%3A169%7D\"></card></p><p data-lake-id=\"644aaff6d3cd912f8e4f2dce094e8c6a\">可以看到前者经过 302 相当于整整多了一个请求，看似不经意的的一次跳转让整个访问时间几乎翻倍。</p><h2 id=\"mOjXk\" data-lake-id=\"0ca551bc87f950729f8507e15ea5e0fc\">哪些情况下有 redirect</h2><p data-lake-id=\"4bdff36ecadc3cdf5da221033914f42b\">存在 redirect 的情况有很多种，比较常见的场景有：</p><p data-lake-id=\"2d3bd5f59a257934afd6f05684369bd0\"><br /></p><ul data-lake-id=\"b9368d058fcdfa5b386ce6d0852e2552\"><li data-lake-id=\"8e90bdb40eb55527a5fa31bc6c9c8e52\">登录鉴权后的跳转</li><li data-lake-id=\"3111d6c839a303a4025c3d88a788fc03\">http =&gt; https 的升级重定向</li><li data-lake-id=\"4daeaf4c0f851e6058cd99cfc0794e19\">baidu.com =&gt; www.baidu.com 这种域名重定向，也常见于移动设备上 baidu.com =&gt; m.baidu.com</li><li data-lake-id=\"9e85482b899f8e51a5318a1b84181248\">从 SEO 或者站外引流渠道来的流量，往往会从 Google/Facebook 等服务器 302 过来</li><li data-lake-id=\"640ad985a0968d6b050088c64adb713f\">投放短链的</li></ul><p data-lake-id=\"3e9c9ed6ace0d2e50b585751ca3d8dc4\"><br /></p><p data-lake-id=\"76b1d6d207c6151cd2758daf90d7a4cf\">其中一些场景是我们可控可优化的，例如把 <code>baidu.com =&gt; www.baidu.com</code> 这种重定向使用 301 而不是 302，从 <code>http://alibaba.com =&gt; https://www.alibaba.com</code> 的过程一次重定向完成而不是 <code>http://alibaba.com =&gt; https://alibaba.com =&gt; https://www.alibaba.com</code> ，以及在运营投放中尽可能避免短链等。</p><p data-lake-id=\"70b0b706b55cae8005a67ce3987435ad\"><br /></p><p data-lake-id=\"7c50ff40cbc1a88bace64aaf3e7d4423\">也有部分场景虽然在我们手中，但是没有什么优化空间的，例如登录鉴权本质上就需要请求一次后端后根据响应的结果进行跳转。</p><p data-lake-id=\"7a84af012ac3d14e5474ffee25fb7801\"><br /></p><p data-lake-id=\"5b01af8a1b27eece34bb53a9ec0056ca\">同时也有部分是我们完全不可控制的，例如从 Google 重定向过来的耗时。</p><p data-lake-id=\"be34f9d0f3e58258cc9f11fa03cd276b\"><br /></p><p data-lake-id=\"f0dfdbee32a9579c1dbd171e02d6e802\">比较典型的例如我们在 Gmail 中发送的连接</p><p data-lake-id=\"6ee9ba98779e4f3e267131dc877a1abb\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585754773923-cf3372c8-4a0c-4948-86fe-177437034c87.png%22%2C%22originWidth%22%3A1088%2C%22originHeight%22%3A492%2C%22name%22%3A%22image.png%22%2C%22size%22%3A243068%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A544%2C%22height%22%3A246%7D\"></card></p><p data-lake-id=\"d6a2ebb71e3e39c82aea7a22761c521b\">无论发送的是原连接还是文字链接，在 Gmail 的网页版中打开都会先去 <code>www.google.com</code> 的服务器，然后 302 到我们的链接上，这个过程就会造成相当长的耗时。</p><p data-lake-id=\"b6c0de688ced467b4b51de8650df9143\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585754773957-f74dfc4f-c901-4181-84b8-ed474cdcee44.png%22%2C%22originWidth%22%3A2200%2C%22originHeight%22%3A1400%2C%22name%22%3A%22image.png%22%2C%22size%22%3A1284042%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A1100%2C%22height%22%3A700%7D\"></card></p><h2 id=\"JaAEE\" data-lake-id=\"317069bfe5c0a832d0c58b65888cae0a\">前端监控如何统计 redirect</h2><p data-lake-id=\"70b90cb11e4b9cf345e294efe1d2c57b\"><strong>先放结论，前端监控无法精确统计 </strong><strong><code>redirect</code></strong><strong> 耗时，我们只能统计到 </strong><strong><code>fetchStart - navigationStart</code></strong><strong>的耗时。</strong></p><p data-lake-id=\"937db3ad732f0b50f17aedc4789aea3f\"><br /></p><p data-lake-id=\"d1320afd8a8b259d2b65777c9f8eac96\">原因是因为浏览器的安全策略规定了我们只能拿到同域的重定向信息，其中也包括性能信息。</p><p data-lake-id=\"61fac9c71cd300e6c9b5487b1711e9d7\"><br /></p><p data-lake-id=\"a39456305606512d8442f338e61974e7\">而看上面常见的 redirect 的场景，几乎没有场景属于同域重定向。（http://baidu.com 和 https://baidu.com 也不属于同域）。于是大部分情况下，<code><span>redirectStart</span></code> 和 <code><span>redirectEnd</span></code> 都是空值。</p><p data-lake-id=\"b2e02770b82934f70340160b64a1486c\"><br /></p><blockquote><p data-lake-id=\"296c625a8bb1bdada81f297709f7cca2\"><span style=\"color: #6A737D;\">其实按照新的标准，如果重定向的服务端返回了 Timing-Allow-Origin Header，我们在 Performance Timing API 中也能拿到 </span><code>redirect</code><span style=\"color: #6A737D;\"> 相关信息。然而截止到 2020.3 为止，gmail 的跳转仍然实现这个特性。</span></p><p data-lake-id=\"3fe0dca5257caeed45f52d9428353cfd\"><span style=\"color: #6A737D;\"><br /></span><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585755165516-1e373148-c3f9-46f8-9b98-c47f11db0570.png%22%2C%22originWidth%22%3A842%2C%22originHeight%22%3A325%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A842%2C%22height%22%3A325%7D\"></card></p></blockquote><p data-lake-id=\"9bfa559029774722fe096d31d531dd19\"><br /></p><p data-lake-id=\"a3788bbf2194e468fb2616366c34e441\"><strong>为了方便讨论，我们把能够统计的这段不精准的 </strong><strong><code>redirect</code></strong><strong> 耗时命个名，叫 </strong><strong><code>beforeFetch</code></strong><strong> </strong>。那么这段时间中还中还包括什么时间呢？</p><h3 id=\"DMmAi\" data-lake-id=\"606cbdf69392c302153cd91654b8228a\">浏览器打开耗时</h3><p data-lake-id=\"0feccf961283274fe3ef04a4fed46fab\">是的，如果用户从浏览器外（例如钉钉）打开一个连接，钉钉通知浏览器打开新标签页甚至是冷启动的时间都会被计算到 <code>beforeFetch</code> 中。</p><p data-lake-id=\"580978ded5651b47bf6fd2510ea5f75d\"><br /></p><p data-lake-id=\"fd0e6a6520c4677935e86584e3613cfa\">经过测试，从钉钉点开链接冷启动 Chrome，在 15 寸的 MacBook 上会导致页面的 <code>redirect</code> 耗时增加 <code>700ms+</code> 。</p><p data-lake-id=\"e998aefbee4050985ef72ec48f592ea3\"><br /></p><p data-lake-id=\"60b7cbe281492f8c3c3daef46dd2239b\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585754773947-9c793634-36c9-4adb-ae07-78052996a908.png%22%2C%22originWidth%22%3A2322%2C%22originHeight%22%3A474%2C%22name%22%3A%22Untitled%20(1).png%22%2C%22size%22%3A119365%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A2322%2C%22height%22%3A474%7D\"></card></p><p data-lake-id=\"5fb4ccba07c0e2071c712372ab549440\"><br /></p><p data-lake-id=\"0b07401ccf092e03a256a1069d444fb0\"><span>而在 Chrome 打开的情况下点开一个链接，也会增加 </span><code><span>80ms</span></code> 。</p><p data-lake-id=\"428c9d3430cd1356e34573f044ac3b72\"><br /></p><p data-lake-id=\"71b9e6341af713b103ead013c1a47951\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585754773944-66306574-87d3-4b37-bdd5-a083cf238801.png%22%2C%22originWidth%22%3A2062%2C%22originHeight%22%3A172%2C%22name%22%3A%22Untitled.png%22%2C%22size%22%3A50994%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A2062%2C%22height%22%3A172%7D\"></card></p><p data-lake-id=\"ef0525ea861cbe3c9b170f11790e72d8\"><br /></p><h3 id=\"owaqU\" data-lake-id=\"0b856f13c2f4e64ccb690346f7c28550\">标签页初始化时间</h3><p data-lake-id=\"8445d995e6e08ce43a4448d87ba3ee20\">同样的，初始化标签页时间也被计算在内（其实上面的 80ms 就是一种），只是平时感知不明显，如果你开着 <code>Auto Devtools for popup</code> ，在打开新标签页的情况下 <code>beforeFetch</code> 的时间也会增加的非常明显。</p><p data-lake-id=\"0e744bde8c68057a2ee3a304496b496f\"><br /></p><h2 id=\"FXvio\" data-lake-id=\"1fa622331e978dbacf86b69849321607\">如何优化</h2><ul data-lake-id=\"326b82b43cf8ec182afb38ee6ac2a89c\"><li data-lake-id=\"56a9b4f52c2af4db6e2df627746355a0\">减少可控部分的重定向，应该使用 <code>301</code> 的地方不要使用 <code>302</code> ，尽量不投放短链或者需要不必要重定向的连接</li><li data-lake-id=\"673a2d12021c6abfccc7e538e745df91\">固定的 302 逻辑（例如设备重定向到不同域名）可以前置到 CDN，减少耗时</li><li data-lake-id=\"9de7920df7455401a9224336093e0acc\">如果是未来即将发生的 redirect，我们可以使用 preconnect 等提前建立 redirect 的目标连接，可以参见：<a href=\"https://www.xcodebuild.com/2020/03/26/yuque/why-so-slow-connect/\" target=\"_blank\"><span>TCP 建连为什么这么慢</span></a></li><li data-lake-id=\"a5fb92188481df5c231bd2c41143b7a6\"><code>beforeFetch</code> 的时间在某些场景（例如邮件，推送等）场景确实会高很多，除了这些场景可能存在更多重定向外，也有可能是因为浏览器启动耗时也被统计进去了</li></ul><p data-lake-id=\"e64d0dfb8a6fd01bcff0263be80f23a8\"><br /></p><h2 data-lake-id=\"91b0a91caf2fa18c5bfa444bcf1a9f6f\" id=\"RQRec\">参考阅读</h2><ul data-lake-id=\"851feb26ccac64bfc6bc42ebf567123f\"><li data-lake-id=\"8e01833fe228b807db811fc1181e97df\"><a href=\"https://www.xcodebuild.com/2020/03/26/yuque/why-so-slow-connect/\" target=\"_blank\">TCP 建连为什么这么慢</a></li><li data-lake-id=\"5aef3a4b46f8af577c3415e4f4ead7fa\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Timing-Allow-Origin\" target=\"_blank\">Timing-Allow-Origin</a></li></ul>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">我们有个非常经典的面试题，叫做《从用户按下回车到看到页面的过程中，都发生了什么》。</p><p data-lake-id=\"5067ce43eb8b9db0798d77eda7ff845c\"><br /></p><p data-lake-id=\"ce33e44aa4d3937243e960372f593c75\">很多人都知道浏览器拿到 URL 后要解析域名，建立 TCP 连接、SSL 握手、等待后端响应等。当其中有个非常容易被忽略的环节： <code>Redirect</code>。</p><p data-lake-id=\"da8b71ddc724105f323dc0034214cd18\"><br /></p><p data-lake-id=\"666977789ee0deb2ea108d41f511d2b2\">只是一张比较常见的 <code>Performance Model</code> 的分析图，紧跟着 <code>navigationStart</code> 的第一步其实就是 <code>redirect</code>。</p><p data-lake-id=\"a3c1704868809233614b524a1bb3e8d5\"><br /></p><p data-lake-id=\"47e08f891e4c59003668aa0e4023fec2\">更加精准的说，我们一般从监控层面统计到的 <code>redirect</code> 耗时是 <code>fetchStart - navigationStart</code> 的耗时。（后面会解释为什么不是 <code>redirectEnd-redirectStart</code> ）。</p><p data-lake-id=\"a2df562f35f6e569c2050e9a4c1df84a\"><br /></p><p data-lake-id=\"71473bdf0ced98b9f1d9dd6527ad4765\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585754773901-e9ed7c39-8d5f-46a3-938b-233b54b4c798.png%22%2C%22originWidth%22%3A912%2C%22originHeight%22%3A555%2C%22name%22%3A%22image.png%22%2C%22size%22%3A53689%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A456%2C%22height%22%3A278%7D\"></card></p><p data-lake-id=\"7385f76377fb74ff72b9501bf47fa534\"><br /></p><h2 id=\"QaAlr\" data-lake-id=\"6b4728bfc5eb2157391026087c4fa1f2\">什么是 redirect</h2><p data-lake-id=\"8aaf10334afd5b61a9ad5178182c6da9\"><code>redirect</code> 一般是指<strong> HTTP 重定向</strong>，例如常见的  <code>302/301</code> 等。</p><p data-lake-id=\"086555f88cf7392a1db0bacc7902c5d2\"><br /></p><p data-lake-id=\"3018175ec397db01eb63276677718a7e\">一个常见的例子例如当我们访问  <code>https://baidu.com</code> 时就会发现连接自动变成了 <code>https://www.baidu.com</code> ，实际上是服务端响应 <code>302</code> 让浏览器重定向到了 <code>https://www.baidu.com</code> 。</p><p data-lake-id=\"58a325d2525f889b49a0eea6b607fe34\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585754773913-c1e0c9f8-6998-4874-8793-715091f01dbf.png%22%2C%22originWidth%22%3A571%2C%22originHeight%22%3A292%2C%22name%22%3A%22image.png%22%2C%22size%22%3A61031%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A360%2C%22height%22%3A184%7D\"></card></p><p data-lake-id=\"17bb9befc133fcde060d16640fde2b58\">而这个阶段实际上是非常耗时的，相比于直接访问 <code>https://www.baidu.com</code> 来说，相当于空走了一个<code>发起请求 =&gt; 服务端响应</code> 的时间。</p><p data-lake-id=\"a1e079e6076767c3a8e12332a91c44a5\"><br /></p><p data-lake-id=\"509fa822b06b6d8afd771355110e7529\">我们可以通过 WebpageTest 来看一下这两者之间的区别。</p><p data-lake-id=\"def75d38256dbb117b4abb031e36052e\"><br /></p><p data-lake-id=\"ee54c631114930d90a0b3270fed1058f\">访问 https://baidu.com</p><p data-lake-id=\"de8496c66e5bbac236723a80f06c7f6a\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585754773941-fd3745b7-0a4f-47a2-a521-bfaa61557aa3.png%22%2C%22originWidth%22%3A1340%2C%22originHeight%22%3A276%2C%22name%22%3A%22image.png%22%2C%22size%22%3A50780%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A670%2C%22height%22%3A138%7D\"></card></p><p data-lake-id=\"88406be308544b9013d85d2af67c2145\">访问 https://www.baidu.com</p><p data-lake-id=\"870e6f3f6198658d854da61c04ae4d9b\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585754773900-b14c0816-eac7-4d71-aa2c-a2062cbb93f2.png%22%2C%22originWidth%22%3A1162%2C%22originHeight%22%3A338%2C%22name%22%3A%22image.png%22%2C%22size%22%3A48980%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A581%2C%22height%22%3A169%7D\"></card></p><p data-lake-id=\"644aaff6d3cd912f8e4f2dce094e8c6a\">可以看到前者经过 302 相当于整整多了一个请求，看似不经意的的一次跳转让整个访问时间几乎翻倍。</p><h2 id=\"mOjXk\" data-lake-id=\"0ca551bc87f950729f8507e15ea5e0fc\">哪些情况下有 redirect</h2><p data-lake-id=\"4bdff36ecadc3cdf5da221033914f42b\">存在 redirect 的情况有很多种，比较常见的场景有：</p><p data-lake-id=\"2d3bd5f59a257934afd6f05684369bd0\"><br /></p><ul data-lake-id=\"b9368d058fcdfa5b386ce6d0852e2552\"><li data-lake-id=\"8e90bdb40eb55527a5fa31bc6c9c8e52\">登录鉴权后的跳转</li><li data-lake-id=\"3111d6c839a303a4025c3d88a788fc03\">http =&gt; https 的升级重定向</li><li data-lake-id=\"4daeaf4c0f851e6058cd99cfc0794e19\">baidu.com =&gt; www.baidu.com 这种域名重定向，也常见于移动设备上 baidu.com =&gt; m.baidu.com</li><li data-lake-id=\"9e85482b899f8e51a5318a1b84181248\">从 SEO 或者站外引流渠道来的流量，往往会从 Google/Facebook 等服务器 302 过来</li><li data-lake-id=\"640ad985a0968d6b050088c64adb713f\">投放短链的</li></ul><p data-lake-id=\"3e9c9ed6ace0d2e50b585751ca3d8dc4\"><br /></p><p data-lake-id=\"76b1d6d207c6151cd2758daf90d7a4cf\">其中一些场景是我们可控可优化的，例如把 <code>baidu.com =&gt; www.baidu.com</code> 这种重定向使用 301 而不是 302，从 <code>http://alibaba.com =&gt; https://www.alibaba.com</code> 的过程一次重定向完成而不是 <code>http://alibaba.com =&gt; https://alibaba.com =&gt; https://www.alibaba.com</code> ，以及在运营投放中尽可能避免短链等。</p><p data-lake-id=\"70b0b706b55cae8005a67ce3987435ad\"><br /></p><p data-lake-id=\"7c50ff40cbc1a88bace64aaf3e7d4423\">也有部分场景虽然在我们手中，但是没有什么优化空间的，例如登录鉴权本质上就需要请求一次后端后根据响应的结果进行跳转。</p><p data-lake-id=\"7a84af012ac3d14e5474ffee25fb7801\"><br /></p><p data-lake-id=\"5b01af8a1b27eece34bb53a9ec0056ca\">同时也有部分是我们完全不可控制的，例如从 Google 重定向过来的耗时。</p><p data-lake-id=\"be34f9d0f3e58258cc9f11fa03cd276b\"><br /></p><p data-lake-id=\"f0dfdbee32a9579c1dbd171e02d6e802\">比较典型的例如我们在 Gmail 中发送的连接</p><p data-lake-id=\"6ee9ba98779e4f3e267131dc877a1abb\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585754773923-cf3372c8-4a0c-4948-86fe-177437034c87.png%22%2C%22originWidth%22%3A1088%2C%22originHeight%22%3A492%2C%22name%22%3A%22image.png%22%2C%22size%22%3A243068%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A544%2C%22height%22%3A246%7D\"></card></p><p data-lake-id=\"d6a2ebb71e3e39c82aea7a22761c521b\">无论发送的是原连接还是文字链接，在 Gmail 的网页版中打开都会先去 <code>www.google.com</code> 的服务器，然后 302 到我们的链接上，这个过程就会造成相当长的耗时。</p><p data-lake-id=\"b6c0de688ced467b4b51de8650df9143\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585754773957-f74dfc4f-c901-4181-84b8-ed474cdcee44.png%22%2C%22originWidth%22%3A2200%2C%22originHeight%22%3A1400%2C%22name%22%3A%22image.png%22%2C%22size%22%3A1284042%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A1100%2C%22height%22%3A700%7D\"></card></p><h2 id=\"JaAEE\" data-lake-id=\"317069bfe5c0a832d0c58b65888cae0a\">前端监控如何统计 redirect</h2><p data-lake-id=\"70b90cb11e4b9cf345e294efe1d2c57b\"><strong>先放结论，前端监控无法精确统计 </strong><strong><code>redirect</code></strong><strong> 耗时，我们只能统计到 </strong><strong><code>fetchStart - navigationStart</code></strong><strong>的耗时。</strong></p><p data-lake-id=\"937db3ad732f0b50f17aedc4789aea3f\"><br /></p><p data-lake-id=\"d1320afd8a8b259d2b65777c9f8eac96\">原因是因为浏览器的安全策略规定了我们只能拿到同域的重定向信息，其中也包括性能信息。</p><p data-lake-id=\"61fac9c71cd300e6c9b5487b1711e9d7\"><br /></p><p data-lake-id=\"a39456305606512d8442f338e61974e7\">而看上面常见的 redirect 的场景，几乎没有场景属于同域重定向。（http://baidu.com 和 https://baidu.com 也不属于同域）。于是大部分情况下，<code><span>redirectStart</span></code> 和 <code><span>redirectEnd</span></code> 都是空值。</p><p data-lake-id=\"b2e02770b82934f70340160b64a1486c\"><br /></p><blockquote><p data-lake-id=\"296c625a8bb1bdada81f297709f7cca2\"><span style=\"color: #6A737D;\">其实按照新的标准，如果重定向的服务端返回了 Timing-Allow-Origin Header，我们在 Performance Timing API 中也能拿到 </span><code>redirect</code><span style=\"color: #6A737D;\"> 相关信息。然而截止到 2020.3 为止，gmail 的跳转仍然实现这个特性。</span></p><p data-lake-id=\"3fe0dca5257caeed45f52d9428353cfd\"><span style=\"color: #6A737D;\"><br /></span><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585755165516-1e373148-c3f9-46f8-9b98-c47f11db0570.png%22%2C%22originWidth%22%3A842%2C%22originHeight%22%3A325%2C%22size%22%3A0%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A842%2C%22height%22%3A325%7D\"></card></p></blockquote><p data-lake-id=\"9bfa559029774722fe096d31d531dd19\"><br /></p><p data-lake-id=\"a3788bbf2194e468fb2616366c34e441\"><strong>为了方便讨论，我们把能够统计的这段不精准的 </strong><strong><code>redirect</code></strong><strong> 耗时命个名，叫 </strong><strong><code>beforeFetch</code></strong><strong> </strong>。那么这段时间中还中还包括什么时间呢？</p><h3 id=\"DMmAi\" data-lake-id=\"606cbdf69392c302153cd91654b8228a\">浏览器打开耗时</h3><p data-lake-id=\"0feccf961283274fe3ef04a4fed46fab\">是的，如果用户从浏览器外（例如钉钉）打开一个连接，钉钉通知浏览器打开新标签页甚至是冷启动的时间都会被计算到 <code>beforeFetch</code> 中。</p><p data-lake-id=\"580978ded5651b47bf6fd2510ea5f75d\"><br /></p><p data-lake-id=\"fd0e6a6520c4677935e86584e3613cfa\">经过测试，从钉钉点开链接冷启动 Chrome，在 15 寸的 MacBook 上会导致页面的 <code>redirect</code> 耗时增加 <code>700ms+</code> 。</p><p data-lake-id=\"e998aefbee4050985ef72ec48f592ea3\"><br /></p><p data-lake-id=\"60b7cbe281492f8c3c3daef46dd2239b\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585754773947-9c793634-36c9-4adb-ae07-78052996a908.png%22%2C%22originWidth%22%3A2322%2C%22originHeight%22%3A474%2C%22name%22%3A%22Untitled%20(1).png%22%2C%22size%22%3A119365%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A2322%2C%22height%22%3A474%7D\"></card></p><p data-lake-id=\"5fb4ccba07c0e2071c712372ab549440\"><br /></p><p data-lake-id=\"0b07401ccf092e03a256a1069d444fb0\"><span>而在 Chrome 打开的情况下点开一个链接，也会增加 </span><code><span>80ms</span></code> 。</p><p data-lake-id=\"428c9d3430cd1356e34573f044ac3b72\"><br /></p><p data-lake-id=\"71b9e6341af713b103ead013c1a47951\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585754773944-66306574-87d3-4b37-bdd5-a083cf238801.png%22%2C%22originWidth%22%3A2062%2C%22originHeight%22%3A172%2C%22name%22%3A%22Untitled.png%22%2C%22size%22%3A50994%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A2062%2C%22height%22%3A172%7D\"></card></p><p data-lake-id=\"ef0525ea861cbe3c9b170f11790e72d8\"><br /></p><h3 id=\"owaqU\" data-lake-id=\"0b856f13c2f4e64ccb690346f7c28550\">标签页初始化时间</h3><p data-lake-id=\"8445d995e6e08ce43a4448d87ba3ee20\">同样的，初始化标签页时间也被计算在内（其实上面的 80ms 就是一种），只是平时感知不明显，如果你开着 <code>Auto Devtools for popup</code> ，在打开新标签页的情况下 <code>beforeFetch</code> 的时间也会增加的非常明显。</p><p data-lake-id=\"0e744bde8c68057a2ee3a304496b496f\"><br /></p><h2 id=\"FXvio\" data-lake-id=\"1fa622331e978dbacf86b69849321607\">如何优化</h2><ul data-lake-id=\"326b82b43cf8ec182afb38ee6ac2a89c\"><li data-lake-id=\"56a9b4f52c2af4db6e2df627746355a0\">减少可控部分的重定向，应该使用 <code>301</code> 的地方不要使用 <code>302</code> ，尽量不投放短链或者需要不必要重定向的连接</li><li data-lake-id=\"673a2d12021c6abfccc7e538e745df91\">固定的 302 逻辑（例如设备重定向到不同域名）可以前置到 CDN，减少耗时</li><li data-lake-id=\"9de7920df7455401a9224336093e0acc\">如果是未来即将发生的 redirect，我们可以使用 preconnect 等提前建立 redirect 的目标连接，可以参见：<a href=\"https://www.xcodebuild.com/2020/03/26/yuque/why-so-slow-connect/\" target=\"_blank\"><span>TCP 建连为什么这么慢</span></a></li><li data-lake-id=\"a5fb92188481df5c231bd2c41143b7a6\"><code>beforeFetch</code> 的时间在某些场景（例如邮件，推送等）场景确实会高很多，除了这些场景可能存在更多重定向外，也有可能是因为浏览器启动耗时也被统计进去了</li></ul><p data-lake-id=\"e64d0dfb8a6fd01bcff0263be80f23a8\"><br /></p><h2 data-lake-id=\"91b0a91caf2fa18c5bfa444bcf1a9f6f\" id=\"RQRec\">参考阅读</h2><ul data-lake-id=\"851feb26ccac64bfc6bc42ebf567123f\"><li data-lake-id=\"8e01833fe228b807db811fc1181e97df\"><a href=\"https://www.xcodebuild.com/2020/03/26/yuque/why-so-slow-connect/\" target=\"_blank\">TCP 建连为什么这么慢</a></li><li data-lake-id=\"5aef3a4b46f8af577c3415e4f4ead7fa\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Timing-Allow-Origin\" target=\"_blank\">Timing-Allow-Origin</a></li></ul>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-04-01T15:39:42.000Z",
    "deleted_at": null,
    "created_at": "2020-04-01T15:28:57.000Z",
    "updated_at": "2020-04-01T15:39:43.000Z",
    "published_at": "2020-04-01T15:39:42.000Z",
    "first_published_at": "2020-04-01T15:39:42.000Z",
    "word_count": 1366,
    "cover": "https://cdn.nlark.com/yuque/0/2020/png/236311/1585754773901-e9ed7c39-8d5f-46a3-938b-233b54b4c798.png",
    "description": "我们有个非常经典的面试题，叫做《从用户按下回车到看到页面的过程中，都发生了什么》。很多人都知道浏览器拿到 URL 后要解析域名，建立 TCP 连接、SSL 握手、等待后端响应等。当其中有个非常容易被忽略的环节： Redirect。只是一张比较常见的 Performance Model 的分析图...",
    "custom_description": "Redirect（重定向）是一个非常常见却容易被忽略的耗时阶段，直接影响我们页面的性能和体验。本文会介绍这个阶段的耗时从何而来，又该如何优化。",
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 5599955,
    "slug": "why-so-slow-connect",
    "title": "TCP 建连为什么这么慢",
    "book_id": 653495,
    "book": {
      "id": 653495,
      "type": "Column",
      "slug": "blog",
      "name": "blog",
      "user_id": 236311,
      "description": "",
      "creator_id": 236311,
      "public": 0,
      "items_count": 7,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-04-06T15:07:10.653Z",
      "updated_at": "2020-04-06T15:07:10.000Z",
      "created_at": "2019-12-24T14:26:42.000Z",
      "namespace": "xcodebuild/blog",
      "user": {
        "id": 236311,
        "type": "User",
        "login": "xcodebuild",
        "name": "xcodebuIld",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/236311/1546508350871-89a1db68-50d3-4776-9b7b-97ba81a8dfbe.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 0,
        "created_at": "2019-01-03T03:16:21.000Z",
        "updated_at": "2020-03-23T08:18:51.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 236311,
    "creator": {
      "id": 236311,
      "type": "User",
      "login": "xcodebuild",
      "name": "xcodebuIld",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/236311/1546508350871-89a1db68-50d3-4776-9b7b-97ba81a8dfbe.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 0,
      "created_at": "2019-01-03T03:16:21.000Z",
      "updated_at": "2020-03-23T08:18:51.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "我们都知道 `HTTP` 是基于 `TCP` 的，而 `TCP` 是面向连接的。当我们向服务器请求一个页面时，首先需要建立 `TCP` 连接，才能开始真正开始传输内容。<br />\n<br />这个时间平时不容易被人察觉，因为开发场景下我们往往不需要重新建立连接。但是在有些场景（尤其是新用户场景、landing page 等）却会对页面的性能造成很大的影响。<br />\n<br />图中 TCP 的部分为我们常说的建连时间（这里包含了 SSL 握手时间，下文的建连时间也指的是这段时间），前面的 DNS 时间往往和建连时间同时出现，后面会讲到这一点。<br />\n<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1584964408688-4c021c34-501c-408c-a704-1f30656ccbb1.png#align=left&display=inline&height=383&name=image.png&originHeight=879&originWidth=1473&size=106021&status=done&style=none&width=641)\n<a name=\"7I6OJ\"></a>\n## 建连应该耗时多久\n<a name=\"ppSgn\"></a>\n### RTT\n在介绍建连的耗时之前，我们先介绍一下 `RTT(Round-Trip Time)` 的概念。RTT，即往返时延。指的是从发送端发送数据开始，到发送端收到来自接收端的确认（ACK）的时间。一般来说这个时间是由物理距离，网络传输路径等决定的。<br />\n<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1584964922127-65173f15-e1ec-4fb1-ade1-74b65cfc8e8e.png#align=left&display=inline&height=292&name=image.png&originHeight=584&originWidth=720&size=197676&status=done&style=none&width=360)<br />\n\n<a name=\"IaUYe\"></a>\n### RTT 一般是多久\n最简单的方式就是 Ping 一下，我们在 Ping 的时候看到的 `time=xxms`  一般**接近于一个 RTT**<br />**\n```bash\nPING 115.239.211.112 (115.239.211.112): 56 data bytes\n64 bytes from 115.239.211.112: icmp_seq=0 ttl=55 time=4.411 ms\n```\n\n<br />实际上就是一来一回（下面是 `tcpdump` 抓到的 `ping` ）：\n```bash\n11:59:42.631275 IP 30.38.61.21 > 115.239.211.112: ICMP echo request, id 11482, seq 0, length 64\n11:59:42.635593 IP 115.239.211.112 > 30.38.61.21: ICMP echo reply, id 11482, seq 0, length 64\n```\n<a name=\"ORwmh\"></a>\n### 建连需要多少个 RTT\nTCP 一种面向连接的通讯协议，在两个目标间发送 TCP 数据之前，TCP 需要通过三次握手建立起连接。而这个连接的过程其实是在交换一些初始数据，其中最重要的是 Sequence Number。<br />\n<br />很多地方尝试用各种看起来形象的比喻来形容三次握手，但是实际上握手的过程非常简单，为了避免造成错误的理解，我们就平铺直叙，后面会解释为什么一定要经过三次握手才能建立起连接。三次握手的过程如下：<br />\n\n1. 客户端向服务端发送 SYN，传输 seq = X\n1. 服务端向客户端发送 ACK X+1，表示收到，客户端可以从 X+1 作为 seq 发送消息。同时发送 SYN，seq = Y，把自己设置成 established 状态（可接收数据）\n1. 客户端向服务端发送 ACK Y+1，表示收到，服务端可以从 Y+1 作为 seq 发送消息，，把自己设置成 established 状态（可接收数据）\n\n\n<br />**到了第三步客户端发送完 ACK 后就认为连接已经建立完毕（毕竟不会有第四个 ACK 再告诉它已经收到了 ACK），然后开始把应用层的数据（HTTP 报文）开始传输。而服务器端则是收到这个 ACK 后才会开始把收到的数据交付给应用层（HTTP）。**<br />**<br />**所以在这个过程中，客户端在建连上话费的时间是一个 RTT。**<br />\n<br />这种情况说的是纯粹的 `Connect` 时间，不包括 `SSL` ，所以只是对 `http` 协议而言的，如果是 `https` 协议还需要再考虑 SSL 握手的时间，我们后续会在别的文章中介绍。\n<a name=\"guKHx\"></a>\n#### 动手试试\n我们可以使用 `WireShark` 来抓取一次  `http` 请求来看看建连的过程。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1584966581339-1ff4f09d-c1dc-4dab-a0ef-636e942cf5fa.png#align=left&display=inline&height=597&name=image.png&originHeight=1194&originWidth=2192&size=1880284&status=done&style=none&width=1096)<br />可以看到这里从发起 `seq` 到收到 `ack` （经过 1 `RTT` ）后，客户端就没有再等待直接发起了 `GET / HTTP/1.1` 的请求。\n<a name=\"tmNZ6\"></a>\n## 如何优化建连时间\n<a name=\"vhZdc\"></a>\n### 例子\n我们用一个简单的页面看看建连对网页性能的影响：[https://xcodebuild.github.io/why-so-slow/connect/index.html](https://xcodebuild.github.io/why-so-slow/connect/index.html)<br />\n\n> 这是一个测试页面，源代码托管在：[https://github.com/xcodebuild/why-so-slow/blob/master/connect/index.html](https://github.com/xcodebuild/why-so-slow/blob/master/connect/index.html)\n\n\n<br />就像上面说的，我们在开发场景下往往不需要重新连接，包括 `Disable Cache` 是不会禁用 `TCP` 的连接复用的，所以我们使用 [Webpage Test](https://www.webpagetest.org/) 来看一下这个页面的性能状况。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585020683958-c843ada1-7492-44d1-8c71-e65389fb9850.png#align=left&display=inline&height=582&name=image.png&originHeight=1164&originWidth=1910&size=229615&status=done&style=none&width=955)<br />\n<br />我们可以看到这这个页面的 JavaScript 文件以及后面的 `fetch` 请求都有个很长的 `DNS + Connect + SSL` 时间。因为他们的域名不同，所以需要重新解析域名。不是同一个 TCP 连接，所以需要重新建连（包括 SSL 握手）。<br />\n<br />在图中这个 `fetch` 请求的 `Connect + SSL` 一共耗时 `500ms` ，意味着用户必须等待这个建连完成后才能真正发起这个请求。\n<a name=\"zlxEH\"></a>\n### pre-connect\n为了解决上面这种问题，Chrome 引入了 [`Preconnect`](https://web.dev/uses-rel-preconnect/) （现在大部分浏览器都是支持的）。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585102598647-3d2dd3b0-fbfc-4bbc-99f5-10debdf6ee91.png#align=left&display=inline&height=150&name=image.png&originHeight=300&originWidth=736&size=76442&status=done&style=none&width=368)<br />我们可以在页面的 `<head>` 中加入\n```html\n<link rel=\"preconnect\" href=\"https://www.mocky.io\" crossorigin>\n```\n\n<br />来告知浏览器提前建立连接。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585043302410-4fc5bf0c-b9f3-45ef-bba2-3ebbe7ce0ce0.png#align=left&display=inline&height=269&name=image.png&originHeight=538&originWidth=1994&size=401496&status=done&style=none&width=997)<br />可以看到这种情况下，我们在 JS 加载后前（实际上 `fetch` 这个时候才能开始执行），就开始建立连接。同时 `preconnect` 也附带着让浏览器提前进行了 DNS 解析。\n<a name=\"QIrav\"></a>\n### 连接复用\n当然如果直接使用同一个连接，即使不使用 `pre-connect` 就能天然减少额外的连接次数。\n<a name=\"cSppd\"></a>\n#### 域名收拢\n在 HTTP 1 时代，为了解决阻塞的问题，很多网站都做了分散域名的优化让多个请求可以并行加载。而在 HTTP 2 普及后，已经具备了连接复用的能力，使用多个分散的域名只会让我们消耗更高的连接成本。<br />\n<br />所以尽可能把域名收拢到相同域名，可以尽可能的减少建连的耗时。\n<a name=\"SbrZd\"></a>\n#### IP 收拢\n我们都知道，一个 TCP 连接是由一个四元组组成的（源 IP、源端口、目标 IP、目标端口），和域名其实没有关系。所以看起来很反直觉的一点是，当两个请求域名不同，但来自同一个 IP 时，同样可以复用连接（虽然会额外解析一次 DNS）。<br />\n<br />如果我们试用了类似于阿里云全站加速的技术，把页面和静态资源的 IP 指向同一个可以帮助我们减少重复的连接建立。\n<a name=\"7UdXx\"></a>\n### 连接为什么不复用\n<a name=\"8RMHh\"></a>\n#### 如何确定一个连接\n看起来无论是 `pre-connect` 还是链接复用都非常简单，但实际应用中并非如此。由于一些浏览器安全策略，不同的连接之间复用会受到一些限制。<br />\n<br />在 [https://fetch.spec.whatwg.org/#cors-protocol-and-credentials](https://fetch.spec.whatwg.org/#cors-protocol-and-credentials) 我们可以看到<br />\n\n> A user agent has an associated connection pool. A connection pool consists of zero or more connections. Each connection is identified by an origin (an origin) and credentials (a boolean).\n\n\n<br />即一个连接是由 `origin` 和 `credentials` 确定的，这里的 `origin` 并非单纯是指我们加载的连接的 `origin` ，而是对于页面上不同的资源来说，会遵循不同的策略（详细的策略见 [https://html.spec.whatwg.org/multipage/origin.html#concept-origin](https://html.spec.whatwg.org/multipage/origin.html#concept-origin)）。<br />\n<br />例如对于图像而言（其实对于 `script/css` 等来说也是一样的）\n> For images of `[img](https://html.spec.whatwg.org/multipage/embedded-content.html#the-img-element)` elements\n> If the [image data](https://html.spec.whatwg.org/multipage/images.html#img-req-data) is [CORS-cross-origin](https://html.spec.whatwg.org/multipage/urls-and-fetching.html#cors-cross-origin)\n> A unique [opaque origin](https://html.spec.whatwg.org/multipage/origin.html#concept-origin-opaque) assigned when the image is created.\n> If the [image data](https://html.spec.whatwg.org/multipage/images.html#img-req-data) is [CORS-same-origin](https://html.spec.whatwg.org/multipage/urls-and-fetching.html#cors-same-origin)\n> The `[img](https://html.spec.whatwg.org/multipage/embedded-content.html#the-img-element)` element's [node document](https://dom.spec.whatwg.org/#concept-node-document)'s [origin](https://html.spec.whatwg.org/multipage/origin.html#concept-origin).\n\n\n<br />即在有 `crossorigin` 时（不是单纯的是另外一个域名时），则其 `origin` 是图片的 `origin` 。<br />如果没有（一般来说是没有的），则 `origin` 是页面相同的 `origin` 。<br />\n<br />这意味着对于 `cors` 和 `non-cors` 的请求、`credentials=true` 和 `credentials=false` 的请求来说，他们的连接是不能复用的。<br />\n<br />例如 [https://xcodebuild.github.io/why-so-slow/connect/cors-non-cors.html](https://xcodebuild.github.io/why-so-slow/connect/cors-non-cors.html) 这个页面中，有四个来自同一个域名的 `img` ，但是后面两个是 `crossorigin` 的\n```html\n<img src=\"https://i.picsum.photos/id/1061/200/200.jpg\"/>\n<img src=\"https://i.picsum.photos/id/1061/200/300.jpg\"/>\n<img src=\"https://i.picsum.photos/id/1061/100/300.jpg\" crossorigin/>\n<img src=\"https://i.picsum.photos/id/1061/300/300.jpg\" crossorigin/>\n```\n\n<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585190581512-5105a07b-5871-4d57-ac19-829f926b978c.png#align=left&display=inline&height=458&name=image.png&originHeight=916&originWidth=1924&size=538733&status=done&style=none&width=962)<br />这样就会发现前面两个和后面两个分别能够复用连接，但是 `cors` 的和 `non-cors` 的不能复用连接。\n> 其实这里如果有 crossorigin=\"use-credentials\"，其和 cors 也不能复用连接\n\n具体这么做的原因主要是为了安全考虑，在 [https://github.com/whatwg/fetch/issues/341](https://github.com/whatwg/fetch/issues/341) 中有提到，在这里不展开。\n<a name=\"0RLnO\"></a>\n#### 怎么避免不复用\n知道了怎么确定一个连接后，我们就知道怎么避免连接没有复用的问题。无论是我们尝试让两个请求复用一个连接还是通过 `preconnect` 去提前建连，都应该保持其 `cors` 和 `credentials` 的一致性。<br />\n<br />由于实际规则其实蛮复杂的，并不能保证我们总是能判断策略是否符合预期，**还是建议通过 `WebPageTest` 等工具验证是否有多余的建连。**<br />\n<br />当然通过 Chrome Devtools 也能够验证这一点，我们可以在 Network 面板打开 `Connection ID` ，可以看到不同的连接使用的 `Connection ID` 是不同的。<br />\n<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585191129731-7ff634e7-4184-4de0-98a0-d3339c388644.png#align=left&display=inline&height=101&name=image.png&originHeight=202&originWidth=2012&size=181126&status=done&style=none&width=1006)\n<a name=\"EyboO\"></a>\n## 为什么要握手\n为什么一定要先握手才能发送 HTTP 报文呢？这是由 TCP 本身的设计决定的，TCP 是一种可靠的传输层通信协议。所谓可靠，就是能保证数据流的顺序和完整性。\n<a name=\"qVj1E\"></a>\n### ISN\nTCP 本身在网络层（IP 协议）的上层，应用层的下层（HTTP 协议）。当应用层发起请求时，把包传给 TCP，TCP 将其分割成合适的大小，将其传递给网络层。<br />\n<br />为了保证不丢包，TCP 会给每一个包一个序号，接收端接受到后返回响应的确认消息。如果在合理的时间内没有收到确认，发送端则会认为发生了丢包，会尝试重新发送。<br />\n<br />而作为接收端，收到的包可能是乱序的（网络层不保证传输顺序）或者重复的（例如上面重新发送的时候就会重复），就会按照接收方的序号重新组建传输包的内容，然后将其交付给应用层。<br />\n<br />理解了 TCP 保证顺序和完整性的原理，就理解了 TCP 包的序号（Sequence Number**）**的重要性，而 TCP 握手时就是为了相互交换初始序列号（ISN，Inital Sequence Number**），**从而保证互相收到的包都能够保持正确的顺序。\n<a name=\"MZ1LO\"></a>\n#### 为什么不能用固定值\n从 ISN 的使用场景很自然可以想到，只要我们统一用一个固定值（例如0）作为 ISN，不就可以直接避免握手的性能损耗了么？<br />\n\n<a name=\"Uj6iu\"></a>\n##### 避免相邻的 TCP 连接互相干扰\n假设我们把 ISN 统一设置为 0，当我们的客户端和一个服务器建立起连接后传输了一部分数据包后，突然网络中断了，这个时候他们之间重新建立起连接，ISN 仍然为 0。<br />\n<br />这个时候服务器端可能同时收到序号为 N 的包，但却无从判断这个包属于哪一个 TCP 连接。\n<a name=\"RPdQe\"></a>\n### 结论\nTCP 为了确保能够把数据按照正确顺序、完整的发送给目标，必须通过握手同步 ISN。而由于 TCP 是全双工的（即双向通信），握手至少需要三次才能完成。<br />\n<br />其实对于客户端（浏览器）来说，从发送 ACK 到接受到 SYN-ACK 的过程就已经完成了 TCP 的建连，此时就可以开始给服务器端传输数据了。\n<a name=\"CeCLZ\"></a>\n## 能不能更快一点\n<a name=\"IPdfI\"></a>\n### TCP Fast Open\nTCP 协议每次都要等待 SYN-ACK+SYN-ACK 后，服务端的 TCP 才会把接收到的数据包传输给应用层，这样当连接不稳定时总是需要重新建立连接。那么，为什么不直接在第一次传输 SYN 时直接发送数据呢？<br />\n<br />事实上在 TCP 上有一个拓展标准是支持这么做的，称之为 TCP Fast Open，在 TFO 第一次建立连接时和正常的三次握手是相同的，但客户端会额外拿到一个 TFO Cookie。而当之后再重新建立连接（例如说断网后重连，或者移动设备切换网络登）时，则直接由 SYN 携带 TFO Cookie 和数据发送。服务端收到校验 Cookie 有效直接把数据交付给应用层。<br />\n<br />然而 TFO 并没有在所有的客户端和服务端默认打开，目前绝大多数浏览器都是不支持的，而且由于 TCP 作为协议层由操作系统实现，无法由应用层的浏览器、客户端等自由控制。\n<a name=\"Yk40Q\"></a>\n### QUIC/HTTP3\nQUIC 和 HTTP3 也解决了建连耗时的问题，不在本文展开，后续会在其他文章介绍。\n<a name=\"M0DPI\"></a>\n## 总结\n由于 HTTP 是基于 TCP 的，而 TCP 为了可靠性是面向连接的，需要通过三次握手建立连接。<br />\n<br />在 HTTP2 后我们有了多路复用可以让多个请求在一个连接中进行，但是连接的复用并不是单纯由域名决定的，同一个域名的连接可能不能复用一个连接，而不同的域名其实也可能复用一个连接。我们需要尽可能确定连接被正确的复用了。如果使用了 CDN 技术，我们可以尝试让页面和资源使用相同的 IP 从而复用链接。<br />\n<br />除此之外，我们可以使用 `preconnect` 来提前建连，同样的，也需要确定这个提前建立的连接被正确复用了。这对于即将发起的请求、即将到来的 `redirect` 等非常有效。<br />\n<a name=\"MzPEp\"></a>\n## 拓展阅读\n\n- [preconnect resource hint and the crossorigin attribute](https://crenshaw.dev/preconnect-resource-hint-crossorigin-attribute/)\n- [https://github.com/whatwg/fetch/issues/341](https://github.com/whatwg/fetch/issues/341)\n",
    "body_draft": "我们都知道 `HTTP` 是基于 `TCP` 的，而 `TCP` 是面向连接的。当我们向服务器请求一个页面时，首先需要建立 `TCP` 连接，才能开始真正开始传输内容。<br />\n<br />这个时间平时不容易被人察觉，因为开发场景下我们往往不需要重新建立连接。但是在有些场景（尤其是新用户场景、landing page 等）却会对页面的性能造成很大的影响。<br />\n<br />图中 TCP 的部分为我们常说的建连时间（这里包含了 SSL 握手时间，下文的建连时间也指的是这段时间），前面的 DNS 时间往往和建连时间同时出现，后面会讲到这一点。<br />\n<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1584964408688-4c021c34-501c-408c-a704-1f30656ccbb1.png#align=left&display=inline&height=383&name=image.png&originHeight=879&originWidth=1473&size=106021&status=done&style=none&width=641)\n<a name=\"7I6OJ\"></a>\n## 建连应该耗时多久\n<a name=\"ppSgn\"></a>\n### RTT\n在介绍建连的耗时之前，我们先介绍一下 `RTT(Round-Trip Time)` 的概念。RTT，即往返时延。指的是从发送端发送数据开始，到发送端收到来自接收端的确认（ACK）的时间。一般来说这个时间是由物理距离，网络传输路径等决定的。<br />\n<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1584964922127-65173f15-e1ec-4fb1-ade1-74b65cfc8e8e.png#align=left&display=inline&height=292&name=image.png&originHeight=584&originWidth=720&size=197676&status=done&style=none&width=360)<br />\n\n<a name=\"IaUYe\"></a>\n### RTT 一般是多久\n最简单的方式就是 Ping 一下，我们在 Ping 的时候看到的 `time=xxms`  一般**接近于一个 RTT**<br />**\n```bash\nPING 115.239.211.112 (115.239.211.112): 56 data bytes\n64 bytes from 115.239.211.112: icmp_seq=0 ttl=55 time=4.411 ms\n```\n\n<br />实际上就是一来一回（下面是 `tcpdump` 抓到的 `ping` ）：\n```bash\n11:59:42.631275 IP 30.38.61.21 > 115.239.211.112: ICMP echo request, id 11482, seq 0, length 64\n11:59:42.635593 IP 115.239.211.112 > 30.38.61.21: ICMP echo reply, id 11482, seq 0, length 64\n```\n<a name=\"ORwmh\"></a>\n### 建连需要多少个 RTT\nTCP 一种面向连接的通讯协议，在两个目标间发送 TCP 数据之前，TCP 需要通过三次握手建立起连接。而这个连接的过程其实是在交换一些初始数据，其中最重要的是 Sequence Number。<br />\n<br />很多地方尝试用各种看起来形象的比喻来形容三次握手，但是实际上握手的过程非常简单，为了避免造成错误的理解，我们就平铺直叙，后面会解释为什么一定要经过三次握手才能建立起连接。三次握手的过程如下：<br />\n\n1. 客户端向服务端发送 SYN，传输 seq = X\n1. 服务端向客户端发送 ACK X+1，表示收到，客户端可以从 X+1 作为 seq 发送消息。同时发送 SYN，seq = Y，把自己设置成 established 状态（可接收数据）\n1. 客户端向服务端发送 ACK Y+1，表示收到，服务端可以从 Y+1 作为 seq 发送消息，，把自己设置成 established 状态（可接收数据）\n\n\n<br />**到了第三步客户端发送完 ACK 后就认为连接已经建立完毕（毕竟不会有第四个 ACK 再告诉它已经收到了 ACK），然后开始把应用层的数据（HTTP 报文）开始传输。而服务器端则是收到这个 ACK 后才会开始把收到的数据交付给应用层（HTTP）。**<br />**<br />**所以在这个过程中，客户端在建连上话费的时间是一个 RTT。**<br />\n<br />这种情况说的是纯粹的 `Connect` 时间，不包括 `SSL` ，所以只是对 `http` 协议而言的，如果是 `https` 协议还需要再考虑 SSL 握手的时间，我们后续会在别的文章中介绍。\n<a name=\"guKHx\"></a>\n#### 动手试试\n我们可以使用 `WireShark` 来抓取一次  `http` 请求来看看建连的过程。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1584966581339-1ff4f09d-c1dc-4dab-a0ef-636e942cf5fa.png#align=left&display=inline&height=597&name=image.png&originHeight=1194&originWidth=2192&size=1880284&status=done&style=none&width=1096)<br />可以看到这里从发起 `seq` 到收到 `ack` （经过 1 `RTT` ）后，客户端就没有再等待直接发起了 `GET / HTTP/1.1` 的请求。\n<a name=\"tmNZ6\"></a>\n## 如何优化建连时间\n<a name=\"vhZdc\"></a>\n### 例子\n我们用一个简单的页面看看建连对网页性能的影响：[https://xcodebuild.github.io/why-so-slow/connect/index.html](https://xcodebuild.github.io/why-so-slow/connect/index.html)<br />\n\n> 这是一个测试页面，源代码托管在：[https://github.com/xcodebuild/why-so-slow/blob/master/connect/index.html](https://github.com/xcodebuild/why-so-slow/blob/master/connect/index.html)\n\n\n<br />就像上面说的，我们在开发场景下往往不需要重新连接，包括 `Disable Cache` 是不会禁用 `TCP` 的连接复用的，所以我们使用 [Webpage Test](https://www.webpagetest.org/) 来看一下这个页面的性能状况。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585020683958-c843ada1-7492-44d1-8c71-e65389fb9850.png#align=left&display=inline&height=582&name=image.png&originHeight=1164&originWidth=1910&size=229615&status=done&style=none&width=955)<br />\n<br />我们可以看到这这个页面的 JavaScript 文件以及后面的 `fetch` 请求都有个很长的 `DNS + Connect + SSL` 时间。因为他们的域名不同，所以需要重新解析域名。不是同一个 TCP 连接，所以需要重新建连（包括 SSL 握手）。<br />\n<br />在图中这个 `fetch` 请求的 `Connect + SSL` 一共耗时 `500ms` ，意味着用户必须等待这个建连完成后才能真正发起这个请求。\n<a name=\"zlxEH\"></a>\n### pre-connect\n为了解决上面这种问题，Chrome 引入了 [`Preconnect`](https://web.dev/uses-rel-preconnect/) （现在大部分浏览器都是支持的）。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585102598647-3d2dd3b0-fbfc-4bbc-99f5-10debdf6ee91.png#align=left&display=inline&height=150&name=image.png&originHeight=300&originWidth=736&size=76442&status=done&style=none&width=368)<br />我们可以在页面的 `<head>` 中加入\n```html\n<link rel=\"preconnect\" href=\"https://www.mocky.io\" crossorigin>\n```\n\n<br />来告知浏览器提前建立连接。<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585043302410-4fc5bf0c-b9f3-45ef-bba2-3ebbe7ce0ce0.png#align=left&display=inline&height=269&name=image.png&originHeight=538&originWidth=1994&size=401496&status=done&style=none&width=997)<br />可以看到这种情况下，我们在 JS 加载后前（实际上 `fetch` 这个时候才能开始执行），就开始建立连接。同时 `preconnect` 也附带着让浏览器提前进行了 DNS 解析。\n<a name=\"QIrav\"></a>\n### 连接复用\n当然如果直接使用同一个连接，即使不使用 `pre-connect` 就能天然减少额外的连接次数。\n<a name=\"cSppd\"></a>\n#### 域名收拢\n在 HTTP 1 时代，为了解决阻塞的问题，很多网站都做了分散域名的优化让多个请求可以并行加载。而在 HTTP 2 普及后，已经具备了连接复用的能力，使用多个分散的域名只会让我们消耗更高的连接成本。<br />\n<br />所以尽可能把域名收拢到相同域名，可以尽可能的减少建连的耗时。\n<a name=\"SbrZd\"></a>\n#### IP 收拢\n我们都知道，一个 TCP 连接是由一个四元组组成的（源 IP、源端口、目标 IP、目标端口），和域名其实没有关系。所以看起来很反直觉的一点是，当两个请求域名不同，但来自同一个 IP 时，同样可以复用连接（虽然会额外解析一次 DNS）。<br />\n<br />如果我们试用了类似于阿里云全站加速的技术，把页面和静态资源的 IP 指向同一个可以帮助我们减少重复的连接建立。\n<a name=\"7UdXx\"></a>\n### 连接为什么不复用\n<a name=\"8RMHh\"></a>\n#### 如何确定一个连接\n看起来无论是 `pre-connect` 还是链接复用都非常简单，但实际应用中并非如此。由于一些浏览器安全策略，不同的连接之间复用会受到一些限制。<br />\n<br />在 [https://fetch.spec.whatwg.org/#cors-protocol-and-credentials](https://fetch.spec.whatwg.org/#cors-protocol-and-credentials) 我们可以看到<br />\n\n> A user agent has an associated connection pool. A connection pool consists of zero or more connections. Each connection is identified by an origin (an origin) and credentials (a boolean).\n\n\n<br />即一个连接是由 `origin` 和 `credentials` 确定的，这里的 `origin` 并非单纯是指我们加载的连接的 `origin` ，而是对于页面上不同的资源来说，会遵循不同的策略（详细的策略见 [https://html.spec.whatwg.org/multipage/origin.html#concept-origin](https://html.spec.whatwg.org/multipage/origin.html#concept-origin)）。<br />\n<br />例如对于图像而言（其实对于 `script/css` 等来说也是一样的）\n> For images of `[img](https://html.spec.whatwg.org/multipage/embedded-content.html#the-img-element)` elements\n> If the [image data](https://html.spec.whatwg.org/multipage/images.html#img-req-data) is [CORS-cross-origin](https://html.spec.whatwg.org/multipage/urls-and-fetching.html#cors-cross-origin)\n> A unique [opaque origin](https://html.spec.whatwg.org/multipage/origin.html#concept-origin-opaque) assigned when the image is created.\n> If the [image data](https://html.spec.whatwg.org/multipage/images.html#img-req-data) is [CORS-same-origin](https://html.spec.whatwg.org/multipage/urls-and-fetching.html#cors-same-origin)\n> The `[img](https://html.spec.whatwg.org/multipage/embedded-content.html#the-img-element)` element's [node document](https://dom.spec.whatwg.org/#concept-node-document)'s [origin](https://html.spec.whatwg.org/multipage/origin.html#concept-origin).\n\n\n<br />即在有 `crossorigin` 时（不是单纯的是另外一个域名时），则其 `origin` 是图片的 `origin` 。<br />如果没有（一般来说是没有的），则 `origin` 是页面相同的 `origin` 。<br />\n<br />这意味着对于 `cors` 和 `non-cors` 的请求、`credentials=true` 和 `credentials=false` 的请求来说，他们的连接是不能复用的。<br />\n<br />例如 [https://xcodebuild.github.io/why-so-slow/connect/cors-non-cors.html](https://xcodebuild.github.io/why-so-slow/connect/cors-non-cors.html) 这个页面中，有四个来自同一个域名的 `img` ，但是后面两个是 `crossorigin` 的\n```html\n<img src=\"https://i.picsum.photos/id/1061/200/200.jpg\"/>\n<img src=\"https://i.picsum.photos/id/1061/200/300.jpg\"/>\n<img src=\"https://i.picsum.photos/id/1061/100/300.jpg\" crossorigin/>\n<img src=\"https://i.picsum.photos/id/1061/300/300.jpg\" crossorigin/>\n```\n\n<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585190581512-5105a07b-5871-4d57-ac19-829f926b978c.png#align=left&display=inline&height=458&name=image.png&originHeight=916&originWidth=1924&size=538733&status=done&style=none&width=962)<br />这样就会发现前面两个和后面两个分别能够复用连接，但是 `cors` 的和 `non-cors` 的不能复用连接。\n> 其实这里如果有 crossorigin=\"use-credentials\"，其和 cors 也不能复用连接\n\n具体这么做的原因主要是为了安全考虑，在 [https://github.com/whatwg/fetch/issues/341](https://github.com/whatwg/fetch/issues/341) 中有提到，在这里不展开。\n<a name=\"0RLnO\"></a>\n#### 怎么避免不复用\n知道了怎么确定一个连接后，我们就知道怎么避免连接没有复用的问题。无论是我们尝试让两个请求复用一个连接还是通过 `preconnect` 去提前建连，都应该保持其 `cors` 和 `credentials` 的一致性。<br />\n<br />由于实际规则其实蛮复杂的，并不能保证我们总是能判断策略是否符合预期，**还是建议通过 `WebPageTest` 等工具验证是否有多余的建连。**<br />\n<br />当然通过 Chrome Devtools 也能够验证这一点，我们可以在 Network 面板打开 `Connection ID` ，可以看到不同的连接使用的 `Connection ID` 是不同的。<br />\n<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1585191129731-7ff634e7-4184-4de0-98a0-d3339c388644.png#align=left&display=inline&height=101&name=image.png&originHeight=202&originWidth=2012&size=181126&status=done&style=none&width=1006)\n<a name=\"EyboO\"></a>\n## 为什么要握手\n为什么一定要先握手才能发送 HTTP 报文呢？这是由 TCP 本身的设计决定的，TCP 是一种可靠的传输层通信协议。所谓可靠，就是能保证数据流的顺序和完整性。\n<a name=\"qVj1E\"></a>\n### ISN\nTCP 本身在网络层（IP 协议）的上层，应用层的下层（HTTP 协议）。当应用层发起请求时，把包传给 TCP，TCP 将其分割成合适的大小，将其传递给网络层。<br />\n<br />为了保证不丢包，TCP 会给每一个包一个序号，接收端接受到后返回响应的确认消息。如果在合理的时间内没有收到确认，发送端则会认为发生了丢包，会尝试重新发送。<br />\n<br />而作为接收端，收到的包可能是乱序的（网络层不保证传输顺序）或者重复的（例如上面重新发送的时候就会重复），就会按照接收方的序号重新组建传输包的内容，然后将其交付给应用层。<br />\n<br />理解了 TCP 保证顺序和完整性的原理，就理解了 TCP 包的序号（Sequence Number**）**的重要性，而 TCP 握手时就是为了相互交换初始序列号（ISN，Inital Sequence Number**），**从而保证互相收到的包都能够保持正确的顺序。\n<a name=\"MZ1LO\"></a>\n#### 为什么不能用固定值\n从 ISN 的使用场景很自然可以想到，只要我们统一用一个固定值（例如0）作为 ISN，不就可以直接避免握手的性能损耗了么？<br />\n\n<a name=\"Uj6iu\"></a>\n##### 避免相邻的 TCP 连接互相干扰\n假设我们把 ISN 统一设置为 0，当我们的客户端和一个服务器建立起连接后传输了一部分数据包后，突然网络中断了，这个时候他们之间重新建立起连接，ISN 仍然为 0。<br />\n<br />这个时候服务器端可能同时收到序号为 N 的包，但却无从判断这个包属于哪一个 TCP 连接。\n<a name=\"RPdQe\"></a>\n### 结论\nTCP 为了确保能够把数据按照正确顺序、完整的发送给目标，必须通过握手同步 ISN。而由于 TCP 是全双工的（即双向通信），握手至少需要三次才能完成。<br />\n<br />其实对于客户端（浏览器）来说，从发送 ACK 到接受到 SYN-ACK 的过程就已经完成了 TCP 的建连，此时就可以开始给服务器端传输数据了。\n<a name=\"CeCLZ\"></a>\n## 能不能更快一点\n<a name=\"IPdfI\"></a>\n### TCP Fast Open\nTCP 协议每次都要等待 SYN-ACK+SYN-ACK 后，服务端的 TCP 才会把接收到的数据包传输给应用层，这样当连接不稳定时总是需要重新建立连接。那么，为什么不直接在第一次传输 SYN 时直接发送数据呢？<br />\n<br />事实上在 TCP 上有一个拓展标准是支持这么做的，称之为 TCP Fast Open，在 TFO 第一次建立连接时和正常的三次握手是相同的，但客户端会额外拿到一个 TFO Cookie。而当之后再重新建立连接（例如说断网后重连，或者移动设备切换网络登）时，则直接由 SYN 携带 TFO Cookie 和数据发送。服务端收到校验 Cookie 有效直接把数据交付给应用层。<br />\n<br />然而 TFO 并没有在所有的客户端和服务端默认打开，目前绝大多数浏览器都是不支持的，而且由于 TCP 作为协议层由操作系统实现，无法由应用层的浏览器、客户端等自由控制。\n<a name=\"Yk40Q\"></a>\n### QUIC/HTTP3\nQUIC 和 HTTP3 也解决了建连耗时的问题，不在本文展开，后续会在其他文章介绍。\n<a name=\"M0DPI\"></a>\n## 总结\n由于 HTTP 是基于 TCP 的，而 TCP 为了可靠性是面向连接的，需要通过三次握手建立连接。<br />\n<br />在 HTTP2 后我们有了多路复用可以让多个请求在一个连接中进行，但是连接的复用并不是单纯由域名决定的，同一个域名的连接可能不能复用一个连接，而不同的域名其实也可能复用一个连接。我们需要尽可能确定连接被正确的复用了。如果使用了 CDN 技术，我们可以尝试让页面和资源使用相同的 IP 从而复用链接。<br />\n<br />除此之外，我们可以使用 `preconnect` 来提前建连，同样的，也需要确定这个提前建立的连接被正确复用了。这对于即将发起的请求、即将到来的 `redirect` 等非常有效。<br />\n<a name=\"MzPEp\"></a>\n## 拓展阅读\n\n- [preconnect resource hint and the crossorigin attribute](https://crenshaw.dev/preconnect-resource-hint-crossorigin-attribute/)\n- [https://github.com/whatwg/fetch/issues/341](https://github.com/whatwg/fetch/issues/341)\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\"><p data-lake-id=\"701b726d13b99afe12db80975f7cb050\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们都知道 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">HTTP</code> 是基于 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">TCP</code> 的，而 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">TCP</code> 是面向连接的。当我们向服务器请求一个页面时，首先需要建立 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">TCP</code> 连接，才能开始真正开始传输内容。</p><p data-lake-id=\"2e663bb2a08b41d7082093e13ad0ed17\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"c84cb01b549a897e8723dd026d58773d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这个时间平时不容易被人察觉，因为开发场景下我们往往不需要重新建立连接。但是在有些场景（尤其是新用户场景、landing page 等）却会对页面的性能造成很大的影响。</p><p data-lake-id=\"26e68a98b2709fa5aa9364dce0c211d1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"dddf6360027e7afba073a9056f10848a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">图中 TCP 的部分为我们常说的建连时间（这里包含了 SSL 握手时间，下文的建连时间也指的是这段时间），前面的 DNS 时间往往和建连时间同时出现，后面会讲到这一点。</p><p data-lake-id=\"3ad0e4f28cc587e81f58066c8454be57\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"ba244ba214d69e53eb135f34fa29ef64\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1584964408688-4c021c34-501c-408c-a704-1f30656ccbb1.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1584964408688-4c021c34-501c-408c-a704-1f30656ccbb1.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 641px; height: 383px;\"></span></p><h2 id=\"7I6OJ\" data-lake-id=\"ed139714b8defd154c0c9a2ce9b80c1e\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">建连应该耗时多久</h2><h3 id=\"ppSgn\" data-lake-id=\"aec6fc99a23c036e3e4b42fde7999e1e\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">RTT</h3><p data-lake-id=\"45bf22c587175efb792b5b45f3fca0b9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在介绍建连的耗时之前，我们先介绍一下 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">RTT(Round-Trip Time)</code> 的概念。RTT，即往返时延。指的是从发送端发送数据开始，到发送端收到来自接收端的确认（ACK）的时间。一般来说这个时间是由物理距离，网络传输路径等决定的。</p><p data-lake-id=\"2cd8bd6ec30045bf72f67e0d617311f9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"9542b20e62fccff34766d30f664cff42\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1584964922127-65173f15-e1ec-4fb1-ade1-74b65cfc8e8e.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1584964922127-65173f15-e1ec-4fb1-ade1-74b65cfc8e8e.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 360px; height: 292px;\"></span></p><p data-lake-id=\"4b8b701373a5aaed8f7fb696fcac10da\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"IaUYe\" data-lake-id=\"5c5b9ff977c317cdc838d53f21346707\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">RTT 一般是多久</h3><p data-lake-id=\"60d802055537737344b1783cec7574e2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">最简单的方式就是 Ping 一下，我们在 Ping 的时候看到的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">time=xxms</code>&nbsp; 一般<strong>接近于一个 RTT</strong></p><p data-lake-id=\"ea2c71281d817b8815ada0f84c65e387\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong><br></strong></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"6pntV\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">PING <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">115</span>.239.211.112 (115.239.211.112): <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">56</span> data bytes\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">64</span> bytes from <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">115</span>.239.211.112: <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">icmp_seq</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span><span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ttl</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span><span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">55</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">time</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span><span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">4</span>.411 ms</span></span></pre></div></div></div><p data-lake-id=\"28be9d380dfce7d5e4a7c40af673c7c5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"2f340fe99ff3819e1a29c35cc3e9a305\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">实际上就是一来一回（下面是 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">tcpdump</code> 抓到的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">ping</code> ）：</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"eP4yg\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">11</span>:59:42.631275 IP <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">30</span>.38.61.21 &gt; <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">115</span>.239.211.112: ICMP <span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">echo</span> request, id <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">11482</span>, seq <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>, length <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">64</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">11</span>:59:42.635593 IP <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">115</span>.239.211.112 &gt; <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">30</span>.38.61.21: ICMP <span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">echo</span> reply, id <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">11482</span>, seq <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>, length <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">64</span></span></span></pre></div></div></div><h3 id=\"ORwmh\" data-lake-id=\"edfca786170b32a20e4d25a407c676ed\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">建连需要多少个 RTT</h3><p data-lake-id=\"bd68d3a5009b831a52e330af75425a07\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">TCP 一种面向连接的通讯协议，在两个目标间发送 TCP 数据之前，TCP 需要通过三次握手建立起连接。而这个连接的过程其实是在交换一些初始数据，其中最重要的是 <span>Sequence Number。</span></p><p data-lake-id=\"d62ff75f2bd039b0e0b38f5c61306634\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"3f4da40a705675a10f24a60294ce6cb9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">很多地方尝试用各种看起来形象的比喻来形容三次握手，但是实际上握手的过程非常简单，为了避免造成错误的理解，我们就平铺直叙，后面会解释为什么一定要经过三次握手才能建立起连接。三次握手的过程如下：</p><p data-lake-id=\"e9aa99137cc2ac65c582a3083b269557\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ol start=\"1\" data-lake-id=\"ae782c153de151fcba33abab2649fbfe\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"3ba821df151261a3037b8db8b7101cef\">客户端向服务端发送 SYN，传输 seq = X</li><li data-lake-id=\"6aa1ce48a0476d48e744ac62ee3b5c59\">服务端向客户端发送 ACK X+1，表示收到，客户端可以从 X+1 作为 seq 发送消息。同时发送 SYN，seq = Y，把自己设置成 established 状态（可接收数据）</li><li data-lake-id=\"c0ad34e3667e458536c4a72709d24c93\">客户端向服务端发送 ACK Y+1<span>，表示收到，服务端可以从 Y+1 作为 seq 发送消息，</span><span>，把自己设置成 established 状态（可接收数据）</span></li></ol><p data-lake-id=\"f27a9d012a797e2ce40fd497eb70f3e3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"908da72338d6fc3b5215aa455a15be5d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong>到了第三步客户端发送完 ACK 后就认为连接已经建立完毕（毕竟不会有第四个 ACK 再告诉它已经收到了 ACK），然后开始把应用层的数据（HTTP 报文）开始传输。而服务器端则是收到这个 ACK 后才会开始把收到的数据交付给应用层（HTTP）。</strong></p><p data-lake-id=\"eb0d2ec25de6dba421652cb31cfc53e7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong><br></strong></p><p data-lake-id=\"472507a4da8faa495cd27cd68e9e5d3d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong>所以在这个过程中，客户端在建连上话费的时间是一个 RTT。</strong></p><p data-lake-id=\"dca7d273f012522e76f94aa259e2e0e7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"cebe87baaadd492ea20360aab9697fd4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这种情况说的是纯粹的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Connect</code> 时间，不包括 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">SSL</code> ，所以只是对 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">http</code> 协议而言的，如果是 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">https</code> 协议还需要再考虑 SSL 握手的时间，我们后续会在别的文章中介绍。</p><h4 id=\"guKHx\" data-lake-id=\"b7bcf1c42823a1671a02646edee25075\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">动手试试</h4><p data-lake-id=\"58a92a07d8dbc61f5ef32f8229e19671\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们可以使用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">WireShark</code> 来抓取一次  <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">http</code> 请求来看看建连的过程。</p><p data-lake-id=\"6f82d2629bd5e1f4d3e91c0b00ea9bfe\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1584966581339-1ff4f09d-c1dc-4dab-a0ef-636e942cf5fa.png?x-oss-process=image/resize,w_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1584966581339-1ff4f09d-c1dc-4dab-a0ef-636e942cf5fa.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 746px; height: 406px;\"></span></p><p data-lake-id=\"3572ccc615c991183f2ec45a84451458\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">可以看到这里从发起 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">seq</code> 到收到 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">ack</code> （经过 1 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">RTT</code> ）后，客户端就没有再等待直接发起了 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">GET / HTTP/1.1</code> 的请求。</p><h2 id=\"tmNZ6\" data-lake-id=\"6edabe9926215f72c168798265f3ba84\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">如何优化建连时间</h2><h3 id=\"vhZdc\" data-lake-id=\"08f44c78a214025b18b2f1e4a4d41a47\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">例子</h3><p data-lake-id=\"89d97211206b061653c3bb9178cb8943\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们用一个简单的页面看看建连对网页性能的影响：<a href=\"https://xcodebuild.github.io/why-so-slow/connect/index.html\" target=\"_blank\">https://xcodebuild.github.io/why-so-slow/connect/index.html</a></p><p data-lake-id=\"ed2cb9a1d85cc99bca0f37ff7043a949\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><blockquote style=\"padding-left: 1em; margin-top: 5px; margin-bottom: 5px; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"86f246784c65207315ed344629b8e3a6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这是一个测试页面，源代码托管在：<a href=\"https://github.com/xcodebuild/why-so-slow/blob/master/connect/index.html\" target=\"_blank\">https://github.com/xcodebuild/why-so-slow/blob/master/connect/index.html</a></p></blockquote><p data-lake-id=\"debcc747eadd173d286fd29fffd5b7ab\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"690597af27dff4cc48006593d105fac8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">就像上面说的，我们在开发场景下往往不需要重新连接，包括 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Disable Cache</code> 是不会禁用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">TCP</code> 的连接复用的，所以我们使用 <a href=\"https://www.webpagetest.org/\" target=\"_blank\">Webpage Test</a> 来看一下这个页面的性能状况。</p><p data-lake-id=\"cce34c452da003791c918ff8c26958f1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585020683958-c843ada1-7492-44d1-8c71-e65389fb9850.png?x-oss-process=image/resize,w_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585020683958-c843ada1-7492-44d1-8c71-e65389fb9850.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 746px; height: 455px;\"></span></p><p data-lake-id=\"800631c30623d7de088278a8c16ba509\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"7ef3910ef9899b2a2128d6981ee67e54\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们可以看到这这个页面的 JavaScript 文件以及后面的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">fetch</code> 请求都有个很长的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">DNS + Connect + SSL</code> 时间。因为他们的域名不同，所以需要重新解析域名。不是同一个 TCP 连接，所以需要重新建连（包括 SSL 握手）。</p><p data-lake-id=\"afcf8a7dcc3fa92d20f24e4aeccb86fe\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"9f704e170e8c88f5740719505af3123c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在图中这个 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">fetch</code> 请求的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Connect + SSL</code> 一共耗时 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">500ms</code> ，意味着用户必须等待这个建连完成后才能真正发起这个请求。</p><h3 id=\"zlxEH\" data-lake-id=\"0744e0d629afe6e1b5a63ceb54cdf4c5\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">pre-connect</h3><p data-lake-id=\"a6a97aebcf654d199cd72cde8a0e26b7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">为了解决上面这种问题，Chrome 引入了 <a href=\"https://web.dev/uses-rel-preconnect/\" target=\"_blank\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Preconnect</code></a> （现在大部分浏览器都是支持的）。</p><p data-lake-id=\"137884bddae0f61b77e65c88eaae4151\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585102598647-3d2dd3b0-fbfc-4bbc-99f5-10debdf6ee91.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585102598647-3d2dd3b0-fbfc-4bbc-99f5-10debdf6ee91.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 368px; height: 150px;\"></span></p><p data-lake-id=\"4fa8837eaf14cae7bb776402bb2a91b1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们可以在页面的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">&lt;head&gt;</code> 中加入</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"yWrSj\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">link</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">rel</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"preconnect\"</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">href</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"https://www.mocky.io\"</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">crossorigin</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&gt;</span></span></span></pre></div></div></div><p data-lake-id=\"cdfa9385bcb1b76ec4f0ee2ac63b9dde\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"53b5923343d19fd0acf27b19c6906bba\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">来告知浏览器提前建立连接。</p><p data-lake-id=\"93387630c007351e1392c5103478f004\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585043302410-4fc5bf0c-b9f3-45ef-bba2-3ebbe7ce0ce0.png?x-oss-process=image/resize,w_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585043302410-4fc5bf0c-b9f3-45ef-bba2-3ebbe7ce0ce0.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 746px; height: 201px;\"></span></p><p data-lake-id=\"7e76604f0ebc96c939f484151b3ecb34\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">可以看到这种情况下，我们在 JS 加载后前（实际上 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">fetch</code> 这个时候才能开始执行），就开始建立连接。同时 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">preconnect</code> 也附带着让浏览器提前进行了 DNS 解析。</p><h3 id=\"QIrav\" data-lake-id=\"78a8bcb0e57657edb1fe385347d6c081\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">连接复用</h3><p data-lake-id=\"051097bcd53f9be26d32f8df0f6cd3ab\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当然如果直接使用同一个连接，即使不使用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">pre-connect</code> 就能天然减少额外的连接次数。</p><h4 id=\"cSppd\" data-lake-id=\"ca062d8c857698ffe7d142655feb0366\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">域名收拢</h4><p data-lake-id=\"b294e747a4bb36c398558ede70b441a7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在 HTTP 1 时代，为了解决阻塞的问题，很多网站都做了分散域名的优化让多个请求可以并行加载。而在 HTTP 2 普及后，已经具备了连接复用的能力，使用多个分散的域名只会让我们消耗更高的连接成本。</p><p data-lake-id=\"517fab71968a2ac8b1146c92b4d8f5ad\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"81ac2cf0d027cb4e7b0c8779f03bc73f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">所以尽可能把域名收拢到相同域名，可以尽可能的减少建连的耗时。</p><h4 id=\"SbrZd\" data-lake-id=\"6100b4eaf78c4bd2b4c207e4eec8f186\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">IP 收拢</h4><p data-lake-id=\"af9a8d3461a997e1086ca6c62fe57224\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们都知道，一个 TCP 连接是由一个四元组组成的（源 IP、源端口、目标 IP、目标端口），和域名其实没有关系。所以看起来很反直觉的一点是，当两个请求域名不同，但来自同一个 IP 时，同样可以复用连接（虽然会额外解析一次 DNS）。</p><p data-lake-id=\"9409a5fdecfff4861dd6dc87b907fbfa\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"a0f641aa7ebbfe70182d8b29d31f18b5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">如果我们试用了类似于阿里云全站加速的技术，把页面和静态资源的 IP 指向同一个可以帮助我们减少重复的连接建立。</p><h3 id=\"7UdXx\" data-lake-id=\"e58da19aee88d4850ea291dcdfc5151b\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">连接为什么不复用</h3><h4 data-lake-id=\"1b651f3aa0903587dab0c887ae4e8dda\" id=\"8RMHh\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">如何确定一个连接</h4><p data-lake-id=\"2086181818360c3aa34716b282df07fe\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">看起来无论是 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">pre-connect</code> 还是链接复用都非常简单，但实际应用中并非如此。由于一些浏览器安全策略，不同的连接之间复用会受到一些限制。</p><p data-lake-id=\"776bd91c2054a7ca7cf91ddcbfd600d6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"26a63609679fc28034647fcd6ee470aa\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在 <a href=\"https://fetch.spec.whatwg.org/#cors-protocol-and-credentials\" target=\"_blank\">https://fetch.spec.whatwg.org/#cors-protocol-and-credentials</a> 我们可以看到</p><p data-lake-id=\"c49ba6356e1fe8e92318d172d6832c64\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><blockquote style=\"padding-left: 1em; margin-top: 5px; margin-bottom: 5px; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"c9e20f7d007a80c9c582a97445231917\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">A user agent has an associated&nbsp;connection pool. A&nbsp;connection pool&nbsp;consists of zero or more&nbsp;connections. Each&nbsp;connection&nbsp;is identified by an&nbsp;origin&nbsp;(an&nbsp;origin) and&nbsp;credentials&nbsp;(a boolean).</p></blockquote><p data-lake-id=\"120ee7167ba71fc7dd6f2f283d9e1102\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"34c0f9d96c0bda363c43671201d68747\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">即一个连接是由 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">origin</code> 和 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">credentials</code> 确定的，这里的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">origin</code> 并非单纯是指我们加载的连接的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">origin</code> ，而是对于页面上不同的资源来说，会遵循不同的策略（详细的策略见 <a href=\"https://html.spec.whatwg.org/multipage/origin.html#concept-origin\" target=\"_blank\">https://html.spec.whatwg.org/multipage/origin.html#concept-origin</a>）。</p><p data-lake-id=\"773a24606f8283d083f79baae5b63709\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"6477e19caa9d2af0d79ab4ed3f510216\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">例如对于图像而言（其实对于 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">script/css</code> 等来说也是一样的）</p><blockquote style=\"padding-left: 1em; margin-top: 5px; margin-bottom: 5px; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"44cf5ac260de4660c97ed053d5a201eb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">For images of <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"><a href=\"https://html.spec.whatwg.org/multipage/embedded-content.html#the-img-element\" target=\"_blank\">img</a></code> elements</p><p data-lake-id=\"3743496dad55c944f878841d4fb6c9c9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">If the <a href=\"https://html.spec.whatwg.org/multipage/images.html#img-req-data\" target=\"_blank\">image data</a> is <a href=\"https://html.spec.whatwg.org/multipage/urls-and-fetching.html#cors-cross-origin\" target=\"_blank\">CORS-cross-origin</a></p><p data-lake-id=\"8559060a85109b496d1cf7cd0fe5fdce\" style=\"text-indent: 2em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">A unique <a href=\"https://html.spec.whatwg.org/multipage/origin.html#concept-origin-opaque\" target=\"_blank\">opaque origin</a> assigned when the image is created.</p><p data-lake-id=\"8db595db0ead478d1926ced1d12d5bb0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">If the <a href=\"https://html.spec.whatwg.org/multipage/images.html#img-req-data\" target=\"_blank\">image data</a> is <a href=\"https://html.spec.whatwg.org/multipage/urls-and-fetching.html#cors-same-origin\" target=\"_blank\">CORS-same-origin</a></p><p data-lake-id=\"252c8fa7340ed1e946c894dd1704577e\" style=\"text-indent: 2em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">The <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"><a href=\"https://html.spec.whatwg.org/multipage/embedded-content.html#the-img-element\" target=\"_blank\">img</a></code> element's <a href=\"https://dom.spec.whatwg.org/#concept-node-document\" target=\"_blank\">node document</a>'s <a href=\"https://html.spec.whatwg.org/multipage/origin.html#concept-origin\" target=\"_blank\">origin</a>.</p></blockquote><p data-lake-id=\"38738fd5a20e55a0d99e57adc35a1d0d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"b3e1190c1e148dfbdb6f28134b8e9afa\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">即在有 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">crossorigin</code> 时（不是单纯的是另外一个域名时），则其 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">origin</code> 是图片的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">origin</code> 。</p><p data-lake-id=\"2100e098b9b1fcb5ab9471fabcfcba5d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">如果没有（一般来说是没有的），则 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">origin</code> 是页面相同的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">origin</code> 。</p><p data-lake-id=\"b12094b5d23261d28ea6a8c7598686c9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"4a5c9cf7adab611267b47aa24c8b93a6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这意味着对于 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">cors</code> 和 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">non-cors</code> 的请求、<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"><span>credentials=true</span></code> 和 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"><span>credentials=false</span></code> 的请求来说，他们的连接是不能复用的。</p><p data-lake-id=\"f4bc2d339c084a9ab5afa63396b6314d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"2c5a0136e3c65c9f0c98e8727e65e6bf\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">例如 <a href=\"https://xcodebuild.github.io/why-so-slow/connect/cors-non-cors.html\" target=\"_blank\">https://xcodebuild.github.io/why-so-slow/connect/cors-non-cors.html</a> 这个页面中，有四个来自同一个域名的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">img</code> ，但是后面两个是 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">crossorigin</code> 的</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"qjOm4\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">img</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">src</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"https://i.picsum.photos/id/1061/200/200.jpg\"</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">img</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">src</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"https://i.picsum.photos/id/1061/200/300.jpg\"</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">img</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">src</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"https://i.picsum.photos/id/1061/100/300.jpg\"</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">crossorigin</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/&gt;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">img</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">src</span>=<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"https://i.picsum.photos/id/1061/300/300.jpg\"</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">crossorigin</span><span class=\"cm-tag cm-bracket\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/&gt;</span></span></span></pre></div></div></div><p data-lake-id=\"5868cac9301043b06379a47479551182\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"9f8410e4d4ede8eb343bb39a9337f754\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585190581512-5105a07b-5871-4d57-ac19-829f926b978c.png?x-oss-process=image/resize,w_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585190581512-5105a07b-5871-4d57-ac19-829f926b978c.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 746px; height: 355px;\"></span></p><p data-lake-id=\"4da7628a3b87eee54f02504b0d61adf2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这样就会发现前面两个和后面两个分别能够复用连接，但是 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">cors</code> 的和 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">non-cors</code> 的不能复用连接。</p><blockquote style=\"padding-left: 1em; margin-top: 5px; margin-bottom: 5px; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p data-lake-id=\"12aa126383eb69dbc7340c9f2205f3da\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">其实这里如果有 crossorigin=\"use-credentials\"，其和 cors 也不能复用连接</p></blockquote><p data-lake-id=\"5600f710637ff3bdcf5cbe66c699316e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">具体这么做的原因主要是为了安全考虑，在 <a href=\"https://github.com/whatwg/fetch/issues/341\" target=\"_blank\">https://github.com/whatwg/fetch/issues/341</a> 中有提到，在这里不展开。</p><h4 data-lake-id=\"e872d748ee4bf8a610db0c1f81880c37\" id=\"0RLnO\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">怎么避免不复用</h4><p data-lake-id=\"a5b74125bb3297ce3f0faff01fdf7578\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">知道了怎么确定一个连接后，我们就知道怎么避免连接没有复用的问题。无论是我们尝试让两个请求复用一个连接还是通过 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">preconnect</code> 去提前建连，都应该保持其 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">cors</code> 和 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">credentials</code> 的一致性。</p><p data-lake-id=\"80cb4a22b79d8b28edd5791528c8b817\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"236c7fa1f7757395e21decdfb3ba3263\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">由于实际规则其实蛮复杂的，并不能保证我们总是能判断策略是否符合预期，<strong>还是建议通过 </strong><strong><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">WebPageTest</code></strong><strong>&nbsp;等工具验证是否有多余的建连。</strong></p><p data-lake-id=\"976905f2b2af29d300081e9a3216a9f4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d45f6a86700f21654ffe21f1bce28cb7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当然通过 Chrome Devtools 也能够验证这一点，我们可以在 Network 面板打开 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Connection ID</code> ，可以看到不同的连接使用的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Connection ID</code> 是不同的。</p><p data-lake-id=\"0a3115b0b66ec5975000fb9396f6a6c3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"a2d4f632c2fa703c2abd8e56fa8c0440\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585191129731-7ff634e7-4184-4de0-98a0-d3339c388644.png?x-oss-process=image/resize,w_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1585191129731-7ff634e7-4184-4de0-98a0-d3339c388644.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 746px; height: 75px;\"></span></p><h2 id=\"EyboO\" data-lake-id=\"81e2aaea9defd8d7f05478e785575ef3\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">为什么要握手</h2><p data-lake-id=\"cde95d2636384e8380030a65f73e99ec\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">为什么一定要先握手才能发送 HTTP 报文呢？这是由 TCP 本身的设计决定的，TCP 是一种可靠的传输层通信协议。所谓可靠，就是能保证数据流的顺序和完整性。</p><h3 id=\"qVj1E\" data-lake-id=\"ea5974f97f7c04f3e6b00ed283cd96d1\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">ISN</h3><p data-lake-id=\"f80fa130199732a4efe2053f764896ca\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">TCP 本身在网络层（IP 协议）的上层，应用层的下层（HTTP 协议）。当应用层发起请求时，把包传给 TCP，TCP 将其分割成合适的大小，将其传递给网络层。</p><p data-lake-id=\"e01f3acdba3193c10d03421381e3bdeb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f5f90712762731f0e0e43a9f5bb49b6a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">为了保证不丢包，TCP 会给每一个包一个序号，接收端接受到后返回响应的确认消息。如果在合理的时间内没有收到确认，发送端则会认为发生了丢包，会尝试重新发送。</p><p data-lake-id=\"734d2352f27650d5e07762ad813c6e79\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"264a4c99abf8ddb64c01bd36ce3e1df7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">而作为接收端，收到的包可能是乱序的（网络层不保证传输顺序）或者重复的（例如上面重新发送的时候就会重复），就会按照接收方的序号重新组建传输包的内容，然后将其交付给应用层。</p><p data-lake-id=\"9e0759b2beeb3429812ef38586a60bdd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"059e672ae7b629ceeb0d2bdc6a290df9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">理解了 TCP 保证顺序和完整性的原理，就理解了 TCP 包的序号（Sequence Number<strong>）</strong>的重要性，而 TCP 握手时就是为了相互交换初始序列号（ISN，Inital&nbsp;Sequence Number<strong>），</strong>从而保证互相收到的包都能够保持正确的顺序。</p><h4 id=\"MZ1LO\" data-lake-id=\"5cce42754381d63a51a1dc3e7956a09d\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">为什么不能用固定值</h4><p data-lake-id=\"18011ddb451b01aa6ba276337fff3b8e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">从 ISN 的使用场景很自然可以想到，只要我们统一用一个固定值（例如0）作为 ISN，不就可以直接避免握手的性能损耗了么？</p><p data-lake-id=\"a2586b51e95547afd1edb1ed910b7fc9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h5 id=\"Uj6iu\" data-lake-id=\"9d4f80a69f9a2664d2d6f0159be0e6b2\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 14px; line-height: 24px;\">避免相邻的 TCP 连接互相干扰</h5><p data-lake-id=\"8bf52e2b1a4316490f35ca9d6b04db7f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">假设我们把 ISN 统一设置为 0，当我们的客户端和一个服务器建立起连接后传输了一部分数据包后，突然网络中断了，这个时候他们之间重新建立起连接，ISN 仍然为 0。</p><p data-lake-id=\"d29f47fe1cae82b12397edfea2e924d0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"15d28bdcec02026342161eb18b1cbf03\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这个时候服务器端可能同时收到序号为 N 的包，但却无从判断这个包属于哪一个 TCP 连接。</p><h3 id=\"RPdQe\" data-lake-id=\"7c95bc17c4e4f24397713d76f9f74d3f\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">结论</h3><p data-lake-id=\"63d7a2e8999188e7ba6aa1b2379b27c2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">TCP 为了确保能够把数据按照正确顺序、完整的发送给目标，必须通过握手同步 ISN。而由于 TCP 是全双工的（即双向通信），握手至少需要三次才能完成。</p><p data-lake-id=\"a2eeb26c9d779f5c0c3e49318325be5e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"a49c46cc5dca4d8d5a0845bb2cec370f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">其实对于客户端（浏览器）来说，从发送 ACK 到接受到 SYN-ACK 的过程就已经完成了 TCP 的建连，此时就可以开始给服务器端传输数据了。</p><h2 data-lake-id=\"33517611d33f530fc641ce7720d99b7c\" id=\"CeCLZ\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">能不能更快一点</h2><h3 data-lake-id=\"1efdc8ddd8a0577afe77d27d70682d30\" id=\"IPdfI\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">TCP Fast Open</h3><p data-lake-id=\"d0eb46a0c03ff2ebf3ebeabf0b1956a2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">TCP 协议每次都要等待 SYN-ACK+SYN-ACK 后，服务端的 TCP 才会把接收到的数据包传输给应用层，这样当连接不稳定时总是需要重新建立连接。那么，为什么不直接在第一次传输 SYN 时直接发送数据呢？</p><p data-lake-id=\"6fe199de0acf7f46d8652bc017a7e331\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"2ac239e483c6bd375d42c59ff1c429e0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">事实上在 TCP 上有一个拓展标准是支持这么做的，称之为 TCP Fast Open，在 TFO 第一次建立连接时和正常的三次握手是相同的，但客户端会额外拿到一个 TFO Cookie。而当之后再重新建立连接（例如说断网后重连，或者移动设备切换网络登）时，则直接由 SYN 携带 TFO Cookie 和数据发送。服务端收到校验 Cookie 有效直接把数据交付给应用层。</p><p data-lake-id=\"a736d223f5c5752a64eaf631f7d69717\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"9c165643bdb5ed9dfa455d1176bdb58e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">然而 TFO 并没有在所有的客户端和服务端默认打开，目前绝大多数浏览器都是不支持的，而且由于 TCP 作为协议层由操作系统实现，无法由应用层的浏览器、客户端等自由控制。</p><h3 data-lake-id=\"513c89fb34f3685e7a5d4da8f26831d5\" id=\"Yk40Q\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">QUIC/HTTP3</h3><p data-lake-id=\"3d4080ad9779ba79973b59c1547da18c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">QUIC 和 HTTP3 也解决了建连耗时的问题，不在本文展开，后续会在其他文章介绍。</p><h2 data-lake-id=\"9338d05edc1197048619caa01d340429\" id=\"M0DPI\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">总结</h2><p data-lake-id=\"b5dfaef9a22789393626a871f788c0b4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">由于 HTTP 是基于 TCP 的，而 TCP 为了可靠性是面向连接的，需要通过三次握手建立连接。</p><p data-lake-id=\"2bb56bc5bcd4debb387b8c681334888e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"2e3efb623bbc2f4c42176684612714d3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">在 HTTP2 后我们有了多路复用可以让多个请求在一个连接中进行，但是连接的复用并不是单纯由域名决定的，同一个域名的连接可能不能复用一个连接，而不同的域名其实也可能复用一个连接。我们需要尽可能确定连接被正确的复用了。如果使用了 CDN 技术，我们可以尝试让页面和资源使用相同的 IP 从而复用链接。</p><p data-lake-id=\"7c8f71d4911813d5114e8807269f0c17\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d106bc70ca5c39b06d8855b1bac12469\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">除此之外，我们可以使用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">preconnect</code> 来提前建连，同样的，也需要确定这个提前建立的连接被正确复用了。这对于即将发起的请求、即将到来的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">redirect</code> 等非常有效。<span style=\"background-color: transparent;\"><br></span></p><h2 data-lake-id=\"4ce15ad4ba6bcd2a8e4b85ad54ecf2cd\" id=\"MzPEp\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">拓展阅读</h2><ul data-lake-id=\"90b7a58b04b97e8452e8bbd6083abeb6\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"753323fd1967269bdc238849416b4f77\"><a href=\"https://crenshaw.dev/preconnect-resource-hint-crossorigin-attribute/\" target=\"_blank\">preconnect resource hint and the crossorigin attribute</a></li><li data-lake-id=\"f1e180aa7f197bed5e2efa18a0c1b283\"><a href=\"https://github.com/whatwg/fetch/issues/341\" target=\"_blank\">https://github.com/whatwg/fetch/issues/341</a></li></ul></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"701b726d13b99afe12db80975f7cb050\">我们都知道 <code>HTTP</code> 是基于 <code>TCP</code> 的，而 <code>TCP</code> 是面向连接的。当我们向服务器请求一个页面时，首先需要建立 <code>TCP</code> 连接，才能开始真正开始传输内容。</p><p data-lake-id=\"2e663bb2a08b41d7082093e13ad0ed17\"><br /></p><p data-lake-id=\"c84cb01b549a897e8723dd026d58773d\">这个时间平时不容易被人察觉，因为开发场景下我们往往不需要重新建立连接。但是在有些场景（尤其是新用户场景、landing page 等）却会对页面的性能造成很大的影响。</p><p data-lake-id=\"26e68a98b2709fa5aa9364dce0c211d1\"><br /></p><p data-lake-id=\"dddf6360027e7afba073a9056f10848a\">图中 TCP 的部分为我们常说的建连时间（这里包含了 SSL 握手时间，下文的建连时间也指的是这段时间），前面的 DNS 时间往往和建连时间同时出现，后面会讲到这一点。</p><p data-lake-id=\"3ad0e4f28cc587e81f58066c8454be57\"><br /></p><p data-lake-id=\"ba244ba214d69e53eb135f34fa29ef64\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1584964408688-4c021c34-501c-408c-a704-1f30656ccbb1.png%22%2C%22originWidth%22%3A1473%2C%22originHeight%22%3A879%2C%22name%22%3A%22image.png%22%2C%22size%22%3A106021%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A425.02188%2C%22y%22%3A10.740625%2C%22width%22%3A144.23131999999998%2C%22height%22%3A18.412501%2C%22text%22%3A%22navigationStart%22%7D%2C%7B%22x%22%3A451.10626%2C%22y%22%3A47.565628%2C%22width%22%3A121.21564000000001%2C%22height%22%3A18.412501999999996%2C%22text%22%3A%22redirectstart%22%7D%2C%7B%22x%22%3A463.38126%2C%22y%22%3A84.390625%2C%22width%22%3A113.54379000000006%2C%22height%22%3A21.481255000000004%2C%22text%22%3A%22redirectEnd%22%7D%2C%7B%22x%22%3A501.74063%2C%22y%22%3A118.14688%2C%22width%22%3A105.87192000000005%2C%22height%22%3A19.946870000000004%2C%22text%22%3A%22fetchStart%22%7D%2C%7B%22x%22%3A556.97815%2C%22y%22%3A148.83438%2C%22width%22%3A193.33124999999995%2C%22height%22%3A18.412509999999997%2C%22text%22%3A%22domainLookupStart%22%7D%2C%7B%22x%22%3A601.47504%2C%22y%22%3A181.05626%2C%22width%22%3A148.83435999999995%2C%22height%22%3A16.87813%2C%22text%22%3A%22domainLookupEng%22%7D%2C%7B%22x%22%3A664.3844%2C%22y%22%3A213.27814%2C%22width%22%3A110.47503999999992%2C%22height%22%3A19.946859999999987%2C%22text%22%3A%22connectstart%22%7D%2C%7B%22x%22%3A705.8125%2C%22y%22%3A250.10313%2C%22width%22%3A217.8813%2C%22height%22%3A19.946890000000025%2C%22text%22%3A%22(secureConnectionStart)%22%7D%2C%7B%22x%22%3A727.29376%2C%22y%22%3A285.39377%2C%22width%22%3A108.94067999999993%2C%22height%22%3A18.412499999999966%2C%22text%22%3A%22connectEnd%22%7D%2C%7B%22x%22%3A751.8438%2C%22y%22%3A313.0125%2C%22width%22%3A135.02499999999998%2C%22height%22%3A19.94688000000002%2C%22text%22%3A%22regueststart%22%7D%2C%7B%22x%22%3A833.16565%2C%22y%22%3A348.30313%2C%22width%22%3A130.42184999999995%2C%22height%22%3A18.412509999999997%2C%22text%22%3A%22responseStart%22%7D%2C%7B%22x%22%3A914.48755%2C%22y%22%3A383.59378%2C%22width%22%3A121.2155499999999%2C%22height%22%3A16.878120000000024%2C%22text%22%3A%22responseEnd%22%7D%2C%7B%22x%22%3A21.48125%2C%22y%22%3A463.38126%2C%22width%22%3A62.909375%2C%22height%22%3A18.412500000000023%2C%22text%22%3A%22Prompt%22%7D%2C%7B%22x%22%3A296.1344%2C%22y%22%3A475.65628%2C%22width%22%3A41.42809999999997%2C%22height%22%3A19.946870000000047%2C%22text%22%3A%22App%22%7D%2C%7B%22x%22%3A386.6625%2C%22y%22%3A486.39688%2C%22width%22%3A39.89376999999996%2C%22height%22%3A18.412519999999972%2C%22text%22%3A%22DNS%22%7D%2C%7B%22x%22%3A756.4469%2C%22y%22%3A486.39688%2C%22width%22%3A87.45939999999996%2C%22height%22%3A19.94689999999997%2C%22text%22%3A%22Response%22%7D%2C%7B%22x%22%3A471.05313%2C%22y%22%3A487.93127%2C%22width%22%3A33.75626999999997%2C%22height%22%3A16.87813%2C%22text%22%3A%22TCP%22%7D%2C%7B%22x%22%3A997.3438%2C%22y%22%3A487.93127%2C%22width%22%3A95.13130000000012%2C%22height%22%3A19.94686999999999%2C%22text%22%3A%22Processing%22%7D%2C%7B%22x%22%3A35.290627%2C%22y%22%3A489.46564%2C%22width%22%3A32.221878000000004%2C%22height%22%3A15.343759999999975%2C%22text%22%3A%22for%22%7D%2C%7B%22x%22%3A153.4375%2C%22y%22%3A489.46564%2C%22width%22%3A72.11563000000001%2C%22height%22%3A15.343759999999975%2C%22text%22%3A%22redirect%22%7D%2C%7B%22x%22%3A587.66565%2C%22y%22%3A489.46564%2C%22width%22%3A75.18439000000001%2C%22height%22%3A15.343759999999975%2C%22text%22%3A%22Request%22%7D%2C%7B%22x%22%3A1215.2251%2C%22y%22%3A489.46564%2C%22width%22%3A69.04689999999982%2C%22height%22%3A15.343759999999975%2C%22text%22%3A%22onLoad%22%7D%2C%7B%22x%22%3A288.46252%2C%22y%22%3A501.74063%2C%22width%22%3A53.703130000000044%2C%22height%22%3A15.34376999999995%2C%22text%22%3A%22cache%22%7D%2C%7B%22x%22%3A21.48125%2C%22y%22%3A514.0156%2C%22width%22%3A61.375005%2C%22height%22%3A18.4125600000001%2C%22text%22%3A%22unload%22%7D%2C%7B%22x%22%3A138.09375%2C%22y%22%3A553.9094%2C%22width%22%3A64.44375%2C%22height%22%3A18.412500000000023%2C%22text%22%3A%22unIoaD%22%7D%2C%7B%22x%22%3A1299.6157%2C%22y%22%3A583.0625%2C%22width%22%3A141.1624999999999%2C%22height%22%3A19.946900000000028%2C%22text%22%3A%22LoadEventEnd%22%7D%2C%7B%22x%22%3A1279.6688%2C%22y%22%3A622.9563%2C%22width%22%3A144.23120000000017%2C%22height%22%3A16.878099999999904%2C%22text%22%3A%22loadEventstart%22%7D%2C%7B%22x%22%3A1221.3625%2C%22y%22%3A656.7125%2C%22width%22%3A136.5594000000001%2C%22height%22%3A19.946900000000028%2C%22text%22%3A%22domComplete%22%7D%2C%7B%22x%22%3A1178.4%2C%22y%22%3A695.0719%2C%22width%22%3A185.6594%2C%22height%22%3A21.48126000000002%2C%22text%22%3A%22domContentLoaded%22%7D%2C%7B%22x%22%3A1133.9032%2C%22y%22%3A733.4313%2C%22width%22%3A142.69690000000014%2C%22height%22%3A19.946900000000028%2C%22text%22%3A%22domlnteractive%22%7D%2C%7B%22x%22%3A1104.75%2C%22y%22%3A771.79065%2C%22width%22%3A118.14699999999993%2C%22height%22%3A19.946900000000028%2C%22text%22%3A%22domloading%22%7D%2C%7B%22x%22%3A1040.3063%2C%22y%22%3A805.54694%2C%22width%22%3A102.80310000000009%2C%22height%22%3A18.41246000000001%2C%22text%22%3A%22unloadEnd%22%7D%2C%7B%22x%22%3A1009.6188%2C%22y%22%3A845.4407%2C%22width%22%3A113.54380000000015%2C%22height%22%3A15.343700000000013%2C%22text%22%3A%22unloadstart%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22navigationStart%20redirectstart%20redirectEnd%20fetchStart%20domainLookupStart%20domainLookupEng%20connectstart%20(secureConnectionStart)%20connectEnd%20regueststart%20responseStart%20responseEnd%20Prompt%20App%20DNS%20Response%20TCP%20Processing%20for%20redirect%20Request%20onLoad%20cache%20unload%20unIoaD%20LoadEventEnd%20loadEventstart%20domComplete%20domContentLoaded%20domlnteractive%20domloading%20unloadEnd%20unloadstart%22%2C%22width%22%3A641%2C%22height%22%3A383%7D\"></card></p><h2 id=\"7I6OJ\" data-lake-id=\"ed139714b8defd154c0c9a2ce9b80c1e\">建连应该耗时多久</h2><h3 id=\"ppSgn\" data-lake-id=\"aec6fc99a23c036e3e4b42fde7999e1e\">RTT</h3><p data-lake-id=\"45bf22c587175efb792b5b45f3fca0b9\">在介绍建连的耗时之前，我们先介绍一下 <code>RTT(Round-Trip Time)</code> 的概念。RTT，即往返时延。指的是从发送端发送数据开始，到发送端收到来自接收端的确认（ACK）的时间。一般来说这个时间是由物理距离，网络传输路径等决定的。</p><p data-lake-id=\"2cd8bd6ec30045bf72f67e0d617311f9\"><br /></p><p data-lake-id=\"9542b20e62fccff34766d30f664cff42\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1584964922127-65173f15-e1ec-4fb1-ade1-74b65cfc8e8e.png%22%2C%22originWidth%22%3A720%2C%22originHeight%22%3A584%2C%22name%22%3A%22image.png%22%2C%22size%22%3A197676%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A0%2C%22y%22%3A87%2C%22width%22%3A90.75%2C%22height%22%3A15.75%2C%22text%22%3A%22lnitiateTCP%22%7D%2C%7B%22x%22%3A-1.5%2C%22y%22%3A108.75%2C%22width%22%3A89.25%2C%22height%22%3A13.5%2C%22text%22%3A%22connection%22%7D%2C%7B%22x%22%3A115.5%2C%22y%22%3A190.5%2C%22width%22%3A36%2C%22height%22%3A16.5%2C%22text%22%3A%22RTT%22%7D%2C%7B%22x%22%3A-0.75%2C%22y%22%3A273%2C%22width%22%3A94.5%2C%22height%22%3A17.25%2C%22text%22%3A%22Requestfile%22%7D%2C%7B%22x%22%3A118.5%2C%22y%22%3A356.25%2C%22width%22%3A29.25%2C%22height%22%3A15%2C%22text%22%3A%22RTT-%22%7D%2C%7B%22x%22%3A531%2C%22y%22%3A374.25%2C%22width%22%3A163.5%2C%22height%22%3A17.25%2C%22text%22%3A%22Timetotransmitfile%22%7D%2C%7B%22x%22%3A-1.5%2C%22y%22%3A453%2C%22width%22%3A154.5%2C%22height%22%3A15%2C%22text%22%3A%22Entirefilereceived%22%7D%2C%7B%22x%22%3A153.75%2C%22y%22%3A534.75%2C%22width%22%3A42.75%2C%22height%22%3A16.5%2C%22text%22%3A%22Time%22%7D%2C%7B%22x%22%3A483.75%2C%22y%22%3A537.75%2C%22width%22%3A39%2C%22height%22%3A12.75%2C%22text%22%3A%22Time%22%7D%2C%7B%22x%22%3A141.75%2C%22y%22%3A556.5%2C%22width%22%3A67.5%2C%22height%22%3A15%2C%22text%22%3A%22atclient%22%7D%2C%7B%22x%22%3A468%2C%22y%22%3A556.5%2C%22width%22%3A71.25%2C%22height%22%3A14.25%2C%22text%22%3A%22atserver%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22lnitiateTCP%20connection%20RTT%20Requestfile%20RTT-%20Timetotransmitfile%20Entirefilereceived%20Time%20Time%20atclient%20atserver%22%2C%22width%22%3A360%2C%22height%22%3A292%7D\"></card></p><p data-lake-id=\"4b8b701373a5aaed8f7fb696fcac10da\"><br /></p><h3 id=\"IaUYe\" data-lake-id=\"5c5b9ff977c317cdc838d53f21346707\">RTT 一般是多久</h3><p data-lake-id=\"60d802055537737344b1783cec7574e2\">最简单的方式就是 Ping 一下，我们在 Ping 的时候看到的 <code>time=xxms</code>  一般<strong>接近于一个 RTT</strong></p><p data-lake-id=\"ea2c71281d817b8815ada0f84c65e387\"><strong><br /></strong></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22PING%20115.239.211.112%20(115.239.211.112)%3A%2056%20data%20bytes%5Cn64%20bytes%20from%20115.239.211.112%3A%20icmp_seq%3D0%20ttl%3D55%20time%3D4.411%20ms%22%2C%22id%22%3A%226pntV%22%7D\"></card><p data-lake-id=\"28be9d380dfce7d5e4a7c40af673c7c5\"><br /></p><p data-lake-id=\"2f340fe99ff3819e1a29c35cc3e9a305\">实际上就是一来一回（下面是 <code>tcpdump</code> 抓到的 <code>ping</code> ）：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%2211%3A59%3A42.631275%20IP%2030.38.61.21%20%3E%20115.239.211.112%3A%20ICMP%20echo%20request%2C%20id%2011482%2C%20seq%200%2C%20length%2064%5Cn11%3A59%3A42.635593%20IP%20115.239.211.112%20%3E%2030.38.61.21%3A%20ICMP%20echo%20reply%2C%20id%2011482%2C%20seq%200%2C%20length%2064%22%2C%22id%22%3A%22eP4yg%22%7D\"></card><h3 id=\"ORwmh\" data-lake-id=\"edfca786170b32a20e4d25a407c676ed\">建连需要多少个 RTT</h3><p data-lake-id=\"bd68d3a5009b831a52e330af75425a07\">TCP 一种面向连接的通讯协议，在两个目标间发送 TCP 数据之前，TCP 需要通过三次握手建立起连接。而这个连接的过程其实是在交换一些初始数据，其中最重要的是 <span>Sequence Number。</span></p><p data-lake-id=\"d62ff75f2bd039b0e0b38f5c61306634\"><br /></p><p data-lake-id=\"3f4da40a705675a10f24a60294ce6cb9\">很多地方尝试用各种看起来形象的比喻来形容三次握手，但是实际上握手的过程非常简单，为了避免造成错误的理解，我们就平铺直叙，后面会解释为什么一定要经过三次握手才能建立起连接。三次握手的过程如下：</p><p data-lake-id=\"e9aa99137cc2ac65c582a3083b269557\"><br /></p><ol start=\"1\" data-lake-id=\"ae782c153de151fcba33abab2649fbfe\"><li data-lake-id=\"3ba821df151261a3037b8db8b7101cef\">客户端向服务端发送 SYN，传输 seq = X</li><li data-lake-id=\"6aa1ce48a0476d48e744ac62ee3b5c59\">服务端向客户端发送 ACK X+1，表示收到，客户端可以从 X+1 作为 seq 发送消息。同时发送 SYN，seq = Y，把自己设置成 established 状态（可接收数据）</li><li data-lake-id=\"c0ad34e3667e458536c4a72709d24c93\">客户端向服务端发送 ACK Y+1<span>，表示收到，服务端可以从 Y+1 作为 seq 发送消息，</span><span>，把自己设置成 established 状态（可接收数据）</span></li></ol><p data-lake-id=\"f27a9d012a797e2ce40fd497eb70f3e3\"><br /></p><p data-lake-id=\"908da72338d6fc3b5215aa455a15be5d\"><strong>到了第三步客户端发送完 ACK 后就认为连接已经建立完毕（毕竟不会有第四个 ACK 再告诉它已经收到了 ACK），然后开始把应用层的数据（HTTP 报文）开始传输。而服务器端则是收到这个 ACK 后才会开始把收到的数据交付给应用层（HTTP）。</strong></p><p data-lake-id=\"eb0d2ec25de6dba421652cb31cfc53e7\"><strong><br /></strong></p><p data-lake-id=\"472507a4da8faa495cd27cd68e9e5d3d\"><strong>所以在这个过程中，客户端在建连上话费的时间是一个 RTT。</strong></p><p data-lake-id=\"dca7d273f012522e76f94aa259e2e0e7\"><br /></p><p data-lake-id=\"cebe87baaadd492ea20360aab9697fd4\">这种情况说的是纯粹的 <code>Connect</code> 时间，不包括 <code>SSL</code> ，所以只是对 <code>http</code> 协议而言的，如果是 <code>https</code> 协议还需要再考虑 SSL 握手的时间，我们后续会在别的文章中介绍。</p><h4 id=\"guKHx\" data-lake-id=\"b7bcf1c42823a1671a02646edee25075\">动手试试</h4><p data-lake-id=\"58a92a07d8dbc61f5ef32f8229e19671\">我们可以使用 <code>WireShark</code> 来抓取一次  <code>http</code> 请求来看看建连的过程。</p><p data-lake-id=\"6f82d2629bd5e1f4d3e91c0b00ea9bfe\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1584966581339-1ff4f09d-c1dc-4dab-a0ef-636e942cf5fa.png%22%2C%22originWidth%22%3A2192%2C%22originHeight%22%3A1194%2C%22name%22%3A%22image.png%22%2C%22size%22%3A1880284%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1027.5%2C%22y%22%3A6.85%2C%22width%22%3A134.71669999999995%2C%22height%22%3A29.683332999999998%2C%22text%22%3A%22Wi-FI%3AenO%22%7D%2C%7B%22x%22%3A1264.9667%2C%22y%22%3A52.516666%2C%22width%22%3A319.6666%2C%22height%22%3A52.516664000000006%2C%22text%22%3A%220Q%E8%B1%86I%22%7D%2C%7B%22x%22%3A36.533333%2C%22y%22%3A125.58333%2C%22width%22%3A335.649987%2C%22height%22%3A29.683329999999998%2C%22text%22%3A%22ip-addr220.181.38.148%22%7D%2C%7B%22x%22%3A9.133333%2C%22y%22%3A171.25%2C%22width%22%3A31.966667%2C%22height%22%3A25.11667%2C%22text%22%3A%22NO.%22%7D%2C%7B%22x%22%3A680.4333%2C%22y%22%3A171.25%2C%22width%22%3A159.83335999999997%2C%22height%22%3A29.683330000000012%2C%22text%22%3A%22Destination%22%7D%2C%7B%22x%22%3A1127.9667%2C%22y%22%3A171.25%2C%22width%22%3A171.25%2C%22height%22%3A25.11667%2C%22text%22%3A%22olLengt-lnfo%22%7D%2C%7B%22x%22%3A152.98334%2C%22y%22%3A173.53333%2C%22width%22%3A52.51666%2C%22height%22%3A22.833339999999993%2C%22text%22%3A%22Time%22%7D%2C%7B%22x%22%3A321.94998%2C%22y%22%3A173.53333%2C%22width%22%3A141.56668000000002%2C%22height%22%3A25.11667%2C%22text%22%3A%22Source%22%7D%2C%7B%22x%22%3A1011.51666%2C%22y%22%3A173.53333%2C%22width%22%3A123.30004000000008%2C%22height%22%3A22.833339999999993%2C%22text%22%3A%22Protocol0%22%7D%2C%7B%22x%22%3A68.5%2C%22y%22%3A203.21666%2C%22width%22%3A91.33332999999999%2C%22height%22%3A27.40001000000001%2C%22text%22%3A%22512464%22%7D%2C%7B%22x%22%3A687.2833%2C%22y%22%3A203.21666%2C%22width%22%3A221.48335999999995%2C%22height%22%3A27.40001000000001%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A1276.3833%2C%22y%22%3A203.21666%2C%22width%22%3A468.0834%2C%22height%22%3A27.40001000000001%2C%22text%22%3A%226023980%5BS%5DSeq-owin-65535%22%7D%2C%7B%22x%22%3A1778.7167%2C%22y%22%3A203.21666%2C%22width%22%3A401.86659999999983%2C%22height%22%3A27.40001000000001%2C%22text%22%3A%22Len-OMSS-1460WS-64TSva.%22%7D%2C%7B%22x%22%3A137%2C%22y%22%3A205.5%2C%22width%22%3A152.98334%2C%22height%22%3A25.11667%2C%22text%22%3A%22%3A464.067930%22%7D%2C%7B%22x%22%3A363.05%2C%22y%22%3A203.21666%2C%22width%22%3A198.65000000000003%2C%22height%22%3A25.11667%2C%22text%22%3A%2230.37.69.155%22%7D%2C%7B%22x%22%3A1029.7833%2C%22y%22%3A205.5%2C%22width%22%3A38.816699999999855%2C%22height%22%3A25.11667%2C%22text%22%3A%22TCP%22%7D%2C%7B%22x%22%3A1080.0166%2C%22y%22%3A223.76666%2C%22width%22%3A100.46670000000017%2C%22height%22%3A36.53334000000001%2C%22text%22%3A%221RTT%22%7D%2C%7B%22x%22%3A1025.2167%2C%22y%22%3A235.18333%2C%22width%22%3A50.2333000000001%2C%22height%22%3A29.683339999999987%2C%22text%22%3A%22TCP1%22%7D%2C%7B%22x%22%3A70.78333%2C%22y%22%3A237.46666%2C%22width%22%3A68.5%2C%22height%22%3A27.40001000000001%2C%22text%22%3A%2251256%22%7D%2C%7B%22x%22%3A360.76666%2C%22y%22%3A239.75%2C%22width%22%3A232.89994000000002%2C%22height%22%3A27.399999999999977%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A689.56665%2C%22y%22%3A239.75%2C%22width%22%3A200.93335000000002%2C%22height%22%3A29.68331999999998%2C%22text%22%3A%2230.37.69.155%22%7D%2C%7B%22x%22%3A1203.3167%2C%22y%22%3A239.75%2C%22width%22%3A595.9498999999998%2C%22height%22%3A29.68331999999998%2C%22text%22%3A%22788060239%5BY%2CACKseq-oAck-win%22%7D%2C%7B%22x%22%3A137%2C%22y%22%3A239.75%2C%22width%22%3A155.26666%2C%22height%22%3A25.11667%2C%22text%22%3A%22564.099483%22%7D%2C%7B%22x%22%3A1721.6333%2C%22y%22%3A239.75%2C%22width%22%3A452.1001000000001%2C%22height%22%3A25.11667%2C%22text%22%3A%22ck-1win-8192Len-OMSS-1452%22%7D%2C%7B%22x%22%3A70.78333%2C%22y%22%3A276.28333%2C%22width%22%3A70.78333999999998%2C%22height%22%3A27.399990000000003%2C%22text%22%3A%2251266%22%7D%2C%7B%22x%22%3A694.1333%2C%22y%22%3A276.28333%2C%22width%22%3A221.48334%2C%22height%22%3A25.11667%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A141.56667%2C%22y%22%3A276.28333%2C%22width%22%3A150.69999%2C%22height%22%3A25.11667%2C%22text%22%3A%22664%2C099568%22%7D%2C%7B%22x%22%3A1173.6333%2C%22y%22%3A276.28333%2C%22width%22%3A579.9667%2C%22height%22%3A29.683340000000044%2C%22text%22%3A%225460239%2B80TACKISeq1Ck-1Win-2%22%7D%2C%7B%22x%22%3A1516.1333%2C%22y%22%3A303.68332%2C%22width%22%3A595.9499999999998%2C%22height%22%3A41.10001%2C%22text%22%3A%22GET%E8%AF%B7%E6%B1%82%E5%92%8CACK%E5%90%8C%E6%97%B6%E5%8F%91%E5%87%BA%22%7D%2C%7B%22x%22%3A691.85%2C%22y%22%3A310.53333%2C%22width%22%3A230.61669999999992%2C%22height%22%3A27.399990000000003%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A1182.7666%2C%22y%22%3A310.53333%2C%22width%22%3A342.5%2C%22height%22%3A31.966670000000022%2C%22text%22%3A%22127GET%2FHTTP%2F1.1%22%7D%2C%7B%22x%22%3A66.21667%2C%22y%22%3A310.53333%2C%22width%22%3A75.35%2C%22height%22%3A29.683310000000006%2C%22text%22%3A%2251276%22%7D%2C%7B%22x%22%3A365.3333%2C%22y%22%3A310.53333%2C%22width%22%3A198.65004%2C%22height%22%3A29.683310000000006%2C%22text%22%3A%2230.37.69.155%22%7D%2C%7B%22x%22%3A1020.64996%2C%22y%22%3A312.81665%2C%22width%22%3A66.21674000000007%2C%22height%22%3A25.11667%2C%22text%22%3A%22HTTP%22%7D%2C%7B%22x%22%3A141.56667%2C%22y%22%3A312.81665%2C%22width%22%3A150.69999%2C%22height%22%3A25.11667%2C%22text%22%3A%22764.099648%22%7D%2C%7B%22x%22%3A365.3333%2C%22y%22%3A347.06665%2C%22width%22%3A223.76670000000001%2C%22height%22%3A27.399990000000003%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A696.4166%2C%22y%22%3A347.06665%2C%22width%22%3A198.65004999999996%2C%22height%22%3A25.11667%2C%22text%22%3A%2230.37.69.155%22%7D%2C%7B%22x%22%3A1022.9333%2C%22y%22%3A347.06665%2C%22width%22%3A47.94999999999993%2C%22height%22%3A22.833349999999996%2C%22text%22%3A%22TCP%22%7D%2C%7B%22x%22%3A68.5%2C%22y%22%3A347.06665%2C%22width%22%3A70.78333%2C%22height%22%3A27.399990000000003%2C%22text%22%3A%2251336%22%7D%2C%7B%22x%22%3A143.84999%2C%22y%22%3A349.35%2C%22width%22%3A148.41667%2C%22height%22%3A25.11663999999996%2C%22text%22%3A%22364.135146%22%7D%2C%7B%22x%22%3A1217.0166%2C%22y%22%3A349.35%2C%22width%22%3A790.0333%2C%22height%22%3A29.683329999999955%2C%22text%22%3A%22608069239%5BACK%5DSeq-1Ack-74Win-24704LenG%22%7D%2C%7B%22x%22%3A1221.5833%2C%22y%22%3A381.31665%2C%22width%22%3A835.6998999999998%2C%22height%22%3A31.966679999999997%2C%22text%22%3A%2259866023PH%2CCKck247Len305%22%7D%2C%7B%22x%22%3A68.5%2C%22y%22%3A383.6%2C%22width%22%3A68.5%2C%22height%22%3A27.399999999999977%2C%22text%22%3A%225134%22%7D%2C%7B%22x%22%3A365.3333%2C%22y%22%3A381.31665%2C%22width%22%3A232.90004%2C%22height%22%3A31.966679999999997%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A698.7%2C%22y%22%3A383.6%2C%22width%22%3A184.94995999999992%2C%22height%22%3A27.399999999999977%2C%22text%22%3A%2230.37.69.155%22%7D%2C%7B%22x%22%3A1025.2167%2C%22y%22%3A383.6%2C%22width%22%3A45.66660000000002%2C%22height%22%3A22.833319999999958%2C%22text%22%3A%22TCP%22%7D%2C%7B%22x%22%3A141.56667%2C%22y%22%3A385.88333%2C%22width%22%3A152.98333000000002%2C%22height%22%3A25.11667%2C%22text%22%3A%22464.135150%22%7D%2C%7B%22x%22%3A367.61667%2C%22y%22%3A417.85%2C%22width%22%3A223.76662999999996%2C%22height%22%3A29.683329999999955%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A696.4166%2C%22y%22%3A417.85%2C%22width%22%3A194.08339999999998%2C%22height%22%3A27.399999999999977%2C%22text%22%3A%2230.3769.155%22%7D%2C%7B%22x%22%3A66.21667%2C%22y%22%3A420.13333%2C%22width%22%3A70.78333%2C%22height%22%3A25.11667%2C%22text%22%3A%2251356%22%7D%2C%7B%22x%22%3A141.56667%2C%22y%22%3A420.13333%2C%22width%22%3A150.69999%2C%22height%22%3A25.11667%2C%22text%22%3A%22564.135151%22%7D%2C%7B%22x%22%3A1018.36664%2C%22y%22%3A420.13333%2C%22width%22%3A66.21666000000005%2C%22height%22%3A25.11667%2C%22text%22%3A%22HTTP%22%7D%2C%7B%22x%22%3A1185.0499%2C%22y%22%3A420.13333%2C%22width%22%3A609.6501000000001%2C%22height%22%3A29.68331999999998%2C%22text%22%3A%22135HTTP%2F1.12000K(text%2Fhtml)%22%7D%2C%7B%22x%22%3A369.9%2C%22y%22%3A454.38333%2C%22width%22%3A198.64999999999998%2C%22height%22%3A27.399999999999977%2C%22text%22%3A%2230.37.69.155%22%7D%2C%7B%22x%22%3A1237.5667%2C%22y%22%3A454.38333%2C%22width%22%3A753.5%2C%22height%22%3A34.25%2C%22text%22%3A%224602398%5BACK%5D5eq-74Ack306WIn261824Len%22%7D%2C%7B%22x%22%3A66.21667%2C%22y%22%3A456.66666%2C%22width%22%3A68.49999%2C%22height%22%3A25.11667%2C%22text%22%3A%225136%22%7D%2C%7B%22x%22%3A141.56667%2C%22y%22%3A456.66666%2C%22width%22%3A150.69999%2C%22height%22%3A22.83334000000002%2C%22text%22%3A%2264.135266%22%7D%2C%7B%22x%22%3A696.4166%2C%22y%22%3A456.66666%2C%22width%22%3A216.9167%2C%22height%22%3A25.11667%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A1022.9333%2C%22y%22%3A456.66666%2C%22width%22%3A47.94999999999993%2C%22height%22%3A22.83334000000002%2C%22text%22%3A%22TCP%22%7D%2C%7B%22x%22%3A369.9%2C%22y%22%3A490.91666%2C%22width%22%3A187.23329999999999%2C%22height%22%3A27.399990000000003%2C%22text%22%3A%2230.37.69.155%22%7D%2C%7B%22x%22%3A694.1333%2C%22y%22%3A490.91666%2C%22width%22%3A223.76666%2C%22height%22%3A29.683340000000044%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A1233%2C%22y%22%3A490.91666%2C%22width%22%3A760.3499999999999%2C%22height%22%3A29.683340000000044%2C%22text%22%3A%22460239%5BACK%5DSeq-74Ack-387WIn-261696Len0%22%7D%2C%7B%22x%22%3A66.21667%2C%22y%22%3A490.91666%2C%22width%22%3A73.06666000000001%2C%22height%22%3A27.399990000000003%2C%22text%22%3A%2251376%22%7D%2C%7B%22x%22%3A139.28333%2C%22y%22%3A495.48334%2C%22width%22%3A152.98333%2C%22height%22%3A25.116660000000024%2C%22text%22%3A%22764.135266%22%7D%2C%7B%22x%22%3A694.1333%2C%22y%22%3A525.1666%2C%22width%22%3A221.48334%2C%22height%22%3A31.966699999999946%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A1251.2666%2C%22y%22%3A525.1666%2C%22width%22%3A764.9167%2C%22height%22%3A31.966699999999946%2C%22text%22%3A%2260239%5BFIN%2CACKSq-74Ck3872244Len%22%7D%2C%7B%22x%22%3A367.61667%2C%22y%22%3A527.45%2C%22width%22%3A196.36667%2C%22height%22%3A27.399999999999977%2C%22text%22%3A%2230.37.69.155%22%7D%2C%7B%22x%22%3A66.21667%2C%22y%22%3A527.45%2C%22width%22%3A79.91666000000001%2C%22height%22%3A29.683299999999917%2C%22text%22%3A%2251386%22%7D%2C%7B%22x%22%3A141.56667%2C%22y%22%3A527.45%2C%22width%22%3A146.13331%2C%22height%22%3A27.399999999999977%2C%22text%22%3A%22864.135439%22%7D%2C%7B%22x%22%3A1025.2167%2C%22y%22%3A529.73334%2C%22width%22%3A45.66660000000002%2C%22height%22%3A22.833309999999983%2C%22text%22%3A%22TCP%22%7D%2C%7B%22x%22%3A367.61667%2C%22y%22%3A561.7%2C%22width%22%3A216.91663000000005%2C%22height%22%3A27.399999999999977%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A1235.2833%2C%22y%22%3A561.7%2C%22width%22%3A760.3499999999999%2C%22height%22%3A31.96659999999997%2C%22text%22%3A%228060239%5BACK%5DSeq-387Ack-75W1n24704Len-O%22%7D%2C%7B%22x%22%3A143.84999%2C%22y%22%3A563.98334%2C%22width%22%3A146.13335%2C%22height%22%3A27.399959999999965%2C%22text%22%3A%22964.168874%22%7D%2C%7B%22x%22%3A696.4166%2C%22y%22%3A563.98334%2C%22width%22%3A191.80009999999993%2C%22height%22%3A25.116660000000024%2C%22text%22%3A%2230.3769.155%22%7D%2C%7B%22x%22%3A1022.9333%2C%22y%22%3A566.26666%2C%22width%22%3A47.94999999999993%2C%22height%22%3A22.83334000000002%2C%22text%22%3A%22TCP%22%7D%2C%7B%22x%22%3A1217.0166%2C%22y%22%3A593.6666%2C%22width%22%3A778.6167%2C%22height%22%3A36.53340000000003%2C%22text%22%3A%2260860239%5BFINCK%5Dq387ACk75247Le%22%7D%2C%7B%22x%22%3A367.61667%2C%22y%22%3A598.23334%2C%22width%22%3A219.19997999999998%2C%22height%22%3A27.399959999999965%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A696.4166%2C%22y%22%3A598.23334%2C%22width%22%3A194.08339999999998%2C%22height%22%3A25.116660000000024%2C%22text%22%3A%2230.3769.155%22%7D%2C%7B%22x%22%3A100.46667%2C%22y%22%3A600.51666%2C%22width%22%3A187.23331%2C%22height%22%3A25.11663999999996%2C%22text%22%3A%2214064.168878%22%7D%2C%7B%22x%22%3A1020.64996%2C%22y%22%3A600.51666%2C%22width%22%3A52.51664000000005%2C%22height%22%3A25.11663999999996%2C%22text%22%3A%22TCP%22%7D%2C%7B%22x%22%3A1191.9%2C%22y%22%3A627.9166%2C%22width%22%3A774.05%2C%22height%22%3A36.53340000000003%2C%22text%22%3A%225460239CK%5D75Ck388WI6144L%22%7D%2C%7B%22x%22%3A369.9%2C%22y%22%3A632.48334%2C%22width%22%3A189.51660000000004%2C%22height%22%3A29.68326000000002%2C%22text%22%3A%2230.37.69.155%22%7D%2C%7B%22x%22%3A691.85%2C%22y%22%3A632.48334%2C%22width%22%3A221.48329999999999%2C%22height%22%3A27.399959999999965%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A1020.64996%2C%22y%22%3A634.76666%2C%22width%22%3A52.51664000000005%2C%22height%22%3A27.399940000000015%2C%22text%22%3A%22TCP%22%7D%2C%7B%22x%22%3A75.35%2C%22y%22%3A637.05%2C%22width%22%3A228.33332%2C%22height%22%3A25.116600000000062%2C%22text%22%3A%22514164.168967%22%7D%2C%7B%22x%22%3A86.76666%2C%22y%22%3A737.51666%2C%22width%22%3A1000.10004%2C%22height%22%3A34.25%2C%22text%22%3A%22Frame577ytesonwe(16bits7tu(%22%7D%2C%7B%22x%22%3A89.049995%2C%22y%22%3A774.05%2C%22width%22%3A954.4333050000001%2C%22height%22%3A31.966660000000047%2C%22text%22%3A%22thernetSAppledf%3Ae%3A6f(696ea%3A6t)D-%22%7D%2C%7B%22x%22%3A929.31665%2C%22y%22%3A774.05%2C%22width%22%3A621.06665%2C%22height%22%3A34.25%2C%22text%22%3A%22st%3AIETF-VRRP-VRID_Oe(%400%3A00%3A5e%3A00%3A61%3A0e)%22%7D%2C%7B%22x%22%3A79.916664%2C%22y%22%3A810.5833%2C%22width%22%3A931.599996%2C%22height%22%3A29.683359999999993%2C%22text%22%3A%22InternetProtocolverson43376%22%7D%2C%7B%22x%22%3A707.8333%2C%22y%22%3A840.26666%2C%22width%22%3A680.4332999999999%2C%22height%22%3A36.53333999999995%2C%22text%22%3A%2260239%2CDstport%3AooSegk7%22%7D%2C%7B%22x%22%3A57.083332%2C%22y%22%3A847.11664%2C%22width%22%3A774.0499679999999%2C%22height%22%3A31.966660000000047%2C%22text%22%3A%22TransmissionControlProtoo%22%7D%2C%7B%22x%22%3A43.38333%2C%22y%22%3A883.64996%2C%22width%22%3A447.53333%2C%22height%22%3A31.966679999999997%2C%22text%22%3A%22HypertextTransterProtocol%22%7D%2C%7B%22x%22%3A91.33333%2C%22y%22%3A1075.45%2C%22width%22%3A806.01667%2C%22height%22%3A29.683299999999917%2C%22text%22%3A%2200000500Q10e6c96cfdfea8450%22%7D%2C%7B%22x%22%3A15.983333%2C%22y%22%3A1077.7333%2C%22width%22%3A75.349997%2C%22height%22%3A22.833399999999983%2C%22text%22%3A%220000%22%7D%2C%7B%22x%22%3A11.416666%2C%22y%22%3A1107.4166%2C%22width%22%3A82.199994%2C%22height%22%3A22.833399999999983%2C%22text%22%3A%220010%22%7D%2C%7B%22x%22%3A105.03333%2C%22y%22%3A1107.4166%2C%22width%22%3A673.58331%2C%22height%22%3A25.116700000000037%2C%22text%22%3A%220071000040004006d37d1e254596%22%7D%2C%7B%22x%22%3A2004.7666%2C%22y%22%3A1153.0833%2C%22width%22%3A155.26659999999993%2C%22height%22%3A25.116700000000037%2C%22text%22%3A%22Prafile%3ADefault%22%7D%2C%7B%22x%22%3A118.73333%2C%22y%22%3A1155.3667%2C%22width%22%3A550.28333%2C%22height%22%3A25.116600000000062%2C%22text%22%3A%22wiresharkWi-Fi20200323202344XrFly.pcapng%22%7D%2C%7B%22x%22%3A1415.6666%2C%22y%22%3A1155.3667%2C%22width%22%3A406.4333999999999%2C%22height%22%3A25.116600000000062%2C%22text%22%3A%22Packets%3A16481Displayed13.1%25)%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22Wi-FI%3AenO%200Q%E8%B1%86I%20ip-addr220.181.38.148%20NO.%20Destination%20olLengt-lnfo%20Time%20Source%20Protocol0%20512464%20220.181.38.148%206023980%5BS%5DSeq-owin-65535%20Len-OMSS-1460WS-64TSva.%20%3A464.067930%2030.37.69.155%20TCP%201RTT%20TCP1%2051256%20220.181.38.148%2030.37.69.155%20788060239%5BY%2CACKseq-oAck-win%20564.099483%20ck-1win-8192Len-OMSS-1452%2051266%20220.181.38.148%20664%2C099568%205460239%2B80TACKISeq1Ck-1Win-2%20GET%E8%AF%B7%E6%B1%82%E5%92%8CACK%E5%90%8C%E6%97%B6%E5%8F%91%E5%87%BA%20220.181.38.148%20127GET%2FHTTP%2F1.1%2051276%2030.37.69.155%20HTTP%20764.099648%20220.181.38.148%2030.37.69.155%20TCP%2051336%20364.135146%20608069239%5BACK%5DSeq-1Ack-74Win-24704LenG%2059866023PH%2CCKck247Len305%205134%20220.181.38.148%2030.37.69.155%20TCP%20464.135150%20220.181.38.148%2030.3769.155%2051356%20564.135151%20HTTP%20135HTTP%2F1.12000K(text%2Fhtml)%2030.37.69.155%204602398%5BACK%5D5eq-74Ack306WIn261824Len%205136%2064.135266%20220.181.38.148%20TCP%2030.37.69.155%20220.181.38.148%20460239%5BACK%5DSeq-74Ack-387WIn-261696Len0%2051376%20764.135266%20220.181.38.148%2060239%5BFIN%2CACKSq-74Ck3872244Len%2030.37.69.155%2051386%20864.135439%20TCP%20220.181.38.148%208060239%5BACK%5DSeq-387Ack-75W1n24704Len-O%20964.168874%2030.3769.155%20TCP%2060860239%5BFINCK%5Dq387ACk75247Le%20220.181.38.148%2030.3769.155%2014064.168878%20TCP%205460239CK%5D75Ck388WI6144L%2030.37.69.155%20220.181.38.148%20TCP%20514164.168967%20Frame577ytesonwe(16bits7tu(%20thernetSAppledf%3Ae%3A6f(696ea%3A6t)D-%20st%3AIETF-VRRP-VRID_Oe(%400%3A00%3A5e%3A00%3A61%3A0e)%20InternetProtocolverson43376%2060239%2CDstport%3AooSegk7%20TransmissionControlProtoo%20HypertextTransterProtocol%2000000500Q10e6c96cfdfea8450%200000%200010%200071000040004006d37d1e254596%20Prafile%3ADefault%20wiresharkWi-Fi20200323202344XrFly.pcapng%20Packets%3A16481Displayed13.1%25)%22%2C%22width%22%3A1096%2C%22height%22%3A597%7D\"></card></p><p data-lake-id=\"3572ccc615c991183f2ec45a84451458\">可以看到这里从发起 <code>seq</code> 到收到 <code>ack</code> （经过 1 <code>RTT</code> ）后，客户端就没有再等待直接发起了 <code>GET / HTTP/1.1</code> 的请求。</p><h2 id=\"tmNZ6\" data-lake-id=\"6edabe9926215f72c168798265f3ba84\">如何优化建连时间</h2><h3 id=\"vhZdc\" data-lake-id=\"08f44c78a214025b18b2f1e4a4d41a47\">例子</h3><p data-lake-id=\"89d97211206b061653c3bb9178cb8943\">我们用一个简单的页面看看建连对网页性能的影响：<a href=\"https://xcodebuild.github.io/why-so-slow/connect/index.html\" target=\"_blank\">https://xcodebuild.github.io/why-so-slow/connect/index.html</a></p><p data-lake-id=\"ed2cb9a1d85cc99bca0f37ff7043a949\"><br /></p><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"86f246784c65207315ed344629b8e3a6\">这是一个测试页面，源代码托管在：<a href=\"https://github.com/xcodebuild/why-so-slow/blob/master/connect/index.html\" target=\"_blank\">https://github.com/xcodebuild/why-so-slow/blob/master/connect/index.html</a></p></blockquote><p data-lake-id=\"debcc747eadd173d286fd29fffd5b7ab\"><br /></p><p data-lake-id=\"690597af27dff4cc48006593d105fac8\">就像上面说的，我们在开发场景下往往不需要重新连接，包括 <code>Disable Cache</code> 是不会禁用 <code>TCP</code> 的连接复用的，所以我们使用 <a href=\"https://www.webpagetest.org/\" target=\"_blank\">Webpage Test</a> 来看一下这个页面的性能状况。</p><p data-lake-id=\"cce34c452da003791c918ff8c26958f1\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585020683958-c843ada1-7492-44d1-8c71-e65389fb9850.png%22%2C%22originWidth%22%3A1910%2C%22originHeight%22%3A1164%2C%22name%22%3A%22image.png%22%2C%22size%22%3A229615%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A773.94794%2C%22y%22%3A29.843752%2C%22width%22%3A322.3125600000001%2C%22height%22%3A41.781248000000005%2C%22text%22%3A%22WaterfallView%22%7D%2C%7B%22x%22%3A479.4896%2C%22y%22%3A139.27084%2C%22width%22%3A175.08334000000002%2C%22height%22%3A25.864580000000018%2C%22text%22%3A%22IRUMFirstPaint%22%7D%2C%7B%22x%22%3A921.1771%2C%22y%22%3A139.27084%2C%22width%22%3A238.7500000000001%2C%22height%22%3A23.875%2C%22text%22%3A%22DOMContentLoaded%22%7D%2C%7B%22x%22%3A1340.9792%2C%22y%22%3A139.27084%2C%22width%22%3A234.77089999999998%2C%22height%22%3A27.854180000000014%2C%22text%22%3A%22IDocumentComplete%22%7D%2C%7B%22x%22%3A302.4167%2C%22y%22%3A141.26042%2C%22width%22%3A145.23958%2C%22height%22%3A25.864599999999996%2C%22text%22%3A%22IStartRender%22%7D%2C%7B%22x%22%3A682.4271%2C%22y%22%3A141.26042%2C%22width%22%3A185.0313%2C%22height%22%3A21.885419999999982%2C%22text%22%3A%22IDoMInteractive%22%7D%2C%7B%22x%22%3A1223.5938%2C%22y%22%3A141.26042%2C%22width%22%3A91.52080000000001%2C%22height%22%3A21.885419999999982%2C%22text%22%3A%22OnLoaD%22%7D%2C%7B%22x%22%3A1191.7605%2C%22y%22%3A218.85417%2C%22width%22%3A61.67709999999988%2C%22height%22%3A23.875%2C%22text%22%3A%22Flash%22%7D%2C%7B%22x%22%3A1611.5626%2C%22y%22%3A218.85417%2C%22width%22%3A69.63540000000012%2C%22height%22%3A23.875%2C%22text%22%3A%22other%22%7D%2C%7B%22x%22%3A1730.9376%2C%22y%22%3A218.85417%2C%22width%22%3A145.23950000000013%2C%22height%22%3A23.875%2C%22text%22%3A%22JSExecution%22%7D%2C%7B%22x%22%3A45.760418%2C%22y%22%3A220.84377%2C%22width%22%3A55.708342%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%22wait%22%7D%2C%7B%22x%22%3A194.97917%2C%22y%22%3A220.84377%2C%22width%22%3A45.760429999999985%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%22dns%22%7D%2C%7B%22x%22%3A620.75%2C%22y%22%3A220.84377%2C%22width%22%3A53.71879999999999%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%22html%22%7D%2C%7B%22x%22%3A775.93756%2C%22y%22%3A220.84377%2C%22width%22%3A31.83334000000002%2C%22height%22%3A23.875%2C%22text%22%3A%22Js%22%7D%2C%7B%22x%22%3A915.2084%2C%22y%22%3A220.84377%2C%22width%22%3A41.78120000000001%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%22css%22%7D%2C%7B%22x%22%3A1044.5312%2C%22y%22%3A220.84377%2C%22width%22%3A63.666800000000194%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%22image%22%7D%2C%7B%22x%22%3A1335.0105%2C%22y%22%3A220.84377%2C%22width%22%3A59.6875%2C%22height%22%3A19.89582999999999%2C%22text%22%3A%22Font%22%7D%2C%7B%22x%22%3A1474.2814%2C%22y%22%3A220.84377%2C%22width%22%3A65.6561999999999%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%22VIdeo%22%7D%2C%7B%22x%22%3A318.33334%2C%22y%22%3A222.83334%2C%22width%22%3A87.54168999999996%2C%22height%22%3A19.895830000000018%2C%22text%22%3A%22connect%22%7D%2C%7B%22x%22%3A481.4792%2C%22y%22%3A222.83334%2C%22width%22%3A45.760400000000004%2C%22height%22%3A19.895830000000018%2C%22text%22%3A%22ssI%22%7D%2C%7B%22x%22%3A714.26044%2C%22y%22%3A296.44794%2C%22width%22%3A33.822959999999966%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%220.2%22%7D%2C%7B%22x%22%3A823.68756%2C%22y%22%3A296.44794%2C%22width%22%3A39.79164000000003%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%220.3%22%7D%2C%7B%22x%22%3A1048.5105%2C%22y%22%3A296.44794%2C%22width%22%3A39.79160000000002%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%220.5%22%7D%2C%7B%22x%22%3A1161.9167%2C%22y%22%3A296.44794%2C%22width%22%3A35.8125%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%220.6%22%7D%2C%7B%22x%22%3A1275.323%2C%22y%22%3A296.44794%2C%22width%22%3A35.8125%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%220.7%22%7D%2C%7B%22x%22%3A1382.7605%2C%22y%22%3A296.44794%2C%22width%22%3A43.77089999999998%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%220.8%22%7D%2C%7B%22x%22%3A1611.5626%2C%22y%22%3A296.44794%2C%22width%22%3A39.79160000000002%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%221.0%22%7D%2C%7B%22x%22%3A1722.9792%2C%22y%22%3A296.44794%2C%22width%22%3A37.802200000000084%2C%22height%22%3A23.875%2C%22text%22%3A%221.1%22%7D%2C%7B%22x%22%3A600.8542%2C%22y%22%3A298.4375%2C%22width%22%3A35.8125%2C%22height%22%3A19.89584000000002%2C%22text%22%3A%220.1%22%7D%2C%7B%22x%22%3A1496.1667%2C%22y%22%3A298.4375%2C%22width%22%3A41.7813000000001%2C%22height%22%3A19.89584000000002%2C%22text%22%3A%220.9%22%7D%2C%7B%22x%22%3A9.947917%2C%22y%22%3A302.4167%2C%22width%22%3A73.614593%2C%22height%22%3A23.875%2C%22text%22%3A%22step-1%22%7D%2C%7B%22x%22%3A47.750004%2C%22y%22%3A344.19794%2C%22width%22%3A459.593776%2C%22height%22%3A23.875%2C%22text%22%3A%221.xcodlebuiid.github.io-index.html%22%7D%2C%7B%22x%22%3A913.2188%2C%22y%22%3A376.03128%2C%22width%22%3A47.75%2C%22height%22%3A23.875%2C%22text%22%3A%22147g%22%7D%2C%7B%22x%22%3A47.750004%2C%22y%22%3A378.02084%2C%22width%22%3A457.604196%2C%22height%22%3A23.875%2C%22text%22%3A%222.ccn.jsdeliur.n...production.min.js%22%7D%2C%7B%22x%22%3A43.770836%2C%22y%22%3A411.84378%2C%22width%22%3A449.64586399999996%2C%22height%22%3A23.875%2C%22text%22%3A%223.cdn.jsdelivr.n...production.min.js%22%7D%2C%7B%22x%22%3A1617.5314%2C%22y%22%3A443.6771%2C%22width%22%3A65.6561999999999%2C%22height%22%3A25.864599999999996%2C%22text%22%3A%2237%E5%95%AAS%22%7D%2C%7B%22x%22%3A25.864584%2C%22y%22%3A447.65628%2C%22width%22%3A445.666696%2C%22height%22%3A21.88542000000001%2C%22text%22%3A%224.cert.int-x3.letsencrypt.org-%22%7D%2C%7B%22x%22%3A895.31256%2C%22y%22%3A479.4896%2C%22width%22%3A75.60414000000003%2C%22height%22%3A23.875%2C%22text%22%3A%22759NS%22%7D%2C%7B%22x%22%3A33.822918%2C%22y%22%3A479.4896%2C%22width%22%3A459.593782%2C%22height%22%3A23.875%2C%22text%22%3A%225.www.ocky7coo1b1%22%7D%2C%7B%22x%22%3A1382.7605%2C%22y%22%3A513.3125%2C%22width%22%3A45.76039999999989%2C%22height%22%3A23.875%2C%22text%22%3A%220.8%22%7D%2C%7B%22x%22%3A1496.1667%2C%22y%22%3A513.3125%2C%22width%22%3A45.76040000000012%2C%22height%22%3A23.875%2C%22text%22%3A%220.9%22%7D%2C%7B%22x%22%3A821.69794%2C%22y%22%3A515.3021%2C%22width%22%3A43.77085999999997%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%220.3%22%7D%2C%7B%22x%22%3A1159.9271%2C%22y%22%3A515.3021%2C%22width%22%3A39.79169999999999%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%220.6%22%7D%2C%7B%22x%22%3A1611.5626%2C%22y%22%3A515.3021%2C%22width%22%3A41.7813000000001%2C%22height%22%3A23.875%2C%22text%22%3A%221.0%22%7D%2C%7B%22x%22%3A1720.9896%2C%22y%22%3A515.3021%2C%22width%22%3A41.781299999999874%2C%22height%22%3A23.875%2C%22text%22%3A%221.1%22%7D%2C%7B%22x%22%3A1046.5209%2C%22y%22%3A517.2917%2C%22width%22%3A43.77080000000001%2C%22height%22%3A19.89580000000001%2C%22text%22%3A%220.5%22%7D%2C%7B%22x%22%3A1267.3646%2C%22y%22%3A517.2917%2C%22width%22%3A47.75%2C%22height%22%3A19.89580000000001%2C%22text%22%3A%220.7%22%7D%2C%7B%22x%22%3A95.50001%2C%22y%22%3A578.96875%2C%22width%22%3A192.98959%2C%22height%22%3A25.864649999999983%2C%22text%22%3A%22%E4%B8%80cpuUtilization%22%7D%2C%7B%22x%22%3A431.7396%2C%22y%22%3A608.8125%2C%22width%22%3A161.1563%2C%22height%22%3A25.864599999999996%2C%22text%22%3A%22Request%235%22%7D%2C%7B%22x%22%3A646.6146%2C%22y%22%3A608.8125%2C%22width%22%3A89.53129999999999%2C%22height%22%3A23.875059999999962%2C%22text%22%3A%22Details%22%7D%2C%7B%22x%22%3A1024.6355%2C%22y%22%3A608.8125%2C%22width%22%3A165.1353999999999%2C%22height%22%3A25.864599999999996%2C%22text%22%3A%22RawDetailsOB%22%7D%2C%7B%22x%22%3A1181.8125%2C%22y%22%3A608.8125%2C%22width%22%3A93.51050000000009%2C%22height%22%3A25.864599999999996%2C%22text%22%3A%22object%22%7D%2C%7B%22x%22%3A758.0313%2C%22y%22%3A612.7917%2C%22width%22%3A109.4271%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%22RequestT%22%7D%2C%7B%22x%22%3A885.3646%2C%22y%22%3A612.7917%2C%22width%22%3A119.375%2C%22height%22%3A23.875%2C%22text%22%3A%22Response%22%7D%2C%7B%22x%22%3A103.458336%2C%22y%22%3A674.4688%2C%22width%22%3A324.302104%2C%22height%22%3A29.843759999999975%2C%22text%22%3A%22BandsidthIn(o-5000Kblo%22%7D%2C%7B%22x%22%3A479.4896%2C%22y%22%3A680.43756%2C%22width%22%3A744.1042000000001%2C%22height%22%3A23.875%2C%22text%22%3A%22RL%3Ahttps%3A%2F%2Fwww.mocky.io%2F5e7978632d00007c0018b11%22%7D%2C%7B%22x%22%3A471.53128%2C%22y%22%3A714.26044%2C%22width%22%3A787.8751200000002%2C%22height%22%3A21.885459999999966%2C%22text%22%3A%22adedBy%3Ahttps%3A%2F%2Fxcodebuil.githuowwi%22%7D%2C%7B%22x%22%3A439.69794%2C%22y%22%3A746.0938%2C%22width%22%3A258.64585999999997%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%22Host%3AwwW.mocky.Io%22%7D%2C%7B%22x%22%3A97.489586%2C%22y%22%3A773.94794%2C%22width%22%3A246.708354%2C%22height%22%3A27.85415999999998%2C%22text%22%3A%22BrowserHainThread%22%7D%2C%7B%22x%22%3A437.70834%2C%22y%22%3A773.94794%2C%22width%22%3A248.69795999999997%2C%22height%22%3A25.864619999999945%2C%22text%22%3A%22IP%3A34.249.48.47%22%7D%2C%7B%22x%22%3A443.6771%2C%22y%22%3A805.7813%2C%22width%22%3A292.4688%2C%22height%22%3A27.85414000000003%2C%22text%22%3A%22Error%2FStatusCode%3A200%22%7D%2C%7B%22x%22%3A101.46876%2C%22y%22%3A841.5938%2C%22width%22%3A240.73958000000002%2C%22height%22%3A23.875%2C%22text%22%3A%22PareisInteractive%22%7D%2C%7B%22x%22%3A441.68753%2C%22y%22%3A841.5938%2C%22width%22%3A202.93752999999998%2C%22height%22%3A23.875%2C%22text%22%3A%22Priority%3AHigh%22%7D%2C%7B%22x%22%3A435.71878%2C%22y%22%3A871.43756%2C%22width%22%3A232.78127999999998%2C%22height%22%3A25.864540000000034%2C%22text%22%3A%22Protocol%3Ahttp%2F1.1%22%7D%2C%7B%22x%22%3A435.71878%2C%22y%22%3A903.2709%2C%22width%22%3A246.70832000000001%2C%22height%22%3A25.864540000000034%2C%22text%22%3A%22RequestID%3A4542.6%22%7D%2C%7B%22x%22%3A437.70834%2C%22y%22%3A933.1146%2C%22width%22%3A242.72921999999994%2C%22height%22%3A27.85419999999999%2C%22text%22%3A%22clientPort%3A34938%22%7D%2C%7B%22x%22%3A437.70834%2C%22y%22%3A968.9271%2C%22width%22%3A266.60421999999994%2C%22height%22%3A25.864599999999996%2C%22text%22%3A%22Discovered%3A0.427s%22%7D%2C%7B%22x%22%3A435.71878%2C%22y%22%3A1000.76044%2C%22width%22%3A294.45832%2C%22height%22%3A25.864559999999983%2C%22text%22%3A%22RequestStart%3A0.988s%22%7D%2C%7B%22x%22%3A437.70834%2C%22y%22%3A1032.5938%2C%22width%22%3A288.4896%2C%22height%22%3A25.864599999999882%2C%22text%22%3A%22DNSLoOkup%3A30ms%22%7D%2C%7B%22x%22%3A435.71878%2C%22y%22%3A1064.4271%2C%22width%22%3A344.19792%2C%22height%22%3A25.864599999999882%2C%22text%22%3A%22Initialconnection%3A197ms%22%7D%2C%7B%22x%22%3A198.95834%2C%22y%22%3A1088.3021%2C%22width%22%3A139.27086%2C%22height%22%3A27.85409999999979%2C%22text%22%3A%22DNSLookup%22%7D%2C%7B%22x%22%3A433.7292%2C%22y%22%3A1096.2605%2C%22width%22%3A350.1667%2C%22height%22%3A25.864499999999907%2C%22text%22%3A%22ssLNegotiation%3A314m%22%7D%2C%7B%22x%22%3A433.7292%2C%22y%22%3A1128.0938%2C%22width%22%3A350.1667%2C%22height%22%3A23.875%2C%22text%22%3A%22TimetoFIrsTByTE%3A217mS%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22WaterfallView%20IRUMFirstPaint%20DOMContentLoaded%20IDocumentComplete%20IStartRender%20IDoMInteractive%20OnLoaD%20Flash%20other%20JSExecution%20wait%20dns%20html%20Js%20css%20image%20Font%20VIdeo%20connect%20ssI%200.2%200.3%200.5%200.6%200.7%200.8%201.0%201.1%200.1%200.9%20step-1%201.xcodlebuiid.github.io-index.html%20147g%202.ccn.jsdeliur.n...production.min.js%203.cdn.jsdelivr.n...production.min.js%2037%E5%95%AAS%204.cert.int-x3.letsencrypt.org-%20759NS%205.www.ocky7coo1b1%200.8%200.9%200.3%200.6%201.0%201.1%200.5%200.7%20%E4%B8%80cpuUtilization%20Request%235%20Details%20RawDetailsOB%20object%20RequestT%20Response%20BandsidthIn(o-5000Kblo%20RL%3Ahttps%3A%2F%2Fwww.mocky.io%2F5e7978632d00007c0018b11%20adedBy%3Ahttps%3A%2F%2Fxcodebuil.githuowwi%20Host%3AwwW.mocky.Io%20BrowserHainThread%20IP%3A34.249.48.47%20Error%2FStatusCode%3A200%20PareisInteractive%20Priority%3AHigh%20Protocol%3Ahttp%2F1.1%20RequestID%3A4542.6%20clientPort%3A34938%20Discovered%3A0.427s%20RequestStart%3A0.988s%20DNSLoOkup%3A30ms%20Initialconnection%3A197ms%20DNSLookup%20ssLNegotiation%3A314m%20TimetoFIrsTByTE%3A217mS%22%2C%22width%22%3A955%2C%22height%22%3A582%7D\"></card></p><p data-lake-id=\"800631c30623d7de088278a8c16ba509\"><br /></p><p data-lake-id=\"7ef3910ef9899b2a2128d6981ee67e54\">我们可以看到这这个页面的 JavaScript 文件以及后面的 <code>fetch</code> 请求都有个很长的 <code>DNS + Connect + SSL</code> 时间。因为他们的域名不同，所以需要重新解析域名。不是同一个 TCP 连接，所以需要重新建连（包括 SSL 握手）。</p><p data-lake-id=\"afcf8a7dcc3fa92d20f24e4aeccb86fe\"><br /></p><p data-lake-id=\"9f704e170e8c88f5740719505af3123c\">在图中这个 <code>fetch</code> 请求的 <code>Connect + SSL</code> 一共耗时 <code>500ms</code> ，意味着用户必须等待这个建连完成后才能真正发起这个请求。</p><h3 id=\"zlxEH\" data-lake-id=\"0744e0d629afe6e1b5a63ceb54cdf4c5\">pre-connect</h3><p data-lake-id=\"a6a97aebcf654d199cd72cde8a0e26b7\">为了解决上面这种问题，Chrome 引入了 <a href=\"https://web.dev/uses-rel-preconnect/\" target=\"_blank\"><code>Preconnect</code></a> （现在大部分浏览器都是支持的）。</p><p data-lake-id=\"137884bddae0f61b77e65c88eaae4151\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585102598647-3d2dd3b0-fbfc-4bbc-99f5-10debdf6ee91.png%22%2C%22originWidth%22%3A736%2C%22originHeight%22%3A300%2C%22name%22%3A%22image.png%22%2C%22size%22%3A76442%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A9.2%2C%22y%22%3A17.633333%2C%22width%22%3A181.70000000000002%2C%22height%22%3A16.100001%2C%22text%22%3A%22WithoutPreconnect%22%7D%2C%7B%22x%22%3A99.666664%2C%22y%22%3A59.033333%2C%22width%22%3A101.199986%2C%22height%22%3A13.033332999999999%2C%22text%22%3A%22DNS%2FTCP%2FTLS%22%7D%2C%7B%22x%22%3A468.43332%2C%22y%22%3A92%2C%22width%22%3A99.66668000000004%2C%22height%22%3A13.799994999999996%2C%22text%22%3A%22DNS%2FTCP%2FTLS%22%7D%2C%7B%22x%22%3A602.6%2C%22y%22%3A121.13333%2C%22width%22%3A107.33330000000001%2C%22height%22%3A13.033330000000007%2C%22text%22%3A%22LoadTime-2.6s%22%7D%2C%7B%22x%22%3A11.5%2C%22y%22%3A167.9%2C%22width%22%3A151.03333%2C%22height%22%3A15.333319999999986%2C%22text%22%3A%22WithPreconnect%22%7D%2C%7B%22x%22%3A101.96666%2C%22y%22%3A213.9%2C%22width%22%3A98.13332999999999%2C%22height%22%3A13.033320000000003%2C%22text%22%3A%22DNS%2FTCP%2FTLS%22%7D%2C%7B%22x%22%3A100.43333%2C%22y%22%3A247.63333%2C%22width%22%3A98.89999999999999%2C%22height%22%3A13.79998999999998%2C%22text%22%3A%22DNS%2FTCP%2FTLS%22%7D%2C%7B%22x%22%3A601.8333%2C%22y%22%3A275.23334%2C%22width%22%3A110.40003999999999%2C%22height%22%3A16.09996000000001%2C%22text%22%3A%22LoadTime-2.1s%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22WithoutPreconnect%20DNS%2FTCP%2FTLS%20DNS%2FTCP%2FTLS%20LoadTime-2.6s%20WithPreconnect%20DNS%2FTCP%2FTLS%20DNS%2FTCP%2FTLS%20LoadTime-2.1s%22%2C%22width%22%3A368%2C%22height%22%3A150%7D\"></card></p><p data-lake-id=\"4fa8837eaf14cae7bb776402bb2a91b1\">我们可以在页面的 <code>&lt;head&gt;</code> 中加入</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%3Clink%20rel%3D%5C%22preconnect%5C%22%20href%3D%5C%22https%3A%2F%2Fwww.mocky.io%5C%22%20crossorigin%3E%22%2C%22id%22%3A%22yWrSj%22%7D\"></card><p data-lake-id=\"cdfa9385bcb1b76ec4f0ee2ac63b9dde\"><br /></p><p data-lake-id=\"53b5923343d19fd0acf27b19c6906bba\">来告知浏览器提前建立连接。</p><p data-lake-id=\"93387630c007351e1392c5103478f004\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585043302410-4fc5bf0c-b9f3-45ef-bba2-3ebbe7ce0ce0.png%22%2C%22originWidth%22%3A1994%2C%22originHeight%22%3A538%2C%22name%22%3A%22image.png%22%2C%22size%22%3A401496%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A828.7563%2C%22y%22%3A10.385417%2C%22width%22%3A330.25620000000004%2C%22height%22%3A43.618748999999994%2C%22text%22%3A%22WaterfallView%22%7D%2C%7B%22x%22%3A535.8875%2C%22y%22%3A120.47083%2C%22width%22%3A180.70624999999995%2C%22height%22%3A27.00208999999998%2C%22text%22%3A%22RUMFirstPaint%22%7D%2C%7B%22x%22%3A357.25833%2C%22y%22%3A122.54792%2C%22width%22%3A147.47293000000002%2C%22height%22%3A24.924999999999983%2C%22text%22%3A%22lStartRender%22%7D%2C%7B%22x%22%3A739.44165%2C%22y%22%3A124.625%2C%22width%22%3A178.62921000000006%2C%22height%22%3A22.847919999999988%2C%22text%22%3A%22IDomInteractive%22%7D%2C%7B%22x%22%3A1273.2521%2C%22y%22%3A124.625%2C%22width%22%3A101.77710000000002%2C%22height%22%3A24.92500000000001%2C%22text%22%3A%22OnLoad%22%7D%2C%7B%22x%22%3A1399.9542%2C%22y%22%3A124.625%2C%22width%22%3A216.01660000000015%2C%22height%22%3A24.92500000000001%2C%22text%22%3A%22IDocumentCompleto%22%7D%2C%7B%22x%22%3A984.53754%2C%22y%22%3A126.70209%2C%22width%22%3A240.94155999999998%2C%22height%22%3A24.92500000000001%2C%22text%22%3A%22DOMContentLoaded%22%7D%2C%7B%22x%22%3A1213.0167%2C%22y%22%3A164.08958%2C%22width%22%3A195.24580000000014%2C%22height%22%3A29.079169999999976%2C%22text%22%3A%22%E8%BF%99%E9%87%8C%E6%89%8D%E5%BC%80%E5%A7%8B%E8%B0%83%E7%94%A8fe%22%7D%2C%7B%22x%22%3A1402.0312%2C%22y%22%3A168.24374%2C%22width%22%3A78.92920000000004%2C%22height%22%3A22.84792999999999%2C%22text%22%3A%22%E7%94%A8fetch%22%7D%2C%7B%22x%22%3A679.20624%2C%22y%22%3A203.55417%2C%22width%22%3A49.850059999999985%2C%22height%22%3A20.77082999999999%2C%22text%22%3A%22html%22%7D%2C%7B%22x%22%3A834.9875%2C%22y%22%3A203.55417%2C%22width%22%3A29.079150000000027%2C%22height%22%3A27.00209000000001%2C%22text%22%3A%22js%22%7D%2C%7B%22x%22%3A1528.7334%2C%22y%22%3A203.55417%2C%22width%22%3A68.54369999999994%2C%22height%22%3A22.847910000000013%2C%22text%22%3A%22VidE0%22%7D%2C%7B%22x%22%3A1782.1376%2C%22y%22%3A203.55417%2C%22width%22%3A147.47289999999998%2C%22height%22%3A24.92500000000001%2C%22text%22%3A%22JSExEcution%22%7D%2C%7B%22x%22%3A373.875%2C%22y%22%3A203.55417%2C%22width%22%3A91.39166%2C%22height%22%3A20.77082999999999%2C%22text%22%3A%22connect%22%7D%2C%7B%22x%22%3A1244.173%2C%22y%22%3A205.63126%2C%22width%22%3A68.54369999999994%2C%22height%22%3A20.770820000000015%2C%22text%22%3A%22flash%22%7D%2C%7B%22x%22%3A1676.2063%2C%22y%22%3A205.63126%2C%22width%22%3A62.3125%2C%22height%22%3A20.770820000000015%2C%22text%22%3A%22other%22%7D%2C%7B%22x%22%3A1100.8541%2C%22y%22%3A207.70833%2C%22width%22%3A64.38969999999995%2C%22height%22%3A20.77084000000002%2C%22text%22%3A%22iMage%22%7D%2C%7B%22x%22%3A726.9792%2C%22y%22%3A278.32916%2C%22width%22%3A47.77290000000005%2C%22height%22%3A27.002079999999978%2C%22text%22%3A%220.2%22%7D%2C%7B%22x%22%3A1771.7521%2C%22y%22%3A278.32916%2C%22width%22%3A43.61869999999999%2C%22height%22%3A24.925020000000018%2C%22text%22%3A%221.3%22%7D%2C%7B%22x%22%3A635.5875%2C%22y%22%3A280.40625%2C%22width%22%3A43.61874%2C%22height%22%3A24.92498999999998%2C%22text%22%3A%220.1%22%7D%2C%7B%22x%22%3A828.7563%2C%22y%22%3A280.40625%2C%22width%22%3A39.464500000000044%2C%22height%22%3A22.84793000000002%2C%22text%22%3A%220.3%22%7D%2C%7B%22x%22%3A920.14795%2C%22y%22%3A280.40625%2C%22width%22%3A39.46454999999992%2C%22height%22%3A20.770849999999996%2C%22text%22%3A%220.4%22%7D%2C%7B%22x%22%3A1013.6167%2C%22y%22%3A280.40625%2C%22width%22%3A41.54160000000002%2C%22height%22%3A22.84793000000002%2C%22text%22%3A%220.5%22%7D%2C%7B%22x%22%3A1208.8625%2C%22y%22%3A280.40625%2C%22width%22%3A39.46460000000002%2C%22height%22%3A20.770849999999996%2C%22text%22%3A%220.7%22%7D%2C%7B%22x%22%3A1300.2542%2C%22y%22%3A280.40625%2C%22width%22%3A41.54169999999999%2C%22height%22%3A22.84793000000002%2C%22text%22%3A%220.8%22%7D%2C%7B%22x%22%3A1391.6459%2C%22y%22%3A280.40625%2C%22width%22%3A43.61869999999999%2C%22height%22%3A22.84793000000002%2C%22text%22%3A%220.9%22%7D%2C%7B%22x%22%3A1684.5146%2C%22y%22%3A280.40625%2C%22width%22%3A37.387500000000045%2C%22height%22%3A22.84793000000002%2C%22text%22%3A%221.2%22%7D%2C%7B%22x%22%3A1867.298%2C%22y%22%3A280.40625%2C%22width%22%3A41.54160000000002%2C%22height%22%3A22.84793000000002%2C%22text%22%3A%221.4%22%7D%2C%7B%22x%22%3A1111.2396%2C%22y%22%3A282.48334%2C%22width%22%3A41.54159999999979%2C%22height%22%3A20.77084000000002%2C%22text%22%3A%220.6%22%7D%2C%7B%22x%22%3A1584.8146%2C%22y%22%3A282.48334%2C%22width%22%3A39.46460000000002%2C%22height%22%3A22.84789999999998%2C%22text%22%3A%221.1%22%7D%2C%7B%22x%22%3A70.620834%2C%22y%22%3A286.6375%2C%22width%22%3A76.85208599999999%2C%22height%22%3A22.84790000000004%2C%22text%22%3A%22step-1%22%7D%2C%7B%22x%22%3A114.239586%2C%22y%22%3A326.10208%2C%22width%22%3A442.418714%2C%22height%22%3A27.002079999999978%2C%22text%22%3A%221.xcodebuild.sit...-precornect.htmi%22%7D%2C%7B%22x%22%3A953.3813%2C%22y%22%3A328.17917%2C%22width%22%3A58.15829999999994%2C%22height%22%3A22.84793000000002%2C%22text%22%3A%22375ms%22%7D%2C%7B%22x%22%3A1142.3959%2C%22y%22%3A359.33542%2C%22width%22%3A49.849899999999934%2C%22height%22%3A24.924980000000005%2C%22text%22%3A%22155%22%7D%2C%7B%22x%22%3A103.854164%2C%22y%22%3A359.33542%2C%22width%22%3A471.497936%2C%22height%22%3A29.07916%2C%22text%22%3A%222.cdn.jsdelivr.n...production.min.Js%22%7D%2C%7B%22x%22%3A1204.7084%2C%22y%22%3A394.64584%2C%22width%22%3A68.54369999999994%2C%22height%22%3A22.84789999999998%2C%22text%22%3A%22109%22%7D%2C%7B%22x%22%3A97.62292%2C%22y%22%3A396.72293%2C%22width%22%3A459.03538000000003%2C%22height%22%3A24.92498999999998%2C%22text%22%3A%223.cdn.Jsdelivr.n...produiction.min.J%22%7D%2C%7B%22x%22%3A1636.7417%2C%22y%22%3A427.87918%2C%22width%22%3A70.62079999999992%2C%22height%22%3A24.92498999999998%2C%22text%22%3A%2236NS%22%7D%2C%7B%22x%22%3A97.62292%2C%22y%22%3A429.95627%2C%22width%22%3A425.80207999999993%2C%22height%22%3A24.92498999999998%2C%22text%22%3A%224.cert.int-x3.letsencrypt.org-%22%7D%2C%7B%22x%22%3A963.76666%2C%22y%22%3A461.11252%2C%22width%22%3A76.85213999999996%2C%22height%22%3A24.924980000000005%2C%22text%22%3A%22880ms%22%7D%2C%7B%22x%22%3A103.854164%2C%22y%22%3A461.11252%2C%22width%22%3A456.95833600000003%2C%22height%22%3A27.002079999999978%2C%22text%22%3A%225.wWw.ocky.009c73113%22%7D%2C%7B%22x%22%3A1676.2063%2C%22y%22%3A496.4229%2C%22width%22%3A43.618799999999965%2C%22height%22%3A27.002099999999928%2C%22text%22%3A%221.2%22%7D%2C%7B%22x%22%3A1771.7521%2C%22y%22%3A496.4229%2C%22width%22%3A41.54169999999999%2C%22height%22%3A24.924999999999955%2C%22text%22%3A%221.3%22%7D%2C%7B%22x%22%3A635.5875%2C%22y%22%3A498.5%2C%22width%22%3A39.464560000000006%2C%22height%22%3A22.84789999999998%2C%22text%22%3A%220.1%22%7D%2C%7B%22x%22%3A915.9938%2C%22y%22%3A496.4229%2C%22width%22%3A45.69580000000008%2C%22height%22%3A24.924999999999955%2C%22text%22%3A%220.4%22%7D%2C%7B%22x%22%3A1017.7708%2C%22y%22%3A498.5%2C%22width%22%3A33.233400000000074%2C%22height%22%3A20.77080000000001%2C%22text%22%3A%220.5%22%7D%2C%7B%22x%22%3A1109.1625%2C%22y%22%3A498.5%2C%22width%22%3A41.54169999999999%2C%22height%22%3A22.84789999999998%2C%22text%22%3A%220.6%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22WaterfallView%20RUMFirstPaint%20lStartRender%20IDomInteractive%20OnLoad%20IDocumentCompleto%20DOMContentLoaded%20%E8%BF%99%E9%87%8C%E6%89%8D%E5%BC%80%E5%A7%8B%E8%B0%83%E7%94%A8fe%20%E7%94%A8fetch%20html%20js%20VidE0%20JSExEcution%20connect%20flash%20other%20iMage%200.2%201.3%200.1%200.3%200.4%200.5%200.7%200.8%200.9%201.2%201.4%200.6%201.1%20step-1%201.xcodebuild.sit...-precornect.htmi%20375ms%20155%202.cdn.jsdelivr.n...production.min.Js%20109%203.cdn.Jsdelivr.n...produiction.min.J%2036NS%204.cert.int-x3.letsencrypt.org-%20880ms%205.wWw.ocky.009c73113%201.2%201.3%200.1%200.4%200.5%200.6%22%2C%22width%22%3A997%2C%22height%22%3A269%7D\"></card></p><p data-lake-id=\"7e76604f0ebc96c939f484151b3ecb34\">可以看到这种情况下，我们在 JS 加载后前（实际上 <code>fetch</code> 这个时候才能开始执行），就开始建立连接。同时 <code>preconnect</code> 也附带着让浏览器提前进行了 DNS 解析。</p><h3 id=\"QIrav\" data-lake-id=\"78a8bcb0e57657edb1fe385347d6c081\">连接复用</h3><p data-lake-id=\"051097bcd53f9be26d32f8df0f6cd3ab\">当然如果直接使用同一个连接，即使不使用 <code>pre-connect</code> 就能天然减少额外的连接次数。</p><h4 id=\"cSppd\" data-lake-id=\"ca062d8c857698ffe7d142655feb0366\">域名收拢</h4><p data-lake-id=\"b294e747a4bb36c398558ede70b441a7\">在 HTTP 1 时代，为了解决阻塞的问题，很多网站都做了分散域名的优化让多个请求可以并行加载。而在 HTTP 2 普及后，已经具备了连接复用的能力，使用多个分散的域名只会让我们消耗更高的连接成本。</p><p data-lake-id=\"517fab71968a2ac8b1146c92b4d8f5ad\"><br /></p><p data-lake-id=\"81ac2cf0d027cb4e7b0c8779f03bc73f\">所以尽可能把域名收拢到相同域名，可以尽可能的减少建连的耗时。</p><h4 id=\"SbrZd\" data-lake-id=\"6100b4eaf78c4bd2b4c207e4eec8f186\">IP 收拢</h4><p data-lake-id=\"af9a8d3461a997e1086ca6c62fe57224\">我们都知道，一个 TCP 连接是由一个四元组组成的（源 IP、源端口、目标 IP、目标端口），和域名其实没有关系。所以看起来很反直觉的一点是，当两个请求域名不同，但来自同一个 IP 时，同样可以复用连接（虽然会额外解析一次 DNS）。</p><p data-lake-id=\"9409a5fdecfff4861dd6dc87b907fbfa\"><br /></p><p data-lake-id=\"a0f641aa7ebbfe70182d8b29d31f18b5\">如果我们试用了类似于阿里云全站加速的技术，把页面和静态资源的 IP 指向同一个可以帮助我们减少重复的连接建立。</p><h3 id=\"7UdXx\" data-lake-id=\"e58da19aee88d4850ea291dcdfc5151b\">连接为什么不复用</h3><h4 data-lake-id=\"1b651f3aa0903587dab0c887ae4e8dda\" id=\"8RMHh\">如何确定一个连接</h4><p data-lake-id=\"2086181818360c3aa34716b282df07fe\">看起来无论是 <code>pre-connect</code> 还是链接复用都非常简单，但实际应用中并非如此。由于一些浏览器安全策略，不同的连接之间复用会受到一些限制。</p><p data-lake-id=\"776bd91c2054a7ca7cf91ddcbfd600d6\"><br /></p><p data-lake-id=\"26a63609679fc28034647fcd6ee470aa\">在 <a href=\"https://fetch.spec.whatwg.org/#cors-protocol-and-credentials\" target=\"_blank\">https://fetch.spec.whatwg.org/#cors-protocol-and-credentials</a> 我们可以看到</p><p data-lake-id=\"c49ba6356e1fe8e92318d172d6832c64\"><br /></p><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"c9e20f7d007a80c9c582a97445231917\">A user agent has an associated connection pool. A connection pool consists of zero or more connections. Each connection is identified by an origin (an origin) and credentials (a boolean).</p></blockquote><p data-lake-id=\"120ee7167ba71fc7dd6f2f283d9e1102\"><br /></p><p data-lake-id=\"34c0f9d96c0bda363c43671201d68747\">即一个连接是由 <code>origin</code> 和 <code>credentials</code> 确定的，这里的 <code>origin</code> 并非单纯是指我们加载的连接的 <code>origin</code> ，而是对于页面上不同的资源来说，会遵循不同的策略（详细的策略见 <a href=\"https://html.spec.whatwg.org/multipage/origin.html#concept-origin\" target=\"_blank\">https://html.spec.whatwg.org/multipage/origin.html#concept-origin</a>）。</p><p data-lake-id=\"773a24606f8283d083f79baae5b63709\"><br /></p><p data-lake-id=\"6477e19caa9d2af0d79ab4ed3f510216\">例如对于图像而言（其实对于 <code>script/css</code> 等来说也是一样的）</p><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"44cf5ac260de4660c97ed053d5a201eb\">For images of <code><a href=\"https://html.spec.whatwg.org/multipage/embedded-content.html#the-img-element\" target=\"_blank\">img</a></code> elements</p><p data-lake-id=\"3743496dad55c944f878841d4fb6c9c9\">If the <a href=\"https://html.spec.whatwg.org/multipage/images.html#img-req-data\" target=\"_blank\">image data</a> is <a href=\"https://html.spec.whatwg.org/multipage/urls-and-fetching.html#cors-cross-origin\" target=\"_blank\">CORS-cross-origin</a></p><p data-lake-id=\"8559060a85109b496d1cf7cd0fe5fdce\" style=\"text-indent: 2em;\">A unique <a href=\"https://html.spec.whatwg.org/multipage/origin.html#concept-origin-opaque\" target=\"_blank\">opaque origin</a> assigned when the image is created.</p><p data-lake-id=\"8db595db0ead478d1926ced1d12d5bb0\">If the <a href=\"https://html.spec.whatwg.org/multipage/images.html#img-req-data\" target=\"_blank\">image data</a> is <a href=\"https://html.spec.whatwg.org/multipage/urls-and-fetching.html#cors-same-origin\" target=\"_blank\">CORS-same-origin</a></p><p data-lake-id=\"252c8fa7340ed1e946c894dd1704577e\" style=\"text-indent: 2em;\">The <code><a href=\"https://html.spec.whatwg.org/multipage/embedded-content.html#the-img-element\" target=\"_blank\">img</a></code> element's <a href=\"https://dom.spec.whatwg.org/#concept-node-document\" target=\"_blank\">node document</a>'s <a href=\"https://html.spec.whatwg.org/multipage/origin.html#concept-origin\" target=\"_blank\">origin</a>.</p></blockquote><p data-lake-id=\"38738fd5a20e55a0d99e57adc35a1d0d\"><br /></p><p data-lake-id=\"b3e1190c1e148dfbdb6f28134b8e9afa\">即在有 <code>crossorigin</code> 时（不是单纯的是另外一个域名时），则其 <code>origin</code> 是图片的 <code>origin</code> 。</p><p data-lake-id=\"2100e098b9b1fcb5ab9471fabcfcba5d\">如果没有（一般来说是没有的），则 <code>origin</code> 是页面相同的 <code>origin</code> 。</p><p data-lake-id=\"b12094b5d23261d28ea6a8c7598686c9\"><br /></p><p data-lake-id=\"4a5c9cf7adab611267b47aa24c8b93a6\">这意味着对于 <code>cors</code> 和 <code>non-cors</code> 的请求、<code><span>credentials=true</span></code> 和 <code><span>credentials=false</span></code> 的请求来说，他们的连接是不能复用的。</p><p data-lake-id=\"f4bc2d339c084a9ab5afa63396b6314d\"><br /></p><p data-lake-id=\"2c5a0136e3c65c9f0c98e8727e65e6bf\">例如 <a href=\"https://xcodebuild.github.io/why-so-slow/connect/cors-non-cors.html\" target=\"_blank\">https://xcodebuild.github.io/why-so-slow/connect/cors-non-cors.html</a> 这个页面中，有四个来自同一个域名的 <code>img</code> ，但是后面两个是 <code>crossorigin</code> 的</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%3Cimg%20src%3D%5C%22https%3A%2F%2Fi.picsum.photos%2Fid%2F1061%2F200%2F200.jpg%5C%22%2F%3E%5Cn%3Cimg%20src%3D%5C%22https%3A%2F%2Fi.picsum.photos%2Fid%2F1061%2F200%2F300.jpg%5C%22%2F%3E%5Cn%3Cimg%20src%3D%5C%22https%3A%2F%2Fi.picsum.photos%2Fid%2F1061%2F100%2F300.jpg%5C%22%20crossorigin%2F%3E%5Cn%3Cimg%20src%3D%5C%22https%3A%2F%2Fi.picsum.photos%2Fid%2F1061%2F300%2F300.jpg%5C%22%20crossorigin%2F%3E%22%2C%22id%22%3A%22qjOm4%22%7D\"></card><p data-lake-id=\"5868cac9301043b06379a47479551182\"><br /></p><p data-lake-id=\"9f8410e4d4ede8eb343bb39a9337f754\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585190581512-5105a07b-5871-4d57-ac19-829f926b978c.png%22%2C%22originWidth%22%3A1924%2C%22originHeight%22%3A916%2C%22name%22%3A%22image.png%22%2C%22size%22%3A538733%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A791.6458%2C%22y%22%3A36.075%2C%22width%22%3A322.6709000000001%2C%22height%22%3A42.08749999999999%2C%22text%22%3A%22WaterfallView%22%7D%2C%7B%22x%22%3A322.67084%2C%22y%22%3A144.3%2C%22width%22%3A144.29998999999998%2C%22height%22%3A26.05417%2C%22text%22%3A%22IStartRender%22%7D%2C%7B%22x%22%3A495.02917%2C%22y%22%3A144.3%2C%22width%22%3A180.37502999999992%2C%22height%22%3A26.05417%2C%22text%22%3A%22IRUMFirstPaint%22%7D%2C%7B%22x%22%3A939.95416%2C%22y%22%3A144.3%2C%22width%22%3A240.5000399999999%2C%22height%22%3A24.049999999999983%2C%22text%22%3A%22DOMContentLoaded%22%7D%2C%7B%22x%22%3A1352.8125%2C%22y%22%3A144.3%2C%22width%22%3A240.5%2C%22height%22%3A30.0625%2C%22text%22%3A%22dIDocumentComplete%22%7D%2C%7B%22x%22%3A697.45%2C%22y%22%3A146.30417%2C%22width%22%3A186.38749999999993%2C%22height%22%3A24.05000000000001%2C%22text%22%3A%22IDOMInteracitive%22%7D%2C%7B%22x%22%3A1238.575%2C%22y%22%3A146.30417%2C%22width%22%3A96.20000000000005%2C%22height%22%3A24.05000000000001%2C%22text%22%3A%22OnLoad%22%7D%2C%7B%22x%22%3A1745.6292%2C%22y%22%3A222.46251%2C%22width%22%3A142.29579999999987%2C%22height%22%3A26.054149999999993%2C%22text%22%3A%22JSExecution%22%7D%2C%7B%22x%22%3A1210.5167%2C%22y%22%3A224.46667%2C%22width%22%3A62.12920000000008%2C%22height%22%3A24.049990000000008%2C%22text%22%3A%22Flash%22%7D%2C%7B%22x%22%3A1356.8208%2C%22y%22%3A224.46667%2C%22width%22%3A50.10419999999999%2C%22height%22%3A22.045829999999995%2C%22text%22%3A%22font%22%7D%2C%7B%22x%22%3A66.1375%2C%22y%22%3A226.47084%2C%22width%22%3A52.108334%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%22wait%22%7D%2C%7B%22x%22%3A218.45416%2C%22y%22%3A226.47084%2C%22width%22%3A40.08334000000002%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%22dns%22%7D%2C%7B%22x%22%3A501.04166%2C%22y%22%3A226.47084%2C%22width%22%3A38.07919000000004%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%22ssI%22%7D%2C%7B%22x%22%3A639.32916%2C%22y%22%3A226.47084%2C%22width%22%3A50.10419000000002%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%22html%22%7D%2C%7B%22x%22%3A795.6542%2C%22y%22%3A226.47084%2C%22width%22%3A30.0625%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%22js%22%7D%2C%7B%22x%22%3A1062.2084%2C%22y%22%3A226.47084%2C%22width%22%3A58.12079999999992%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%22IMage%22%7D%2C%7B%22x%22%3A1495.1084%2C%22y%22%3A226.47084%2C%22width%22%3A64.13329999999996%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%22video%22%7D%2C%7B%22x%22%3A1633.3959%2C%22y%22%3A226.47084%2C%22width%22%3A60.125%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%22other%22%7D%2C%7B%22x%22%3A336.7%2C%22y%22%3A228.475%2C%22width%22%3A84.17500000000001%2C%22height%22%3A20.041660000000007%2C%22text%22%3A%22connect%22%7D%2C%7B%22x%22%3A931.9375%2C%22y%22%3A228.475%2C%22width%22%3A44.091699999999946%2C%22height%22%3A20.041660000000007%2C%22text%22%3A%22CSS%22%7D%2C%7B%22x%22%3A1639.4083%2C%22y%22%3A298.62085%2C%22width%22%3A46.09590000000003%2C%22height%22%3A26.054149999999993%2C%22text%22%3A%221.5%22%7D%2C%7B%22x%22%3A575.19586%2C%22y%22%3A300.625%2C%22width%22%3A44.091639999999984%2C%22height%22%3A24.05000000000001%2C%22text%22%3A%220.1%22%7D%2C%7B%22x%22%3A657.3667%2C%22y%22%3A300.625%2C%22width%22%3A40.08330000000001%2C%22height%22%3A24.05000000000001%2C%22text%22%3A%220.2%22%7D%2C%7B%22x%22%3A725.50836%2C%22y%22%3A300.625%2C%22width%22%3A44.09168%2C%22height%22%3A22.04584%2C%22text%22%3A%220.3%22%7D%2C%7B%22x%22%3A887.8458%2C%22y%22%3A300.625%2C%22width%22%3A30.0625%2C%22height%22%3A26.05417%2C%22text%22%3A%220.5%22%7D%2C%7B%22x%22%3A959.99585%2C%22y%22%3A300.625%2C%22width%22%3A44.09164999999996%2C%22height%22%3A24.05000000000001%2C%22text%22%3A%220.6%22%7D%2C%7B%22x%22%3A1032.1459%2C%22y%22%3A300.625%2C%22width%22%3A44.09159999999997%2C%22height%22%3A22.04584%2C%22text%22%3A%220.7%22%7D%2C%7B%22x%22%3A1186.4667%2C%22y%22%3A300.625%2C%22width%22%3A42.08750000000009%2C%22height%22%3A22.04584%2C%22text%22%3A%220.9%22%7D%2C%7B%22x%22%3A1491.1%2C%22y%22%3A300.625%2C%22width%22%3A44.09170000000017%2C%22height%22%3A24.05000000000001%2C%22text%22%3A%221.3%22%7D%2C%7B%22x%22%3A1565.2542%2C%22y%22%3A300.625%2C%22width%22%3A44.09159999999997%2C%22height%22%3A22.04584%2C%22text%22%3A%221.4%22%7D%2C%7B%22x%22%3A1719.5751%2C%22y%22%3A300.625%2C%22width%22%3A38.079099999999926%2C%22height%22%3A24.05000000000001%2C%22text%22%3A%221.6%22%7D%2C%7B%22x%22%3A1793.7291%2C%22y%22%3A300.625%2C%22width%22%3A40.08339999999998%2C%22height%22%3A24.05000000000001%2C%22text%22%3A%221.7%22%7D%2C%7B%22x%22%3A805.675%2C%22y%22%3A302.62918%2C%22width%22%3A44.09166000000005%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%220.4%22%7D%2C%7B%22x%22%3A1264.6292%2C%22y%22%3A302.62918%2C%22width%22%3A44.09159999999997%2C%22height%22%3A20.04165999999998%2C%22text%22%3A%221.0%22%7D%2C%7B%22x%22%3A1418.95%2C%22y%22%3A302.62918%2C%22width%22%3A36.075000000000045%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%221.2%22%7D%2C%7B%22x%22%3A32.066666%2C%22y%22%3A306.6375%2C%22width%22%3A76.158334%2C%22height%22%3A24.05000000000001%2C%22text%22%3A%22step-1%22%7D%2C%7B%22x%22%3A72.15%2C%22y%22%3A346.72083%2C%22width%22%3A456.95000000000005%2C%22height%22%3A26.05417%2C%22text%22%3A%221.xcodebuild.git...ors-non-cors.html%22%7D%2C%7B%22x%22%3A68.14167%2C%22y%22%3A382.79584%2C%22width%22%3A376.78335000000004%2C%22height%22%3A24.04998999999998%2C%22text%22%3A%222.i.picsum.photos-200.jpg%22%7D%2C%7B%22x%22%3A1012.1042%2C%22y%22%3A382.79584%2C%22width%22%3A68.14159999999993%2C%22height%22%3A20.04165999999998%2C%22text%22%3A%22178m%22%7D%2C%7B%22x%22%3A60.125%2C%22y%22%3A416.86667%2C%22width%22%3A344.71667%2C%22height%22%3A26.05417%2C%22text%22%3A%223.i.picsum.photos-300.jpg%22%7D%2C%7B%22x%22%3A58.120834%2C%22y%22%3A450.9375%2C%22width%22%3A352.733326%2C%22height%22%3A24.050020000000018%2C%22text%22%3A%224.i.picsum.photos-300.jpg%22%7D%2C%7B%22x%22%3A1016.1125%2C%22y%22%3A452.94168%2C%22width%22%3A70.14580000000001%2C%22height%22%3A22.04584%2C%22text%22%3A%22149m%22%7D%2C%7B%22x%22%3A62.129166%2C%22y%22%3A483.00418%2C%22width%22%3A354.737504%2C%22height%22%3A26.05417%2C%22text%22%3A%225.i.picsun.photos-300.jpg%22%7D%2C%7B%22x%22%3A1198.4917%2C%22y%22%3A515.07086%2C%22width%22%3A627.3042%2C%22height%22%3A30.0625%2C%22text%22%3A%220.91.01.11.21.3141.51.61.7%22%7D%2C%7B%22x%22%3A118.245834%2C%22y%22%3A585.2167%2C%22width%22%3A186.387496%2C%22height%22%3A26.054100000000062%2C%22text%22%3A%22-cpuUtilization%22%7D%2C%7B%22x%22%3A120.25%2C%22y%22%3A679.4125%2C%22width%22%3A352.73334%2C%22height%22%3A30.0625%2C%22text%22%3A%22BandhuidthIn(o-5.000kops)%22%7D%2C%7B%22x%22%3A116.24167%2C%22y%22%3A777.6167%2C%22width%22%3A244.50833%2C%22height%22%3A30.0625%2C%22text%22%3A%22BraowserMainThread%22%7D%2C%7B%22x%22%3A118.245834%2C%22y%22%3A847.7625%2C%22width%22%3A240.50001600000002%2C%22height%22%3A24.049999999999955%2C%22text%22%3A%22PageisInteractive%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22WaterfallView%20IStartRender%20IRUMFirstPaint%20DOMContentLoaded%20dIDocumentComplete%20IDOMInteracitive%20OnLoad%20JSExecution%20Flash%20font%20wait%20dns%20ssI%20html%20js%20IMage%20video%20other%20connect%20CSS%201.5%200.1%200.2%200.3%200.5%200.6%200.7%200.9%201.3%201.4%201.6%201.7%200.4%201.0%201.2%20step-1%201.xcodebuild.git...ors-non-cors.html%202.i.picsum.photos-200.jpg%20178m%203.i.picsum.photos-300.jpg%204.i.picsum.photos-300.jpg%20149m%205.i.picsun.photos-300.jpg%200.91.01.11.21.3141.51.61.7%20-cpuUtilization%20BandhuidthIn(o-5.000kops)%20BraowserMainThread%20PageisInteractive%22%2C%22width%22%3A962%2C%22height%22%3A458%7D\"></card></p><p data-lake-id=\"4da7628a3b87eee54f02504b0d61adf2\">这样就会发现前面两个和后面两个分别能够复用连接，但是 <code>cors</code> 的和 <code>non-cors</code> 的不能复用连接。</p><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"12aa126383eb69dbc7340c9f2205f3da\">其实这里如果有 crossorigin=&quot;use-credentials&quot;，其和 cors 也不能复用连接</p></blockquote><p data-lake-id=\"5600f710637ff3bdcf5cbe66c699316e\">具体这么做的原因主要是为了安全考虑，在 <a href=\"https://github.com/whatwg/fetch/issues/341\" target=\"_blank\">https://github.com/whatwg/fetch/issues/341</a> 中有提到，在这里不展开。</p><h4 data-lake-id=\"e872d748ee4bf8a610db0c1f81880c37\" id=\"0RLnO\">怎么避免不复用</h4><p data-lake-id=\"a5b74125bb3297ce3f0faff01fdf7578\">知道了怎么确定一个连接后，我们就知道怎么避免连接没有复用的问题。无论是我们尝试让两个请求复用一个连接还是通过 <code>preconnect</code> 去提前建连，都应该保持其 <code>cors</code> 和 <code>credentials</code> 的一致性。</p><p data-lake-id=\"80cb4a22b79d8b28edd5791528c8b817\"><br /></p><p data-lake-id=\"236c7fa1f7757395e21decdfb3ba3263\">由于实际规则其实蛮复杂的，并不能保证我们总是能判断策略是否符合预期，<strong>还是建议通过 </strong><strong><code>WebPageTest</code></strong><strong> 等工具验证是否有多余的建连。</strong></p><p data-lake-id=\"976905f2b2af29d300081e9a3216a9f4\"><br /></p><p data-lake-id=\"d45f6a86700f21654ffe21f1bce28cb7\">当然通过 Chrome Devtools 也能够验证这一点，我们可以在 Network 面板打开 <code>Connection ID</code> ，可以看到不同的连接使用的 <code>Connection ID</code> 是不同的。</p><p data-lake-id=\"0a3115b0b66ec5975000fb9396f6a6c3\"><br /></p><p data-lake-id=\"a2d4f632c2fa703c2abd8e56fa8c0440\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585191129731-7ff634e7-4184-4de0-98a0-d3339c388644.png%22%2C%22originWidth%22%3A2012%2C%22originHeight%22%3A202%2C%22name%22%3A%22image.png%22%2C%22size%22%3A181126%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A578.45%2C%22y%22%3A12.575%2C%22width%22%3A44.01249999999993%2C%22height%22%3A25.150000000000002%2C%22text%22%3A%22200%22%7D%2C%7B%22x%22%3A1288.9375%2C%22y%22%3A12.575%2C%22width%22%3A77.5458000000001%2C%22height%22%3A23.054166%2C%22text%22%3A%227.3KB%22%7D%2C%7B%22x%22%3A46.108334%2C%22y%22%3A14.670834%2C%22width%22%3A81.73749600000001%2C%22height%22%3A25.150001000000003%2C%22text%22%3A%22200.jpg%22%7D%2C%7B%22x%22%3A917.975%2C%22y%22%3A14.670834%2C%22width%22%3A217.96670000000006%2C%22height%22%3A25.150001000000003%2C%22text%22%3A%22cors-non-cors.html%22%7D%2C%7B%22x%22%3A1454.5083%2C%22y%22%3A14.670834%2C%22width%22%3A81.73749999999995%2C%22height%22%3A23.054166000000002%2C%22text%22%3A%22754Ms%22%7D%2C%7B%22x%22%3A1542.5333%2C%22y%22%3A14.670834%2C%22width%22%3A46.10829999999987%2C%22height%22%3A20.958332%2C%22text%22%3A%22229%22%7D%2C%7B%22x%22%3A750.30835%2C%22y%22%3A16.766666%2C%22width%22%3A50.29998999999998%2C%22height%22%3A23.054169%2C%22text%22%3A%22ipeg%22%7D%2C%7B%22x%22%3A46.108334%2C%22y%22%3A56.5875%2C%22width%22%3A79.641666%2C%22height%22%3A25.15%2C%22text%22%3A%22300.jpg%22%7D%2C%7B%22x%22%3A582.64166%2C%22y%22%3A56.5875%2C%22width%22%3A39.820839999999976%2C%22height%22%3A23.054170000000006%2C%22text%22%3A%22200%22%7D%2C%7B%22x%22%3A1282.65%2C%22y%22%3A56.5875%2C%22width%22%3A83.83330000000001%2C%22height%22%3A23.054170000000006%2C%22text%22%3A%2210.2kB%22%7D%2C%7B%22x%22%3A1450.3167%2C%22y%22%3A56.5875%2C%22width%22%3A83.83330000000001%2C%22height%22%3A25.15%2C%22text%22%3A%22755ms%22%7D%2C%7B%22x%22%3A1546.725%2C%22y%22%3A56.5875%2C%22width%22%3A39.82080000000019%2C%22height%22%3A23.054170000000006%2C%22text%22%3A%22229%22%7D%2C%7B%22x%22%3A750.30835%2C%22y%22%3A58.683334%2C%22width%22%3A52.39580999999998%2C%22height%22%3A20.958336000000003%2C%22text%22%3A%22jipeg%22%7D%2C%7B%22x%22%3A917.975%2C%22y%22%3A56.5875%2C%22width%22%3A224.2541%2C%22height%22%3A25.15%2C%22text%22%3A%22corS-non-cors.html%22%7D%2C%7B%22x%22%3A580.54584%2C%22y%22%3A96.40833%2C%22width%22%3A48.20416%2C%22height%22%3A25.150003999999996%2C%22text%22%3A%22200%22%7D%2C%7B%22x%22%3A1544.6292%2C%22y%22%3A96.40833%2C%22width%22%3A46.10829999999987%2C%22height%22%3A25.150003999999996%2C%22text%22%3A%22s243%22%7D%2C%7B%22x%22%3A44.0125%2C%22y%22%3A98.504166%2C%22width%22%3A83.83333%2C%22height%22%3A25.150003999999996%2C%22text%22%3A%22300.jpg%22%7D%2C%7B%22x%22%3A924.2625%2C%22y%22%3A98.504166%2C%22width%22%3A213.77499999999986%2C%22height%22%3A23.054168000000004%2C%22text%22%3A%22cors-non-cors.html%22%7D%2C%7B%22x%22%3A1291.0333%2C%22y%22%3A98.504166%2C%22width%22%3A73.35419999999999%2C%22height%22%3A20.958334000000008%2C%22text%22%3A%225.8kB%22%7D%2C%7B%22x%22%3A1450.3167%2C%22y%22%3A98.504166%2C%22width%22%3A81.73749999999995%2C%22height%22%3A23.054168000000004%2C%22text%22%3A%22753ms%22%7D%2C%7B%22x%22%3A748.2125%2C%22y%22%3A100.6%2C%22width%22%3A52.39584000000002%2C%22height%22%3A23.05417%2C%22text%22%3A%22ipog%22%7D%2C%7B%22x%22%3A580.54584%2C%22y%22%3A138.325%2C%22width%22%3A48.20416%2C%22height%22%3A25.150000000000006%2C%22text%22%3A%22200%22%7D%2C%7B%22x%22%3A44.0125%2C%22y%22%3A140.42084%2C%22width%22%3A83.83333%2C%22height%22%3A27.245830000000012%2C%22text%22%3A%22300.jpg%22%7D%2C%7B%22x%22%3A1278.4584%2C%22y%22%3A140.42084%2C%22width%22%3A85.92910000000006%2C%22height%22%3A25.149990000000003%2C%22text%22%3A%2214.6kB%22%7D%2C%7B%22x%22%3A1462.8917%2C%22y%22%3A138.325%2C%22width%22%3A62.875%2C%22height%22%3A27.245830000000012%2C%22text%22%3A%222.58s%22%7D%2C%7B%22x%22%3A1546.725%2C%22y%22%3A140.42084%2C%22width%22%3A44.012500000000045%2C%22height%22%3A25.149990000000003%2C%22text%22%3A%22243%22%7D%2C%7B%22x%22%3A752.4042%2C%22y%22%3A142.51666%2C%22width%22%3A50.299960000000056%2C%22height%22%3A23.05417%2C%22text%22%3A%22ipeg%22%7D%2C%7B%22x%22%3A924.2625%2C%22y%22%3A142.51666%2C%22width%22%3A209.5833%2C%22height%22%3A23.05417%2C%22text%22%3A%22corS-non-cors.html%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22200%207.3KB%20200.jpg%20cors-non-cors.html%20754Ms%20229%20ipeg%20300.jpg%20200%2010.2kB%20755ms%20229%20jipeg%20corS-non-cors.html%20200%20s243%20300.jpg%20cors-non-cors.html%205.8kB%20753ms%20ipog%20200%20300.jpg%2014.6kB%202.58s%20243%20ipeg%20corS-non-cors.html%22%2C%22width%22%3A1006%2C%22height%22%3A101%7D\"></card></p><h2 id=\"EyboO\" data-lake-id=\"81e2aaea9defd8d7f05478e785575ef3\">为什么要握手</h2><p data-lake-id=\"cde95d2636384e8380030a65f73e99ec\">为什么一定要先握手才能发送 HTTP 报文呢？这是由 TCP 本身的设计决定的，TCP 是一种可靠的传输层通信协议。所谓可靠，就是能保证数据流的顺序和完整性。</p><h3 id=\"qVj1E\" data-lake-id=\"ea5974f97f7c04f3e6b00ed283cd96d1\">ISN</h3><p data-lake-id=\"f80fa130199732a4efe2053f764896ca\">TCP 本身在网络层（IP 协议）的上层，应用层的下层（HTTP 协议）。当应用层发起请求时，把包传给 TCP，TCP 将其分割成合适的大小，将其传递给网络层。</p><p data-lake-id=\"e01f3acdba3193c10d03421381e3bdeb\"><br /></p><p data-lake-id=\"f5f90712762731f0e0e43a9f5bb49b6a\">为了保证不丢包，TCP 会给每一个包一个序号，接收端接受到后返回响应的确认消息。如果在合理的时间内没有收到确认，发送端则会认为发生了丢包，会尝试重新发送。</p><p data-lake-id=\"734d2352f27650d5e07762ad813c6e79\"><br /></p><p data-lake-id=\"264a4c99abf8ddb64c01bd36ce3e1df7\">而作为接收端，收到的包可能是乱序的（网络层不保证传输顺序）或者重复的（例如上面重新发送的时候就会重复），就会按照接收方的序号重新组建传输包的内容，然后将其交付给应用层。</p><p data-lake-id=\"9e0759b2beeb3429812ef38586a60bdd\"><br /></p><p data-lake-id=\"059e672ae7b629ceeb0d2bdc6a290df9\">理解了 TCP 保证顺序和完整性的原理，就理解了 TCP 包的序号（Sequence Number<strong>）</strong>的重要性，而 TCP 握手时就是为了相互交换初始序列号（ISN，Inital Sequence Number<strong>），</strong>从而保证互相收到的包都能够保持正确的顺序。</p><h4 id=\"MZ1LO\" data-lake-id=\"5cce42754381d63a51a1dc3e7956a09d\">为什么不能用固定值</h4><p data-lake-id=\"18011ddb451b01aa6ba276337fff3b8e\">从 ISN 的使用场景很自然可以想到，只要我们统一用一个固定值（例如0）作为 ISN，不就可以直接避免握手的性能损耗了么？</p><p data-lake-id=\"a2586b51e95547afd1edb1ed910b7fc9\"><br /></p><h5 id=\"Uj6iu\" data-lake-id=\"9d4f80a69f9a2664d2d6f0159be0e6b2\">避免相邻的 TCP 连接互相干扰</h5><p data-lake-id=\"8bf52e2b1a4316490f35ca9d6b04db7f\">假设我们把 ISN 统一设置为 0，当我们的客户端和一个服务器建立起连接后传输了一部分数据包后，突然网络中断了，这个时候他们之间重新建立起连接，ISN 仍然为 0。</p><p data-lake-id=\"d29f47fe1cae82b12397edfea2e924d0\"><br /></p><p data-lake-id=\"15d28bdcec02026342161eb18b1cbf03\">这个时候服务器端可能同时收到序号为 N 的包，但却无从判断这个包属于哪一个 TCP 连接。</p><h3 id=\"RPdQe\" data-lake-id=\"7c95bc17c4e4f24397713d76f9f74d3f\">结论</h3><p data-lake-id=\"63d7a2e8999188e7ba6aa1b2379b27c2\">TCP 为了确保能够把数据按照正确顺序、完整的发送给目标，必须通过握手同步 ISN。而由于 TCP 是全双工的（即双向通信），握手至少需要三次才能完成。</p><p data-lake-id=\"a2eeb26c9d779f5c0c3e49318325be5e\"><br /></p><p data-lake-id=\"a49c46cc5dca4d8d5a0845bb2cec370f\">其实对于客户端（浏览器）来说，从发送 ACK 到接受到 SYN-ACK 的过程就已经完成了 TCP 的建连，此时就可以开始给服务器端传输数据了。</p><h2 data-lake-id=\"33517611d33f530fc641ce7720d99b7c\" id=\"CeCLZ\">能不能更快一点</h2><h3 data-lake-id=\"1efdc8ddd8a0577afe77d27d70682d30\" id=\"IPdfI\">TCP Fast Open</h3><p data-lake-id=\"d0eb46a0c03ff2ebf3ebeabf0b1956a2\">TCP 协议每次都要等待 SYN-ACK+SYN-ACK 后，服务端的 TCP 才会把接收到的数据包传输给应用层，这样当连接不稳定时总是需要重新建立连接。那么，为什么不直接在第一次传输 SYN 时直接发送数据呢？</p><p data-lake-id=\"6fe199de0acf7f46d8652bc017a7e331\"><br /></p><p data-lake-id=\"2ac239e483c6bd375d42c59ff1c429e0\">事实上在 TCP 上有一个拓展标准是支持这么做的，称之为 TCP Fast Open，在 TFO 第一次建立连接时和正常的三次握手是相同的，但客户端会额外拿到一个 TFO Cookie。而当之后再重新建立连接（例如说断网后重连，或者移动设备切换网络登）时，则直接由 SYN 携带 TFO Cookie 和数据发送。服务端收到校验 Cookie 有效直接把数据交付给应用层。</p><p data-lake-id=\"a736d223f5c5752a64eaf631f7d69717\"><br /></p><p data-lake-id=\"9c165643bdb5ed9dfa455d1176bdb58e\">然而 TFO 并没有在所有的客户端和服务端默认打开，目前绝大多数浏览器都是不支持的，而且由于 TCP 作为协议层由操作系统实现，无法由应用层的浏览器、客户端等自由控制。</p><h3 data-lake-id=\"513c89fb34f3685e7a5d4da8f26831d5\" id=\"Yk40Q\">QUIC/HTTP3</h3><p data-lake-id=\"3d4080ad9779ba79973b59c1547da18c\">QUIC 和 HTTP3 也解决了建连耗时的问题，不在本文展开，后续会在其他文章介绍。</p><h2 data-lake-id=\"9338d05edc1197048619caa01d340429\" id=\"M0DPI\">总结</h2><p data-lake-id=\"b5dfaef9a22789393626a871f788c0b4\">由于 HTTP 是基于 TCP 的，而 TCP 为了可靠性是面向连接的，需要通过三次握手建立连接。</p><p data-lake-id=\"2bb56bc5bcd4debb387b8c681334888e\"><br /></p><p data-lake-id=\"2e3efb623bbc2f4c42176684612714d3\">在 HTTP2 后我们有了多路复用可以让多个请求在一个连接中进行，但是连接的复用并不是单纯由域名决定的，同一个域名的连接可能不能复用一个连接，而不同的域名其实也可能复用一个连接。我们需要尽可能确定连接被正确的复用了。如果使用了 CDN 技术，我们可以尝试让页面和资源使用相同的 IP 从而复用链接。</p><p data-lake-id=\"7c8f71d4911813d5114e8807269f0c17\"><br /></p><p data-lake-id=\"d106bc70ca5c39b06d8855b1bac12469\">除此之外，我们可以使用 <code>preconnect</code> 来提前建连，同样的，也需要确定这个提前建立的连接被正确复用了。这对于即将发起的请求、即将到来的 <code>redirect</code> 等非常有效。<span style=\"background-color: transparent;\"><br /></span></p><h2 data-lake-id=\"4ce15ad4ba6bcd2a8e4b85ad54ecf2cd\" id=\"MzPEp\">拓展阅读</h2><ul data-lake-id=\"90b7a58b04b97e8452e8bbd6083abeb6\"><li data-lake-id=\"753323fd1967269bdc238849416b4f77\"><a href=\"https://crenshaw.dev/preconnect-resource-hint-crossorigin-attribute/\" target=\"_blank\">preconnect resource hint and the crossorigin attribute</a></li><li data-lake-id=\"f1e180aa7f197bed5e2efa18a0c1b283\"><a href=\"https://github.com/whatwg/fetch/issues/341\" target=\"_blank\">https://github.com/whatwg/fetch/issues/341</a></li></ul>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><p data-lake-id=\"701b726d13b99afe12db80975f7cb050\">我们都知道 <code>HTTP</code> 是基于 <code>TCP</code> 的，而 <code>TCP</code> 是面向连接的。当我们向服务器请求一个页面时，首先需要建立 <code>TCP</code> 连接，才能开始真正开始传输内容。</p><p data-lake-id=\"2e663bb2a08b41d7082093e13ad0ed17\"><br /></p><p data-lake-id=\"c84cb01b549a897e8723dd026d58773d\">这个时间平时不容易被人察觉，因为开发场景下我们往往不需要重新建立连接。但是在有些场景（尤其是新用户场景、landing page 等）却会对页面的性能造成很大的影响。</p><p data-lake-id=\"26e68a98b2709fa5aa9364dce0c211d1\"><br /></p><p data-lake-id=\"dddf6360027e7afba073a9056f10848a\">图中 TCP 的部分为我们常说的建连时间（这里包含了 SSL 握手时间，下文的建连时间也指的是这段时间），前面的 DNS 时间往往和建连时间同时出现，后面会讲到这一点。</p><p data-lake-id=\"3ad0e4f28cc587e81f58066c8454be57\"><br /></p><p data-lake-id=\"ba244ba214d69e53eb135f34fa29ef64\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1584964408688-4c021c34-501c-408c-a704-1f30656ccbb1.png%22%2C%22originWidth%22%3A1473%2C%22originHeight%22%3A879%2C%22name%22%3A%22image.png%22%2C%22size%22%3A106021%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A425.02188%2C%22y%22%3A10.740625%2C%22width%22%3A144.23131999999998%2C%22height%22%3A18.412501%2C%22text%22%3A%22navigationStart%22%7D%2C%7B%22x%22%3A451.10626%2C%22y%22%3A47.565628%2C%22width%22%3A121.21564000000001%2C%22height%22%3A18.412501999999996%2C%22text%22%3A%22redirectstart%22%7D%2C%7B%22x%22%3A463.38126%2C%22y%22%3A84.390625%2C%22width%22%3A113.54379000000006%2C%22height%22%3A21.481255000000004%2C%22text%22%3A%22redirectEnd%22%7D%2C%7B%22x%22%3A501.74063%2C%22y%22%3A118.14688%2C%22width%22%3A105.87192000000005%2C%22height%22%3A19.946870000000004%2C%22text%22%3A%22fetchStart%22%7D%2C%7B%22x%22%3A556.97815%2C%22y%22%3A148.83438%2C%22width%22%3A193.33124999999995%2C%22height%22%3A18.412509999999997%2C%22text%22%3A%22domainLookupStart%22%7D%2C%7B%22x%22%3A601.47504%2C%22y%22%3A181.05626%2C%22width%22%3A148.83435999999995%2C%22height%22%3A16.87813%2C%22text%22%3A%22domainLookupEng%22%7D%2C%7B%22x%22%3A664.3844%2C%22y%22%3A213.27814%2C%22width%22%3A110.47503999999992%2C%22height%22%3A19.946859999999987%2C%22text%22%3A%22connectstart%22%7D%2C%7B%22x%22%3A705.8125%2C%22y%22%3A250.10313%2C%22width%22%3A217.8813%2C%22height%22%3A19.946890000000025%2C%22text%22%3A%22(secureConnectionStart)%22%7D%2C%7B%22x%22%3A727.29376%2C%22y%22%3A285.39377%2C%22width%22%3A108.94067999999993%2C%22height%22%3A18.412499999999966%2C%22text%22%3A%22connectEnd%22%7D%2C%7B%22x%22%3A751.8438%2C%22y%22%3A313.0125%2C%22width%22%3A135.02499999999998%2C%22height%22%3A19.94688000000002%2C%22text%22%3A%22regueststart%22%7D%2C%7B%22x%22%3A833.16565%2C%22y%22%3A348.30313%2C%22width%22%3A130.42184999999995%2C%22height%22%3A18.412509999999997%2C%22text%22%3A%22responseStart%22%7D%2C%7B%22x%22%3A914.48755%2C%22y%22%3A383.59378%2C%22width%22%3A121.2155499999999%2C%22height%22%3A16.878120000000024%2C%22text%22%3A%22responseEnd%22%7D%2C%7B%22x%22%3A21.48125%2C%22y%22%3A463.38126%2C%22width%22%3A62.909375%2C%22height%22%3A18.412500000000023%2C%22text%22%3A%22Prompt%22%7D%2C%7B%22x%22%3A296.1344%2C%22y%22%3A475.65628%2C%22width%22%3A41.42809999999997%2C%22height%22%3A19.946870000000047%2C%22text%22%3A%22App%22%7D%2C%7B%22x%22%3A386.6625%2C%22y%22%3A486.39688%2C%22width%22%3A39.89376999999996%2C%22height%22%3A18.412519999999972%2C%22text%22%3A%22DNS%22%7D%2C%7B%22x%22%3A756.4469%2C%22y%22%3A486.39688%2C%22width%22%3A87.45939999999996%2C%22height%22%3A19.94689999999997%2C%22text%22%3A%22Response%22%7D%2C%7B%22x%22%3A471.05313%2C%22y%22%3A487.93127%2C%22width%22%3A33.75626999999997%2C%22height%22%3A16.87813%2C%22text%22%3A%22TCP%22%7D%2C%7B%22x%22%3A997.3438%2C%22y%22%3A487.93127%2C%22width%22%3A95.13130000000012%2C%22height%22%3A19.94686999999999%2C%22text%22%3A%22Processing%22%7D%2C%7B%22x%22%3A35.290627%2C%22y%22%3A489.46564%2C%22width%22%3A32.221878000000004%2C%22height%22%3A15.343759999999975%2C%22text%22%3A%22for%22%7D%2C%7B%22x%22%3A153.4375%2C%22y%22%3A489.46564%2C%22width%22%3A72.11563000000001%2C%22height%22%3A15.343759999999975%2C%22text%22%3A%22redirect%22%7D%2C%7B%22x%22%3A587.66565%2C%22y%22%3A489.46564%2C%22width%22%3A75.18439000000001%2C%22height%22%3A15.343759999999975%2C%22text%22%3A%22Request%22%7D%2C%7B%22x%22%3A1215.2251%2C%22y%22%3A489.46564%2C%22width%22%3A69.04689999999982%2C%22height%22%3A15.343759999999975%2C%22text%22%3A%22onLoad%22%7D%2C%7B%22x%22%3A288.46252%2C%22y%22%3A501.74063%2C%22width%22%3A53.703130000000044%2C%22height%22%3A15.34376999999995%2C%22text%22%3A%22cache%22%7D%2C%7B%22x%22%3A21.48125%2C%22y%22%3A514.0156%2C%22width%22%3A61.375005%2C%22height%22%3A18.4125600000001%2C%22text%22%3A%22unload%22%7D%2C%7B%22x%22%3A138.09375%2C%22y%22%3A553.9094%2C%22width%22%3A64.44375%2C%22height%22%3A18.412500000000023%2C%22text%22%3A%22unIoaD%22%7D%2C%7B%22x%22%3A1299.6157%2C%22y%22%3A583.0625%2C%22width%22%3A141.1624999999999%2C%22height%22%3A19.946900000000028%2C%22text%22%3A%22LoadEventEnd%22%7D%2C%7B%22x%22%3A1279.6688%2C%22y%22%3A622.9563%2C%22width%22%3A144.23120000000017%2C%22height%22%3A16.878099999999904%2C%22text%22%3A%22loadEventstart%22%7D%2C%7B%22x%22%3A1221.3625%2C%22y%22%3A656.7125%2C%22width%22%3A136.5594000000001%2C%22height%22%3A19.946900000000028%2C%22text%22%3A%22domComplete%22%7D%2C%7B%22x%22%3A1178.4%2C%22y%22%3A695.0719%2C%22width%22%3A185.6594%2C%22height%22%3A21.48126000000002%2C%22text%22%3A%22domContentLoaded%22%7D%2C%7B%22x%22%3A1133.9032%2C%22y%22%3A733.4313%2C%22width%22%3A142.69690000000014%2C%22height%22%3A19.946900000000028%2C%22text%22%3A%22domlnteractive%22%7D%2C%7B%22x%22%3A1104.75%2C%22y%22%3A771.79065%2C%22width%22%3A118.14699999999993%2C%22height%22%3A19.946900000000028%2C%22text%22%3A%22domloading%22%7D%2C%7B%22x%22%3A1040.3063%2C%22y%22%3A805.54694%2C%22width%22%3A102.80310000000009%2C%22height%22%3A18.41246000000001%2C%22text%22%3A%22unloadEnd%22%7D%2C%7B%22x%22%3A1009.6188%2C%22y%22%3A845.4407%2C%22width%22%3A113.54380000000015%2C%22height%22%3A15.343700000000013%2C%22text%22%3A%22unloadstart%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22navigationStart%20redirectstart%20redirectEnd%20fetchStart%20domainLookupStart%20domainLookupEng%20connectstart%20(secureConnectionStart)%20connectEnd%20regueststart%20responseStart%20responseEnd%20Prompt%20App%20DNS%20Response%20TCP%20Processing%20for%20redirect%20Request%20onLoad%20cache%20unload%20unIoaD%20LoadEventEnd%20loadEventstart%20domComplete%20domContentLoaded%20domlnteractive%20domloading%20unloadEnd%20unloadstart%22%2C%22width%22%3A641%2C%22height%22%3A383%7D\"></card></p><h2 id=\"7I6OJ\" data-lake-id=\"ed139714b8defd154c0c9a2ce9b80c1e\">建连应该耗时多久</h2><h3 id=\"ppSgn\" data-lake-id=\"aec6fc99a23c036e3e4b42fde7999e1e\">RTT</h3><p data-lake-id=\"45bf22c587175efb792b5b45f3fca0b9\">在介绍建连的耗时之前，我们先介绍一下 <code>RTT(Round-Trip Time)</code> 的概念。RTT，即往返时延。指的是从发送端发送数据开始，到发送端收到来自接收端的确认（ACK）的时间。一般来说这个时间是由物理距离，网络传输路径等决定的。</p><p data-lake-id=\"2cd8bd6ec30045bf72f67e0d617311f9\"><br /></p><p data-lake-id=\"9542b20e62fccff34766d30f664cff42\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1584964922127-65173f15-e1ec-4fb1-ade1-74b65cfc8e8e.png%22%2C%22originWidth%22%3A720%2C%22originHeight%22%3A584%2C%22name%22%3A%22image.png%22%2C%22size%22%3A197676%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A0%2C%22y%22%3A87%2C%22width%22%3A90.75%2C%22height%22%3A15.75%2C%22text%22%3A%22lnitiateTCP%22%7D%2C%7B%22x%22%3A-1.5%2C%22y%22%3A108.75%2C%22width%22%3A89.25%2C%22height%22%3A13.5%2C%22text%22%3A%22connection%22%7D%2C%7B%22x%22%3A115.5%2C%22y%22%3A190.5%2C%22width%22%3A36%2C%22height%22%3A16.5%2C%22text%22%3A%22RTT%22%7D%2C%7B%22x%22%3A-0.75%2C%22y%22%3A273%2C%22width%22%3A94.5%2C%22height%22%3A17.25%2C%22text%22%3A%22Requestfile%22%7D%2C%7B%22x%22%3A118.5%2C%22y%22%3A356.25%2C%22width%22%3A29.25%2C%22height%22%3A15%2C%22text%22%3A%22RTT-%22%7D%2C%7B%22x%22%3A531%2C%22y%22%3A374.25%2C%22width%22%3A163.5%2C%22height%22%3A17.25%2C%22text%22%3A%22Timetotransmitfile%22%7D%2C%7B%22x%22%3A-1.5%2C%22y%22%3A453%2C%22width%22%3A154.5%2C%22height%22%3A15%2C%22text%22%3A%22Entirefilereceived%22%7D%2C%7B%22x%22%3A153.75%2C%22y%22%3A534.75%2C%22width%22%3A42.75%2C%22height%22%3A16.5%2C%22text%22%3A%22Time%22%7D%2C%7B%22x%22%3A483.75%2C%22y%22%3A537.75%2C%22width%22%3A39%2C%22height%22%3A12.75%2C%22text%22%3A%22Time%22%7D%2C%7B%22x%22%3A141.75%2C%22y%22%3A556.5%2C%22width%22%3A67.5%2C%22height%22%3A15%2C%22text%22%3A%22atclient%22%7D%2C%7B%22x%22%3A468%2C%22y%22%3A556.5%2C%22width%22%3A71.25%2C%22height%22%3A14.25%2C%22text%22%3A%22atserver%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22lnitiateTCP%20connection%20RTT%20Requestfile%20RTT-%20Timetotransmitfile%20Entirefilereceived%20Time%20Time%20atclient%20atserver%22%2C%22width%22%3A360%2C%22height%22%3A292%7D\"></card></p><p data-lake-id=\"4b8b701373a5aaed8f7fb696fcac10da\"><br /></p><h3 id=\"IaUYe\" data-lake-id=\"5c5b9ff977c317cdc838d53f21346707\">RTT 一般是多久</h3><p data-lake-id=\"60d802055537737344b1783cec7574e2\">最简单的方式就是 Ping 一下，我们在 Ping 的时候看到的 <code>time=xxms</code>  一般<strong>接近于一个 RTT</strong></p><p data-lake-id=\"ea2c71281d817b8815ada0f84c65e387\"><strong><br /></strong></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22PING%20115.239.211.112%20(115.239.211.112)%3A%2056%20data%20bytes%5Cn64%20bytes%20from%20115.239.211.112%3A%20icmp_seq%3D0%20ttl%3D55%20time%3D4.411%20ms%22%2C%22id%22%3A%226pntV%22%7D\"></card><p data-lake-id=\"28be9d380dfce7d5e4a7c40af673c7c5\"><br /></p><p data-lake-id=\"2f340fe99ff3819e1a29c35cc3e9a305\">实际上就是一来一回（下面是 <code>tcpdump</code> 抓到的 <code>ping</code> ）：</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%2211%3A59%3A42.631275%20IP%2030.38.61.21%20%3E%20115.239.211.112%3A%20ICMP%20echo%20request%2C%20id%2011482%2C%20seq%200%2C%20length%2064%5Cn11%3A59%3A42.635593%20IP%20115.239.211.112%20%3E%2030.38.61.21%3A%20ICMP%20echo%20reply%2C%20id%2011482%2C%20seq%200%2C%20length%2064%22%2C%22id%22%3A%22eP4yg%22%7D\"></card><h3 id=\"ORwmh\" data-lake-id=\"edfca786170b32a20e4d25a407c676ed\">建连需要多少个 RTT</h3><p data-lake-id=\"bd68d3a5009b831a52e330af75425a07\">TCP 一种面向连接的通讯协议，在两个目标间发送 TCP 数据之前，TCP 需要通过三次握手建立起连接。而这个连接的过程其实是在交换一些初始数据，其中最重要的是 <span>Sequence Number。</span></p><p data-lake-id=\"d62ff75f2bd039b0e0b38f5c61306634\"><br /></p><p data-lake-id=\"3f4da40a705675a10f24a60294ce6cb9\">很多地方尝试用各种看起来形象的比喻来形容三次握手，但是实际上握手的过程非常简单，为了避免造成错误的理解，我们就平铺直叙，后面会解释为什么一定要经过三次握手才能建立起连接。三次握手的过程如下：</p><p data-lake-id=\"e9aa99137cc2ac65c582a3083b269557\"><br /></p><ol start=\"1\" data-lake-id=\"ae782c153de151fcba33abab2649fbfe\"><li data-lake-id=\"3ba821df151261a3037b8db8b7101cef\">客户端向服务端发送 SYN，传输 seq = X</li><li data-lake-id=\"6aa1ce48a0476d48e744ac62ee3b5c59\">服务端向客户端发送 ACK X+1，表示收到，客户端可以从 X+1 作为 seq 发送消息。同时发送 SYN，seq = Y，把自己设置成 established 状态（可接收数据）</li><li data-lake-id=\"c0ad34e3667e458536c4a72709d24c93\">客户端向服务端发送 ACK Y+1<span>，表示收到，服务端可以从 Y+1 作为 seq 发送消息，</span><span>，把自己设置成 established 状态（可接收数据）</span></li></ol><p data-lake-id=\"f27a9d012a797e2ce40fd497eb70f3e3\"><br /></p><p data-lake-id=\"908da72338d6fc3b5215aa455a15be5d\"><strong>到了第三步客户端发送完 ACK 后就认为连接已经建立完毕（毕竟不会有第四个 ACK 再告诉它已经收到了 ACK），然后开始把应用层的数据（HTTP 报文）开始传输。而服务器端则是收到这个 ACK 后才会开始把收到的数据交付给应用层（HTTP）。</strong></p><p data-lake-id=\"eb0d2ec25de6dba421652cb31cfc53e7\"><strong><br /></strong></p><p data-lake-id=\"472507a4da8faa495cd27cd68e9e5d3d\"><strong>所以在这个过程中，客户端在建连上话费的时间是一个 RTT。</strong></p><p data-lake-id=\"dca7d273f012522e76f94aa259e2e0e7\"><br /></p><p data-lake-id=\"cebe87baaadd492ea20360aab9697fd4\">这种情况说的是纯粹的 <code>Connect</code> 时间，不包括 <code>SSL</code> ，所以只是对 <code>http</code> 协议而言的，如果是 <code>https</code> 协议还需要再考虑 SSL 握手的时间，我们后续会在别的文章中介绍。</p><h4 id=\"guKHx\" data-lake-id=\"b7bcf1c42823a1671a02646edee25075\">动手试试</h4><p data-lake-id=\"58a92a07d8dbc61f5ef32f8229e19671\">我们可以使用 <code>WireShark</code> 来抓取一次  <code>http</code> 请求来看看建连的过程。</p><p data-lake-id=\"6f82d2629bd5e1f4d3e91c0b00ea9bfe\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1584966581339-1ff4f09d-c1dc-4dab-a0ef-636e942cf5fa.png%22%2C%22originWidth%22%3A2192%2C%22originHeight%22%3A1194%2C%22name%22%3A%22image.png%22%2C%22size%22%3A1880284%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1027.5%2C%22y%22%3A6.85%2C%22width%22%3A134.71669999999995%2C%22height%22%3A29.683332999999998%2C%22text%22%3A%22Wi-FI%3AenO%22%7D%2C%7B%22x%22%3A1264.9667%2C%22y%22%3A52.516666%2C%22width%22%3A319.6666%2C%22height%22%3A52.516664000000006%2C%22text%22%3A%220Q%E8%B1%86I%22%7D%2C%7B%22x%22%3A36.533333%2C%22y%22%3A125.58333%2C%22width%22%3A335.649987%2C%22height%22%3A29.683329999999998%2C%22text%22%3A%22ip-addr220.181.38.148%22%7D%2C%7B%22x%22%3A9.133333%2C%22y%22%3A171.25%2C%22width%22%3A31.966667%2C%22height%22%3A25.11667%2C%22text%22%3A%22NO.%22%7D%2C%7B%22x%22%3A680.4333%2C%22y%22%3A171.25%2C%22width%22%3A159.83335999999997%2C%22height%22%3A29.683330000000012%2C%22text%22%3A%22Destination%22%7D%2C%7B%22x%22%3A1127.9667%2C%22y%22%3A171.25%2C%22width%22%3A171.25%2C%22height%22%3A25.11667%2C%22text%22%3A%22olLengt-lnfo%22%7D%2C%7B%22x%22%3A152.98334%2C%22y%22%3A173.53333%2C%22width%22%3A52.51666%2C%22height%22%3A22.833339999999993%2C%22text%22%3A%22Time%22%7D%2C%7B%22x%22%3A321.94998%2C%22y%22%3A173.53333%2C%22width%22%3A141.56668000000002%2C%22height%22%3A25.11667%2C%22text%22%3A%22Source%22%7D%2C%7B%22x%22%3A1011.51666%2C%22y%22%3A173.53333%2C%22width%22%3A123.30004000000008%2C%22height%22%3A22.833339999999993%2C%22text%22%3A%22Protocol0%22%7D%2C%7B%22x%22%3A68.5%2C%22y%22%3A203.21666%2C%22width%22%3A91.33332999999999%2C%22height%22%3A27.40001000000001%2C%22text%22%3A%22512464%22%7D%2C%7B%22x%22%3A687.2833%2C%22y%22%3A203.21666%2C%22width%22%3A221.48335999999995%2C%22height%22%3A27.40001000000001%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A1276.3833%2C%22y%22%3A203.21666%2C%22width%22%3A468.0834%2C%22height%22%3A27.40001000000001%2C%22text%22%3A%226023980%5BS%5DSeq-owin-65535%22%7D%2C%7B%22x%22%3A1778.7167%2C%22y%22%3A203.21666%2C%22width%22%3A401.86659999999983%2C%22height%22%3A27.40001000000001%2C%22text%22%3A%22Len-OMSS-1460WS-64TSva.%22%7D%2C%7B%22x%22%3A137%2C%22y%22%3A205.5%2C%22width%22%3A152.98334%2C%22height%22%3A25.11667%2C%22text%22%3A%22%3A464.067930%22%7D%2C%7B%22x%22%3A363.05%2C%22y%22%3A203.21666%2C%22width%22%3A198.65000000000003%2C%22height%22%3A25.11667%2C%22text%22%3A%2230.37.69.155%22%7D%2C%7B%22x%22%3A1029.7833%2C%22y%22%3A205.5%2C%22width%22%3A38.816699999999855%2C%22height%22%3A25.11667%2C%22text%22%3A%22TCP%22%7D%2C%7B%22x%22%3A1080.0166%2C%22y%22%3A223.76666%2C%22width%22%3A100.46670000000017%2C%22height%22%3A36.53334000000001%2C%22text%22%3A%221RTT%22%7D%2C%7B%22x%22%3A1025.2167%2C%22y%22%3A235.18333%2C%22width%22%3A50.2333000000001%2C%22height%22%3A29.683339999999987%2C%22text%22%3A%22TCP1%22%7D%2C%7B%22x%22%3A70.78333%2C%22y%22%3A237.46666%2C%22width%22%3A68.5%2C%22height%22%3A27.40001000000001%2C%22text%22%3A%2251256%22%7D%2C%7B%22x%22%3A360.76666%2C%22y%22%3A239.75%2C%22width%22%3A232.89994000000002%2C%22height%22%3A27.399999999999977%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A689.56665%2C%22y%22%3A239.75%2C%22width%22%3A200.93335000000002%2C%22height%22%3A29.68331999999998%2C%22text%22%3A%2230.37.69.155%22%7D%2C%7B%22x%22%3A1203.3167%2C%22y%22%3A239.75%2C%22width%22%3A595.9498999999998%2C%22height%22%3A29.68331999999998%2C%22text%22%3A%22788060239%5BY%2CACKseq-oAck-win%22%7D%2C%7B%22x%22%3A137%2C%22y%22%3A239.75%2C%22width%22%3A155.26666%2C%22height%22%3A25.11667%2C%22text%22%3A%22564.099483%22%7D%2C%7B%22x%22%3A1721.6333%2C%22y%22%3A239.75%2C%22width%22%3A452.1001000000001%2C%22height%22%3A25.11667%2C%22text%22%3A%22ck-1win-8192Len-OMSS-1452%22%7D%2C%7B%22x%22%3A70.78333%2C%22y%22%3A276.28333%2C%22width%22%3A70.78333999999998%2C%22height%22%3A27.399990000000003%2C%22text%22%3A%2251266%22%7D%2C%7B%22x%22%3A694.1333%2C%22y%22%3A276.28333%2C%22width%22%3A221.48334%2C%22height%22%3A25.11667%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A141.56667%2C%22y%22%3A276.28333%2C%22width%22%3A150.69999%2C%22height%22%3A25.11667%2C%22text%22%3A%22664%2C099568%22%7D%2C%7B%22x%22%3A1173.6333%2C%22y%22%3A276.28333%2C%22width%22%3A579.9667%2C%22height%22%3A29.683340000000044%2C%22text%22%3A%225460239%2B80TACKISeq1Ck-1Win-2%22%7D%2C%7B%22x%22%3A1516.1333%2C%22y%22%3A303.68332%2C%22width%22%3A595.9499999999998%2C%22height%22%3A41.10001%2C%22text%22%3A%22GET%E8%AF%B7%E6%B1%82%E5%92%8CACK%E5%90%8C%E6%97%B6%E5%8F%91%E5%87%BA%22%7D%2C%7B%22x%22%3A691.85%2C%22y%22%3A310.53333%2C%22width%22%3A230.61669999999992%2C%22height%22%3A27.399990000000003%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A1182.7666%2C%22y%22%3A310.53333%2C%22width%22%3A342.5%2C%22height%22%3A31.966670000000022%2C%22text%22%3A%22127GET%2FHTTP%2F1.1%22%7D%2C%7B%22x%22%3A66.21667%2C%22y%22%3A310.53333%2C%22width%22%3A75.35%2C%22height%22%3A29.683310000000006%2C%22text%22%3A%2251276%22%7D%2C%7B%22x%22%3A365.3333%2C%22y%22%3A310.53333%2C%22width%22%3A198.65004%2C%22height%22%3A29.683310000000006%2C%22text%22%3A%2230.37.69.155%22%7D%2C%7B%22x%22%3A1020.64996%2C%22y%22%3A312.81665%2C%22width%22%3A66.21674000000007%2C%22height%22%3A25.11667%2C%22text%22%3A%22HTTP%22%7D%2C%7B%22x%22%3A141.56667%2C%22y%22%3A312.81665%2C%22width%22%3A150.69999%2C%22height%22%3A25.11667%2C%22text%22%3A%22764.099648%22%7D%2C%7B%22x%22%3A365.3333%2C%22y%22%3A347.06665%2C%22width%22%3A223.76670000000001%2C%22height%22%3A27.399990000000003%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A696.4166%2C%22y%22%3A347.06665%2C%22width%22%3A198.65004999999996%2C%22height%22%3A25.11667%2C%22text%22%3A%2230.37.69.155%22%7D%2C%7B%22x%22%3A1022.9333%2C%22y%22%3A347.06665%2C%22width%22%3A47.94999999999993%2C%22height%22%3A22.833349999999996%2C%22text%22%3A%22TCP%22%7D%2C%7B%22x%22%3A68.5%2C%22y%22%3A347.06665%2C%22width%22%3A70.78333%2C%22height%22%3A27.399990000000003%2C%22text%22%3A%2251336%22%7D%2C%7B%22x%22%3A143.84999%2C%22y%22%3A349.35%2C%22width%22%3A148.41667%2C%22height%22%3A25.11663999999996%2C%22text%22%3A%22364.135146%22%7D%2C%7B%22x%22%3A1217.0166%2C%22y%22%3A349.35%2C%22width%22%3A790.0333%2C%22height%22%3A29.683329999999955%2C%22text%22%3A%22608069239%5BACK%5DSeq-1Ack-74Win-24704LenG%22%7D%2C%7B%22x%22%3A1221.5833%2C%22y%22%3A381.31665%2C%22width%22%3A835.6998999999998%2C%22height%22%3A31.966679999999997%2C%22text%22%3A%2259866023PH%2CCKck247Len305%22%7D%2C%7B%22x%22%3A68.5%2C%22y%22%3A383.6%2C%22width%22%3A68.5%2C%22height%22%3A27.399999999999977%2C%22text%22%3A%225134%22%7D%2C%7B%22x%22%3A365.3333%2C%22y%22%3A381.31665%2C%22width%22%3A232.90004%2C%22height%22%3A31.966679999999997%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A698.7%2C%22y%22%3A383.6%2C%22width%22%3A184.94995999999992%2C%22height%22%3A27.399999999999977%2C%22text%22%3A%2230.37.69.155%22%7D%2C%7B%22x%22%3A1025.2167%2C%22y%22%3A383.6%2C%22width%22%3A45.66660000000002%2C%22height%22%3A22.833319999999958%2C%22text%22%3A%22TCP%22%7D%2C%7B%22x%22%3A141.56667%2C%22y%22%3A385.88333%2C%22width%22%3A152.98333000000002%2C%22height%22%3A25.11667%2C%22text%22%3A%22464.135150%22%7D%2C%7B%22x%22%3A367.61667%2C%22y%22%3A417.85%2C%22width%22%3A223.76662999999996%2C%22height%22%3A29.683329999999955%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A696.4166%2C%22y%22%3A417.85%2C%22width%22%3A194.08339999999998%2C%22height%22%3A27.399999999999977%2C%22text%22%3A%2230.3769.155%22%7D%2C%7B%22x%22%3A66.21667%2C%22y%22%3A420.13333%2C%22width%22%3A70.78333%2C%22height%22%3A25.11667%2C%22text%22%3A%2251356%22%7D%2C%7B%22x%22%3A141.56667%2C%22y%22%3A420.13333%2C%22width%22%3A150.69999%2C%22height%22%3A25.11667%2C%22text%22%3A%22564.135151%22%7D%2C%7B%22x%22%3A1018.36664%2C%22y%22%3A420.13333%2C%22width%22%3A66.21666000000005%2C%22height%22%3A25.11667%2C%22text%22%3A%22HTTP%22%7D%2C%7B%22x%22%3A1185.0499%2C%22y%22%3A420.13333%2C%22width%22%3A609.6501000000001%2C%22height%22%3A29.68331999999998%2C%22text%22%3A%22135HTTP%2F1.12000K(text%2Fhtml)%22%7D%2C%7B%22x%22%3A369.9%2C%22y%22%3A454.38333%2C%22width%22%3A198.64999999999998%2C%22height%22%3A27.399999999999977%2C%22text%22%3A%2230.37.69.155%22%7D%2C%7B%22x%22%3A1237.5667%2C%22y%22%3A454.38333%2C%22width%22%3A753.5%2C%22height%22%3A34.25%2C%22text%22%3A%224602398%5BACK%5D5eq-74Ack306WIn261824Len%22%7D%2C%7B%22x%22%3A66.21667%2C%22y%22%3A456.66666%2C%22width%22%3A68.49999%2C%22height%22%3A25.11667%2C%22text%22%3A%225136%22%7D%2C%7B%22x%22%3A141.56667%2C%22y%22%3A456.66666%2C%22width%22%3A150.69999%2C%22height%22%3A22.83334000000002%2C%22text%22%3A%2264.135266%22%7D%2C%7B%22x%22%3A696.4166%2C%22y%22%3A456.66666%2C%22width%22%3A216.9167%2C%22height%22%3A25.11667%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A1022.9333%2C%22y%22%3A456.66666%2C%22width%22%3A47.94999999999993%2C%22height%22%3A22.83334000000002%2C%22text%22%3A%22TCP%22%7D%2C%7B%22x%22%3A369.9%2C%22y%22%3A490.91666%2C%22width%22%3A187.23329999999999%2C%22height%22%3A27.399990000000003%2C%22text%22%3A%2230.37.69.155%22%7D%2C%7B%22x%22%3A694.1333%2C%22y%22%3A490.91666%2C%22width%22%3A223.76666%2C%22height%22%3A29.683340000000044%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A1233%2C%22y%22%3A490.91666%2C%22width%22%3A760.3499999999999%2C%22height%22%3A29.683340000000044%2C%22text%22%3A%22460239%5BACK%5DSeq-74Ack-387WIn-261696Len0%22%7D%2C%7B%22x%22%3A66.21667%2C%22y%22%3A490.91666%2C%22width%22%3A73.06666000000001%2C%22height%22%3A27.399990000000003%2C%22text%22%3A%2251376%22%7D%2C%7B%22x%22%3A139.28333%2C%22y%22%3A495.48334%2C%22width%22%3A152.98333%2C%22height%22%3A25.116660000000024%2C%22text%22%3A%22764.135266%22%7D%2C%7B%22x%22%3A694.1333%2C%22y%22%3A525.1666%2C%22width%22%3A221.48334%2C%22height%22%3A31.966699999999946%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A1251.2666%2C%22y%22%3A525.1666%2C%22width%22%3A764.9167%2C%22height%22%3A31.966699999999946%2C%22text%22%3A%2260239%5BFIN%2CACKSq-74Ck3872244Len%22%7D%2C%7B%22x%22%3A367.61667%2C%22y%22%3A527.45%2C%22width%22%3A196.36667%2C%22height%22%3A27.399999999999977%2C%22text%22%3A%2230.37.69.155%22%7D%2C%7B%22x%22%3A66.21667%2C%22y%22%3A527.45%2C%22width%22%3A79.91666000000001%2C%22height%22%3A29.683299999999917%2C%22text%22%3A%2251386%22%7D%2C%7B%22x%22%3A141.56667%2C%22y%22%3A527.45%2C%22width%22%3A146.13331%2C%22height%22%3A27.399999999999977%2C%22text%22%3A%22864.135439%22%7D%2C%7B%22x%22%3A1025.2167%2C%22y%22%3A529.73334%2C%22width%22%3A45.66660000000002%2C%22height%22%3A22.833309999999983%2C%22text%22%3A%22TCP%22%7D%2C%7B%22x%22%3A367.61667%2C%22y%22%3A561.7%2C%22width%22%3A216.91663000000005%2C%22height%22%3A27.399999999999977%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A1235.2833%2C%22y%22%3A561.7%2C%22width%22%3A760.3499999999999%2C%22height%22%3A31.96659999999997%2C%22text%22%3A%228060239%5BACK%5DSeq-387Ack-75W1n24704Len-O%22%7D%2C%7B%22x%22%3A143.84999%2C%22y%22%3A563.98334%2C%22width%22%3A146.13335%2C%22height%22%3A27.399959999999965%2C%22text%22%3A%22964.168874%22%7D%2C%7B%22x%22%3A696.4166%2C%22y%22%3A563.98334%2C%22width%22%3A191.80009999999993%2C%22height%22%3A25.116660000000024%2C%22text%22%3A%2230.3769.155%22%7D%2C%7B%22x%22%3A1022.9333%2C%22y%22%3A566.26666%2C%22width%22%3A47.94999999999993%2C%22height%22%3A22.83334000000002%2C%22text%22%3A%22TCP%22%7D%2C%7B%22x%22%3A1217.0166%2C%22y%22%3A593.6666%2C%22width%22%3A778.6167%2C%22height%22%3A36.53340000000003%2C%22text%22%3A%2260860239%5BFINCK%5Dq387ACk75247Le%22%7D%2C%7B%22x%22%3A367.61667%2C%22y%22%3A598.23334%2C%22width%22%3A219.19997999999998%2C%22height%22%3A27.399959999999965%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A696.4166%2C%22y%22%3A598.23334%2C%22width%22%3A194.08339999999998%2C%22height%22%3A25.116660000000024%2C%22text%22%3A%2230.3769.155%22%7D%2C%7B%22x%22%3A100.46667%2C%22y%22%3A600.51666%2C%22width%22%3A187.23331%2C%22height%22%3A25.11663999999996%2C%22text%22%3A%2214064.168878%22%7D%2C%7B%22x%22%3A1020.64996%2C%22y%22%3A600.51666%2C%22width%22%3A52.51664000000005%2C%22height%22%3A25.11663999999996%2C%22text%22%3A%22TCP%22%7D%2C%7B%22x%22%3A1191.9%2C%22y%22%3A627.9166%2C%22width%22%3A774.05%2C%22height%22%3A36.53340000000003%2C%22text%22%3A%225460239CK%5D75Ck388WI6144L%22%7D%2C%7B%22x%22%3A369.9%2C%22y%22%3A632.48334%2C%22width%22%3A189.51660000000004%2C%22height%22%3A29.68326000000002%2C%22text%22%3A%2230.37.69.155%22%7D%2C%7B%22x%22%3A691.85%2C%22y%22%3A632.48334%2C%22width%22%3A221.48329999999999%2C%22height%22%3A27.399959999999965%2C%22text%22%3A%22220.181.38.148%22%7D%2C%7B%22x%22%3A1020.64996%2C%22y%22%3A634.76666%2C%22width%22%3A52.51664000000005%2C%22height%22%3A27.399940000000015%2C%22text%22%3A%22TCP%22%7D%2C%7B%22x%22%3A75.35%2C%22y%22%3A637.05%2C%22width%22%3A228.33332%2C%22height%22%3A25.116600000000062%2C%22text%22%3A%22514164.168967%22%7D%2C%7B%22x%22%3A86.76666%2C%22y%22%3A737.51666%2C%22width%22%3A1000.10004%2C%22height%22%3A34.25%2C%22text%22%3A%22Frame577ytesonwe(16bits7tu(%22%7D%2C%7B%22x%22%3A89.049995%2C%22y%22%3A774.05%2C%22width%22%3A954.4333050000001%2C%22height%22%3A31.966660000000047%2C%22text%22%3A%22thernetSAppledf%3Ae%3A6f(696ea%3A6t)D-%22%7D%2C%7B%22x%22%3A929.31665%2C%22y%22%3A774.05%2C%22width%22%3A621.06665%2C%22height%22%3A34.25%2C%22text%22%3A%22st%3AIETF-VRRP-VRID_Oe(%400%3A00%3A5e%3A00%3A61%3A0e)%22%7D%2C%7B%22x%22%3A79.916664%2C%22y%22%3A810.5833%2C%22width%22%3A931.599996%2C%22height%22%3A29.683359999999993%2C%22text%22%3A%22InternetProtocolverson43376%22%7D%2C%7B%22x%22%3A707.8333%2C%22y%22%3A840.26666%2C%22width%22%3A680.4332999999999%2C%22height%22%3A36.53333999999995%2C%22text%22%3A%2260239%2CDstport%3AooSegk7%22%7D%2C%7B%22x%22%3A57.083332%2C%22y%22%3A847.11664%2C%22width%22%3A774.0499679999999%2C%22height%22%3A31.966660000000047%2C%22text%22%3A%22TransmissionControlProtoo%22%7D%2C%7B%22x%22%3A43.38333%2C%22y%22%3A883.64996%2C%22width%22%3A447.53333%2C%22height%22%3A31.966679999999997%2C%22text%22%3A%22HypertextTransterProtocol%22%7D%2C%7B%22x%22%3A91.33333%2C%22y%22%3A1075.45%2C%22width%22%3A806.01667%2C%22height%22%3A29.683299999999917%2C%22text%22%3A%2200000500Q10e6c96cfdfea8450%22%7D%2C%7B%22x%22%3A15.983333%2C%22y%22%3A1077.7333%2C%22width%22%3A75.349997%2C%22height%22%3A22.833399999999983%2C%22text%22%3A%220000%22%7D%2C%7B%22x%22%3A11.416666%2C%22y%22%3A1107.4166%2C%22width%22%3A82.199994%2C%22height%22%3A22.833399999999983%2C%22text%22%3A%220010%22%7D%2C%7B%22x%22%3A105.03333%2C%22y%22%3A1107.4166%2C%22width%22%3A673.58331%2C%22height%22%3A25.116700000000037%2C%22text%22%3A%220071000040004006d37d1e254596%22%7D%2C%7B%22x%22%3A2004.7666%2C%22y%22%3A1153.0833%2C%22width%22%3A155.26659999999993%2C%22height%22%3A25.116700000000037%2C%22text%22%3A%22Prafile%3ADefault%22%7D%2C%7B%22x%22%3A118.73333%2C%22y%22%3A1155.3667%2C%22width%22%3A550.28333%2C%22height%22%3A25.116600000000062%2C%22text%22%3A%22wiresharkWi-Fi20200323202344XrFly.pcapng%22%7D%2C%7B%22x%22%3A1415.6666%2C%22y%22%3A1155.3667%2C%22width%22%3A406.4333999999999%2C%22height%22%3A25.116600000000062%2C%22text%22%3A%22Packets%3A16481Displayed13.1%25)%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22Wi-FI%3AenO%200Q%E8%B1%86I%20ip-addr220.181.38.148%20NO.%20Destination%20olLengt-lnfo%20Time%20Source%20Protocol0%20512464%20220.181.38.148%206023980%5BS%5DSeq-owin-65535%20Len-OMSS-1460WS-64TSva.%20%3A464.067930%2030.37.69.155%20TCP%201RTT%20TCP1%2051256%20220.181.38.148%2030.37.69.155%20788060239%5BY%2CACKseq-oAck-win%20564.099483%20ck-1win-8192Len-OMSS-1452%2051266%20220.181.38.148%20664%2C099568%205460239%2B80TACKISeq1Ck-1Win-2%20GET%E8%AF%B7%E6%B1%82%E5%92%8CACK%E5%90%8C%E6%97%B6%E5%8F%91%E5%87%BA%20220.181.38.148%20127GET%2FHTTP%2F1.1%2051276%2030.37.69.155%20HTTP%20764.099648%20220.181.38.148%2030.37.69.155%20TCP%2051336%20364.135146%20608069239%5BACK%5DSeq-1Ack-74Win-24704LenG%2059866023PH%2CCKck247Len305%205134%20220.181.38.148%2030.37.69.155%20TCP%20464.135150%20220.181.38.148%2030.3769.155%2051356%20564.135151%20HTTP%20135HTTP%2F1.12000K(text%2Fhtml)%2030.37.69.155%204602398%5BACK%5D5eq-74Ack306WIn261824Len%205136%2064.135266%20220.181.38.148%20TCP%2030.37.69.155%20220.181.38.148%20460239%5BACK%5DSeq-74Ack-387WIn-261696Len0%2051376%20764.135266%20220.181.38.148%2060239%5BFIN%2CACKSq-74Ck3872244Len%2030.37.69.155%2051386%20864.135439%20TCP%20220.181.38.148%208060239%5BACK%5DSeq-387Ack-75W1n24704Len-O%20964.168874%2030.3769.155%20TCP%2060860239%5BFINCK%5Dq387ACk75247Le%20220.181.38.148%2030.3769.155%2014064.168878%20TCP%205460239CK%5D75Ck388WI6144L%2030.37.69.155%20220.181.38.148%20TCP%20514164.168967%20Frame577ytesonwe(16bits7tu(%20thernetSAppledf%3Ae%3A6f(696ea%3A6t)D-%20st%3AIETF-VRRP-VRID_Oe(%400%3A00%3A5e%3A00%3A61%3A0e)%20InternetProtocolverson43376%2060239%2CDstport%3AooSegk7%20TransmissionControlProtoo%20HypertextTransterProtocol%2000000500Q10e6c96cfdfea8450%200000%200010%200071000040004006d37d1e254596%20Prafile%3ADefault%20wiresharkWi-Fi20200323202344XrFly.pcapng%20Packets%3A16481Displayed13.1%25)%22%2C%22width%22%3A1096%2C%22height%22%3A597%7D\"></card></p><p data-lake-id=\"3572ccc615c991183f2ec45a84451458\">可以看到这里从发起 <code>seq</code> 到收到 <code>ack</code> （经过 1 <code>RTT</code> ）后，客户端就没有再等待直接发起了 <code>GET / HTTP/1.1</code> 的请求。</p><h2 id=\"tmNZ6\" data-lake-id=\"6edabe9926215f72c168798265f3ba84\">如何优化建连时间</h2><h3 id=\"vhZdc\" data-lake-id=\"08f44c78a214025b18b2f1e4a4d41a47\">例子</h3><p data-lake-id=\"89d97211206b061653c3bb9178cb8943\">我们用一个简单的页面看看建连对网页性能的影响：<a href=\"https://xcodebuild.github.io/why-so-slow/connect/index.html\" target=\"_blank\">https://xcodebuild.github.io/why-so-slow/connect/index.html</a></p><p data-lake-id=\"ed2cb9a1d85cc99bca0f37ff7043a949\"><br /></p><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"86f246784c65207315ed344629b8e3a6\">这是一个测试页面，源代码托管在：<a href=\"https://github.com/xcodebuild/why-so-slow/blob/master/connect/index.html\" target=\"_blank\">https://github.com/xcodebuild/why-so-slow/blob/master/connect/index.html</a></p></blockquote><p data-lake-id=\"debcc747eadd173d286fd29fffd5b7ab\"><br /></p><p data-lake-id=\"690597af27dff4cc48006593d105fac8\">就像上面说的，我们在开发场景下往往不需要重新连接，包括 <code>Disable Cache</code> 是不会禁用 <code>TCP</code> 的连接复用的，所以我们使用 <a href=\"https://www.webpagetest.org/\" target=\"_blank\">Webpage Test</a> 来看一下这个页面的性能状况。</p><p data-lake-id=\"cce34c452da003791c918ff8c26958f1\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585020683958-c843ada1-7492-44d1-8c71-e65389fb9850.png%22%2C%22originWidth%22%3A1910%2C%22originHeight%22%3A1164%2C%22name%22%3A%22image.png%22%2C%22size%22%3A229615%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A773.94794%2C%22y%22%3A29.843752%2C%22width%22%3A322.3125600000001%2C%22height%22%3A41.781248000000005%2C%22text%22%3A%22WaterfallView%22%7D%2C%7B%22x%22%3A479.4896%2C%22y%22%3A139.27084%2C%22width%22%3A175.08334000000002%2C%22height%22%3A25.864580000000018%2C%22text%22%3A%22IRUMFirstPaint%22%7D%2C%7B%22x%22%3A921.1771%2C%22y%22%3A139.27084%2C%22width%22%3A238.7500000000001%2C%22height%22%3A23.875%2C%22text%22%3A%22DOMContentLoaded%22%7D%2C%7B%22x%22%3A1340.9792%2C%22y%22%3A139.27084%2C%22width%22%3A234.77089999999998%2C%22height%22%3A27.854180000000014%2C%22text%22%3A%22IDocumentComplete%22%7D%2C%7B%22x%22%3A302.4167%2C%22y%22%3A141.26042%2C%22width%22%3A145.23958%2C%22height%22%3A25.864599999999996%2C%22text%22%3A%22IStartRender%22%7D%2C%7B%22x%22%3A682.4271%2C%22y%22%3A141.26042%2C%22width%22%3A185.0313%2C%22height%22%3A21.885419999999982%2C%22text%22%3A%22IDoMInteractive%22%7D%2C%7B%22x%22%3A1223.5938%2C%22y%22%3A141.26042%2C%22width%22%3A91.52080000000001%2C%22height%22%3A21.885419999999982%2C%22text%22%3A%22OnLoaD%22%7D%2C%7B%22x%22%3A1191.7605%2C%22y%22%3A218.85417%2C%22width%22%3A61.67709999999988%2C%22height%22%3A23.875%2C%22text%22%3A%22Flash%22%7D%2C%7B%22x%22%3A1611.5626%2C%22y%22%3A218.85417%2C%22width%22%3A69.63540000000012%2C%22height%22%3A23.875%2C%22text%22%3A%22other%22%7D%2C%7B%22x%22%3A1730.9376%2C%22y%22%3A218.85417%2C%22width%22%3A145.23950000000013%2C%22height%22%3A23.875%2C%22text%22%3A%22JSExecution%22%7D%2C%7B%22x%22%3A45.760418%2C%22y%22%3A220.84377%2C%22width%22%3A55.708342%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%22wait%22%7D%2C%7B%22x%22%3A194.97917%2C%22y%22%3A220.84377%2C%22width%22%3A45.760429999999985%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%22dns%22%7D%2C%7B%22x%22%3A620.75%2C%22y%22%3A220.84377%2C%22width%22%3A53.71879999999999%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%22html%22%7D%2C%7B%22x%22%3A775.93756%2C%22y%22%3A220.84377%2C%22width%22%3A31.83334000000002%2C%22height%22%3A23.875%2C%22text%22%3A%22Js%22%7D%2C%7B%22x%22%3A915.2084%2C%22y%22%3A220.84377%2C%22width%22%3A41.78120000000001%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%22css%22%7D%2C%7B%22x%22%3A1044.5312%2C%22y%22%3A220.84377%2C%22width%22%3A63.666800000000194%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%22image%22%7D%2C%7B%22x%22%3A1335.0105%2C%22y%22%3A220.84377%2C%22width%22%3A59.6875%2C%22height%22%3A19.89582999999999%2C%22text%22%3A%22Font%22%7D%2C%7B%22x%22%3A1474.2814%2C%22y%22%3A220.84377%2C%22width%22%3A65.6561999999999%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%22VIdeo%22%7D%2C%7B%22x%22%3A318.33334%2C%22y%22%3A222.83334%2C%22width%22%3A87.54168999999996%2C%22height%22%3A19.895830000000018%2C%22text%22%3A%22connect%22%7D%2C%7B%22x%22%3A481.4792%2C%22y%22%3A222.83334%2C%22width%22%3A45.760400000000004%2C%22height%22%3A19.895830000000018%2C%22text%22%3A%22ssI%22%7D%2C%7B%22x%22%3A714.26044%2C%22y%22%3A296.44794%2C%22width%22%3A33.822959999999966%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%220.2%22%7D%2C%7B%22x%22%3A823.68756%2C%22y%22%3A296.44794%2C%22width%22%3A39.79164000000003%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%220.3%22%7D%2C%7B%22x%22%3A1048.5105%2C%22y%22%3A296.44794%2C%22width%22%3A39.79160000000002%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%220.5%22%7D%2C%7B%22x%22%3A1161.9167%2C%22y%22%3A296.44794%2C%22width%22%3A35.8125%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%220.6%22%7D%2C%7B%22x%22%3A1275.323%2C%22y%22%3A296.44794%2C%22width%22%3A35.8125%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%220.7%22%7D%2C%7B%22x%22%3A1382.7605%2C%22y%22%3A296.44794%2C%22width%22%3A43.77089999999998%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%220.8%22%7D%2C%7B%22x%22%3A1611.5626%2C%22y%22%3A296.44794%2C%22width%22%3A39.79160000000002%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%221.0%22%7D%2C%7B%22x%22%3A1722.9792%2C%22y%22%3A296.44794%2C%22width%22%3A37.802200000000084%2C%22height%22%3A23.875%2C%22text%22%3A%221.1%22%7D%2C%7B%22x%22%3A600.8542%2C%22y%22%3A298.4375%2C%22width%22%3A35.8125%2C%22height%22%3A19.89584000000002%2C%22text%22%3A%220.1%22%7D%2C%7B%22x%22%3A1496.1667%2C%22y%22%3A298.4375%2C%22width%22%3A41.7813000000001%2C%22height%22%3A19.89584000000002%2C%22text%22%3A%220.9%22%7D%2C%7B%22x%22%3A9.947917%2C%22y%22%3A302.4167%2C%22width%22%3A73.614593%2C%22height%22%3A23.875%2C%22text%22%3A%22step-1%22%7D%2C%7B%22x%22%3A47.750004%2C%22y%22%3A344.19794%2C%22width%22%3A459.593776%2C%22height%22%3A23.875%2C%22text%22%3A%221.xcodlebuiid.github.io-index.html%22%7D%2C%7B%22x%22%3A913.2188%2C%22y%22%3A376.03128%2C%22width%22%3A47.75%2C%22height%22%3A23.875%2C%22text%22%3A%22147g%22%7D%2C%7B%22x%22%3A47.750004%2C%22y%22%3A378.02084%2C%22width%22%3A457.604196%2C%22height%22%3A23.875%2C%22text%22%3A%222.ccn.jsdeliur.n...production.min.js%22%7D%2C%7B%22x%22%3A43.770836%2C%22y%22%3A411.84378%2C%22width%22%3A449.64586399999996%2C%22height%22%3A23.875%2C%22text%22%3A%223.cdn.jsdelivr.n...production.min.js%22%7D%2C%7B%22x%22%3A1617.5314%2C%22y%22%3A443.6771%2C%22width%22%3A65.6561999999999%2C%22height%22%3A25.864599999999996%2C%22text%22%3A%2237%E5%95%AAS%22%7D%2C%7B%22x%22%3A25.864584%2C%22y%22%3A447.65628%2C%22width%22%3A445.666696%2C%22height%22%3A21.88542000000001%2C%22text%22%3A%224.cert.int-x3.letsencrypt.org-%22%7D%2C%7B%22x%22%3A895.31256%2C%22y%22%3A479.4896%2C%22width%22%3A75.60414000000003%2C%22height%22%3A23.875%2C%22text%22%3A%22759NS%22%7D%2C%7B%22x%22%3A33.822918%2C%22y%22%3A479.4896%2C%22width%22%3A459.593782%2C%22height%22%3A23.875%2C%22text%22%3A%225.www.ocky7coo1b1%22%7D%2C%7B%22x%22%3A1382.7605%2C%22y%22%3A513.3125%2C%22width%22%3A45.76039999999989%2C%22height%22%3A23.875%2C%22text%22%3A%220.8%22%7D%2C%7B%22x%22%3A1496.1667%2C%22y%22%3A513.3125%2C%22width%22%3A45.76040000000012%2C%22height%22%3A23.875%2C%22text%22%3A%220.9%22%7D%2C%7B%22x%22%3A821.69794%2C%22y%22%3A515.3021%2C%22width%22%3A43.77085999999997%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%220.3%22%7D%2C%7B%22x%22%3A1159.9271%2C%22y%22%3A515.3021%2C%22width%22%3A39.79169999999999%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%220.6%22%7D%2C%7B%22x%22%3A1611.5626%2C%22y%22%3A515.3021%2C%22width%22%3A41.7813000000001%2C%22height%22%3A23.875%2C%22text%22%3A%221.0%22%7D%2C%7B%22x%22%3A1720.9896%2C%22y%22%3A515.3021%2C%22width%22%3A41.781299999999874%2C%22height%22%3A23.875%2C%22text%22%3A%221.1%22%7D%2C%7B%22x%22%3A1046.5209%2C%22y%22%3A517.2917%2C%22width%22%3A43.77080000000001%2C%22height%22%3A19.89580000000001%2C%22text%22%3A%220.5%22%7D%2C%7B%22x%22%3A1267.3646%2C%22y%22%3A517.2917%2C%22width%22%3A47.75%2C%22height%22%3A19.89580000000001%2C%22text%22%3A%220.7%22%7D%2C%7B%22x%22%3A95.50001%2C%22y%22%3A578.96875%2C%22width%22%3A192.98959%2C%22height%22%3A25.864649999999983%2C%22text%22%3A%22%E4%B8%80cpuUtilization%22%7D%2C%7B%22x%22%3A431.7396%2C%22y%22%3A608.8125%2C%22width%22%3A161.1563%2C%22height%22%3A25.864599999999996%2C%22text%22%3A%22Request%235%22%7D%2C%7B%22x%22%3A646.6146%2C%22y%22%3A608.8125%2C%22width%22%3A89.53129999999999%2C%22height%22%3A23.875059999999962%2C%22text%22%3A%22Details%22%7D%2C%7B%22x%22%3A1024.6355%2C%22y%22%3A608.8125%2C%22width%22%3A165.1353999999999%2C%22height%22%3A25.864599999999996%2C%22text%22%3A%22RawDetailsOB%22%7D%2C%7B%22x%22%3A1181.8125%2C%22y%22%3A608.8125%2C%22width%22%3A93.51050000000009%2C%22height%22%3A25.864599999999996%2C%22text%22%3A%22object%22%7D%2C%7B%22x%22%3A758.0313%2C%22y%22%3A612.7917%2C%22width%22%3A109.4271%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%22RequestT%22%7D%2C%7B%22x%22%3A885.3646%2C%22y%22%3A612.7917%2C%22width%22%3A119.375%2C%22height%22%3A23.875%2C%22text%22%3A%22Response%22%7D%2C%7B%22x%22%3A103.458336%2C%22y%22%3A674.4688%2C%22width%22%3A324.302104%2C%22height%22%3A29.843759999999975%2C%22text%22%3A%22BandsidthIn(o-5000Kblo%22%7D%2C%7B%22x%22%3A479.4896%2C%22y%22%3A680.43756%2C%22width%22%3A744.1042000000001%2C%22height%22%3A23.875%2C%22text%22%3A%22RL%3Ahttps%3A%2F%2Fwww.mocky.io%2F5e7978632d00007c0018b11%22%7D%2C%7B%22x%22%3A471.53128%2C%22y%22%3A714.26044%2C%22width%22%3A787.8751200000002%2C%22height%22%3A21.885459999999966%2C%22text%22%3A%22adedBy%3Ahttps%3A%2F%2Fxcodebuil.githuowwi%22%7D%2C%7B%22x%22%3A439.69794%2C%22y%22%3A746.0938%2C%22width%22%3A258.64585999999997%2C%22height%22%3A21.885400000000004%2C%22text%22%3A%22Host%3AwwW.mocky.Io%22%7D%2C%7B%22x%22%3A97.489586%2C%22y%22%3A773.94794%2C%22width%22%3A246.708354%2C%22height%22%3A27.85415999999998%2C%22text%22%3A%22BrowserHainThread%22%7D%2C%7B%22x%22%3A437.70834%2C%22y%22%3A773.94794%2C%22width%22%3A248.69795999999997%2C%22height%22%3A25.864619999999945%2C%22text%22%3A%22IP%3A34.249.48.47%22%7D%2C%7B%22x%22%3A443.6771%2C%22y%22%3A805.7813%2C%22width%22%3A292.4688%2C%22height%22%3A27.85414000000003%2C%22text%22%3A%22Error%2FStatusCode%3A200%22%7D%2C%7B%22x%22%3A101.46876%2C%22y%22%3A841.5938%2C%22width%22%3A240.73958000000002%2C%22height%22%3A23.875%2C%22text%22%3A%22PareisInteractive%22%7D%2C%7B%22x%22%3A441.68753%2C%22y%22%3A841.5938%2C%22width%22%3A202.93752999999998%2C%22height%22%3A23.875%2C%22text%22%3A%22Priority%3AHigh%22%7D%2C%7B%22x%22%3A435.71878%2C%22y%22%3A871.43756%2C%22width%22%3A232.78127999999998%2C%22height%22%3A25.864540000000034%2C%22text%22%3A%22Protocol%3Ahttp%2F1.1%22%7D%2C%7B%22x%22%3A435.71878%2C%22y%22%3A903.2709%2C%22width%22%3A246.70832000000001%2C%22height%22%3A25.864540000000034%2C%22text%22%3A%22RequestID%3A4542.6%22%7D%2C%7B%22x%22%3A437.70834%2C%22y%22%3A933.1146%2C%22width%22%3A242.72921999999994%2C%22height%22%3A27.85419999999999%2C%22text%22%3A%22clientPort%3A34938%22%7D%2C%7B%22x%22%3A437.70834%2C%22y%22%3A968.9271%2C%22width%22%3A266.60421999999994%2C%22height%22%3A25.864599999999996%2C%22text%22%3A%22Discovered%3A0.427s%22%7D%2C%7B%22x%22%3A435.71878%2C%22y%22%3A1000.76044%2C%22width%22%3A294.45832%2C%22height%22%3A25.864559999999983%2C%22text%22%3A%22RequestStart%3A0.988s%22%7D%2C%7B%22x%22%3A437.70834%2C%22y%22%3A1032.5938%2C%22width%22%3A288.4896%2C%22height%22%3A25.864599999999882%2C%22text%22%3A%22DNSLoOkup%3A30ms%22%7D%2C%7B%22x%22%3A435.71878%2C%22y%22%3A1064.4271%2C%22width%22%3A344.19792%2C%22height%22%3A25.864599999999882%2C%22text%22%3A%22Initialconnection%3A197ms%22%7D%2C%7B%22x%22%3A198.95834%2C%22y%22%3A1088.3021%2C%22width%22%3A139.27086%2C%22height%22%3A27.85409999999979%2C%22text%22%3A%22DNSLookup%22%7D%2C%7B%22x%22%3A433.7292%2C%22y%22%3A1096.2605%2C%22width%22%3A350.1667%2C%22height%22%3A25.864499999999907%2C%22text%22%3A%22ssLNegotiation%3A314m%22%7D%2C%7B%22x%22%3A433.7292%2C%22y%22%3A1128.0938%2C%22width%22%3A350.1667%2C%22height%22%3A23.875%2C%22text%22%3A%22TimetoFIrsTByTE%3A217mS%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22WaterfallView%20IRUMFirstPaint%20DOMContentLoaded%20IDocumentComplete%20IStartRender%20IDoMInteractive%20OnLoaD%20Flash%20other%20JSExecution%20wait%20dns%20html%20Js%20css%20image%20Font%20VIdeo%20connect%20ssI%200.2%200.3%200.5%200.6%200.7%200.8%201.0%201.1%200.1%200.9%20step-1%201.xcodlebuiid.github.io-index.html%20147g%202.ccn.jsdeliur.n...production.min.js%203.cdn.jsdelivr.n...production.min.js%2037%E5%95%AAS%204.cert.int-x3.letsencrypt.org-%20759NS%205.www.ocky7coo1b1%200.8%200.9%200.3%200.6%201.0%201.1%200.5%200.7%20%E4%B8%80cpuUtilization%20Request%235%20Details%20RawDetailsOB%20object%20RequestT%20Response%20BandsidthIn(o-5000Kblo%20RL%3Ahttps%3A%2F%2Fwww.mocky.io%2F5e7978632d00007c0018b11%20adedBy%3Ahttps%3A%2F%2Fxcodebuil.githuowwi%20Host%3AwwW.mocky.Io%20BrowserHainThread%20IP%3A34.249.48.47%20Error%2FStatusCode%3A200%20PareisInteractive%20Priority%3AHigh%20Protocol%3Ahttp%2F1.1%20RequestID%3A4542.6%20clientPort%3A34938%20Discovered%3A0.427s%20RequestStart%3A0.988s%20DNSLoOkup%3A30ms%20Initialconnection%3A197ms%20DNSLookup%20ssLNegotiation%3A314m%20TimetoFIrsTByTE%3A217mS%22%2C%22width%22%3A955%2C%22height%22%3A582%7D\"></card></p><p data-lake-id=\"800631c30623d7de088278a8c16ba509\"><br /></p><p data-lake-id=\"7ef3910ef9899b2a2128d6981ee67e54\">我们可以看到这这个页面的 JavaScript 文件以及后面的 <code>fetch</code> 请求都有个很长的 <code>DNS + Connect + SSL</code> 时间。因为他们的域名不同，所以需要重新解析域名。不是同一个 TCP 连接，所以需要重新建连（包括 SSL 握手）。</p><p data-lake-id=\"afcf8a7dcc3fa92d20f24e4aeccb86fe\"><br /></p><p data-lake-id=\"9f704e170e8c88f5740719505af3123c\">在图中这个 <code>fetch</code> 请求的 <code>Connect + SSL</code> 一共耗时 <code>500ms</code> ，意味着用户必须等待这个建连完成后才能真正发起这个请求。</p><h3 id=\"zlxEH\" data-lake-id=\"0744e0d629afe6e1b5a63ceb54cdf4c5\">pre-connect</h3><p data-lake-id=\"a6a97aebcf654d199cd72cde8a0e26b7\">为了解决上面这种问题，Chrome 引入了 <a href=\"https://web.dev/uses-rel-preconnect/\" target=\"_blank\"><code>Preconnect</code></a> （现在大部分浏览器都是支持的）。</p><p data-lake-id=\"137884bddae0f61b77e65c88eaae4151\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585102598647-3d2dd3b0-fbfc-4bbc-99f5-10debdf6ee91.png%22%2C%22originWidth%22%3A736%2C%22originHeight%22%3A300%2C%22name%22%3A%22image.png%22%2C%22size%22%3A76442%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A9.2%2C%22y%22%3A17.633333%2C%22width%22%3A181.70000000000002%2C%22height%22%3A16.100001%2C%22text%22%3A%22WithoutPreconnect%22%7D%2C%7B%22x%22%3A99.666664%2C%22y%22%3A59.033333%2C%22width%22%3A101.199986%2C%22height%22%3A13.033332999999999%2C%22text%22%3A%22DNS%2FTCP%2FTLS%22%7D%2C%7B%22x%22%3A468.43332%2C%22y%22%3A92%2C%22width%22%3A99.66668000000004%2C%22height%22%3A13.799994999999996%2C%22text%22%3A%22DNS%2FTCP%2FTLS%22%7D%2C%7B%22x%22%3A602.6%2C%22y%22%3A121.13333%2C%22width%22%3A107.33330000000001%2C%22height%22%3A13.033330000000007%2C%22text%22%3A%22LoadTime-2.6s%22%7D%2C%7B%22x%22%3A11.5%2C%22y%22%3A167.9%2C%22width%22%3A151.03333%2C%22height%22%3A15.333319999999986%2C%22text%22%3A%22WithPreconnect%22%7D%2C%7B%22x%22%3A101.96666%2C%22y%22%3A213.9%2C%22width%22%3A98.13332999999999%2C%22height%22%3A13.033320000000003%2C%22text%22%3A%22DNS%2FTCP%2FTLS%22%7D%2C%7B%22x%22%3A100.43333%2C%22y%22%3A247.63333%2C%22width%22%3A98.89999999999999%2C%22height%22%3A13.79998999999998%2C%22text%22%3A%22DNS%2FTCP%2FTLS%22%7D%2C%7B%22x%22%3A601.8333%2C%22y%22%3A275.23334%2C%22width%22%3A110.40003999999999%2C%22height%22%3A16.09996000000001%2C%22text%22%3A%22LoadTime-2.1s%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22WithoutPreconnect%20DNS%2FTCP%2FTLS%20DNS%2FTCP%2FTLS%20LoadTime-2.6s%20WithPreconnect%20DNS%2FTCP%2FTLS%20DNS%2FTCP%2FTLS%20LoadTime-2.1s%22%2C%22width%22%3A368%2C%22height%22%3A150%7D\"></card></p><p data-lake-id=\"4fa8837eaf14cae7bb776402bb2a91b1\">我们可以在页面的 <code>&lt;head&gt;</code> 中加入</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%3Clink%20rel%3D%5C%22preconnect%5C%22%20href%3D%5C%22https%3A%2F%2Fwww.mocky.io%5C%22%20crossorigin%3E%22%2C%22id%22%3A%22yWrSj%22%7D\"></card><p data-lake-id=\"cdfa9385bcb1b76ec4f0ee2ac63b9dde\"><br /></p><p data-lake-id=\"53b5923343d19fd0acf27b19c6906bba\">来告知浏览器提前建立连接。</p><p data-lake-id=\"93387630c007351e1392c5103478f004\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585043302410-4fc5bf0c-b9f3-45ef-bba2-3ebbe7ce0ce0.png%22%2C%22originWidth%22%3A1994%2C%22originHeight%22%3A538%2C%22name%22%3A%22image.png%22%2C%22size%22%3A401496%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A828.7563%2C%22y%22%3A10.385417%2C%22width%22%3A330.25620000000004%2C%22height%22%3A43.618748999999994%2C%22text%22%3A%22WaterfallView%22%7D%2C%7B%22x%22%3A535.8875%2C%22y%22%3A120.47083%2C%22width%22%3A180.70624999999995%2C%22height%22%3A27.00208999999998%2C%22text%22%3A%22RUMFirstPaint%22%7D%2C%7B%22x%22%3A357.25833%2C%22y%22%3A122.54792%2C%22width%22%3A147.47293000000002%2C%22height%22%3A24.924999999999983%2C%22text%22%3A%22lStartRender%22%7D%2C%7B%22x%22%3A739.44165%2C%22y%22%3A124.625%2C%22width%22%3A178.62921000000006%2C%22height%22%3A22.847919999999988%2C%22text%22%3A%22IDomInteractive%22%7D%2C%7B%22x%22%3A1273.2521%2C%22y%22%3A124.625%2C%22width%22%3A101.77710000000002%2C%22height%22%3A24.92500000000001%2C%22text%22%3A%22OnLoad%22%7D%2C%7B%22x%22%3A1399.9542%2C%22y%22%3A124.625%2C%22width%22%3A216.01660000000015%2C%22height%22%3A24.92500000000001%2C%22text%22%3A%22IDocumentCompleto%22%7D%2C%7B%22x%22%3A984.53754%2C%22y%22%3A126.70209%2C%22width%22%3A240.94155999999998%2C%22height%22%3A24.92500000000001%2C%22text%22%3A%22DOMContentLoaded%22%7D%2C%7B%22x%22%3A1213.0167%2C%22y%22%3A164.08958%2C%22width%22%3A195.24580000000014%2C%22height%22%3A29.079169999999976%2C%22text%22%3A%22%E8%BF%99%E9%87%8C%E6%89%8D%E5%BC%80%E5%A7%8B%E8%B0%83%E7%94%A8fe%22%7D%2C%7B%22x%22%3A1402.0312%2C%22y%22%3A168.24374%2C%22width%22%3A78.92920000000004%2C%22height%22%3A22.84792999999999%2C%22text%22%3A%22%E7%94%A8fetch%22%7D%2C%7B%22x%22%3A679.20624%2C%22y%22%3A203.55417%2C%22width%22%3A49.850059999999985%2C%22height%22%3A20.77082999999999%2C%22text%22%3A%22html%22%7D%2C%7B%22x%22%3A834.9875%2C%22y%22%3A203.55417%2C%22width%22%3A29.079150000000027%2C%22height%22%3A27.00209000000001%2C%22text%22%3A%22js%22%7D%2C%7B%22x%22%3A1528.7334%2C%22y%22%3A203.55417%2C%22width%22%3A68.54369999999994%2C%22height%22%3A22.847910000000013%2C%22text%22%3A%22VidE0%22%7D%2C%7B%22x%22%3A1782.1376%2C%22y%22%3A203.55417%2C%22width%22%3A147.47289999999998%2C%22height%22%3A24.92500000000001%2C%22text%22%3A%22JSExEcution%22%7D%2C%7B%22x%22%3A373.875%2C%22y%22%3A203.55417%2C%22width%22%3A91.39166%2C%22height%22%3A20.77082999999999%2C%22text%22%3A%22connect%22%7D%2C%7B%22x%22%3A1244.173%2C%22y%22%3A205.63126%2C%22width%22%3A68.54369999999994%2C%22height%22%3A20.770820000000015%2C%22text%22%3A%22flash%22%7D%2C%7B%22x%22%3A1676.2063%2C%22y%22%3A205.63126%2C%22width%22%3A62.3125%2C%22height%22%3A20.770820000000015%2C%22text%22%3A%22other%22%7D%2C%7B%22x%22%3A1100.8541%2C%22y%22%3A207.70833%2C%22width%22%3A64.38969999999995%2C%22height%22%3A20.77084000000002%2C%22text%22%3A%22iMage%22%7D%2C%7B%22x%22%3A726.9792%2C%22y%22%3A278.32916%2C%22width%22%3A47.77290000000005%2C%22height%22%3A27.002079999999978%2C%22text%22%3A%220.2%22%7D%2C%7B%22x%22%3A1771.7521%2C%22y%22%3A278.32916%2C%22width%22%3A43.61869999999999%2C%22height%22%3A24.925020000000018%2C%22text%22%3A%221.3%22%7D%2C%7B%22x%22%3A635.5875%2C%22y%22%3A280.40625%2C%22width%22%3A43.61874%2C%22height%22%3A24.92498999999998%2C%22text%22%3A%220.1%22%7D%2C%7B%22x%22%3A828.7563%2C%22y%22%3A280.40625%2C%22width%22%3A39.464500000000044%2C%22height%22%3A22.84793000000002%2C%22text%22%3A%220.3%22%7D%2C%7B%22x%22%3A920.14795%2C%22y%22%3A280.40625%2C%22width%22%3A39.46454999999992%2C%22height%22%3A20.770849999999996%2C%22text%22%3A%220.4%22%7D%2C%7B%22x%22%3A1013.6167%2C%22y%22%3A280.40625%2C%22width%22%3A41.54160000000002%2C%22height%22%3A22.84793000000002%2C%22text%22%3A%220.5%22%7D%2C%7B%22x%22%3A1208.8625%2C%22y%22%3A280.40625%2C%22width%22%3A39.46460000000002%2C%22height%22%3A20.770849999999996%2C%22text%22%3A%220.7%22%7D%2C%7B%22x%22%3A1300.2542%2C%22y%22%3A280.40625%2C%22width%22%3A41.54169999999999%2C%22height%22%3A22.84793000000002%2C%22text%22%3A%220.8%22%7D%2C%7B%22x%22%3A1391.6459%2C%22y%22%3A280.40625%2C%22width%22%3A43.61869999999999%2C%22height%22%3A22.84793000000002%2C%22text%22%3A%220.9%22%7D%2C%7B%22x%22%3A1684.5146%2C%22y%22%3A280.40625%2C%22width%22%3A37.387500000000045%2C%22height%22%3A22.84793000000002%2C%22text%22%3A%221.2%22%7D%2C%7B%22x%22%3A1867.298%2C%22y%22%3A280.40625%2C%22width%22%3A41.54160000000002%2C%22height%22%3A22.84793000000002%2C%22text%22%3A%221.4%22%7D%2C%7B%22x%22%3A1111.2396%2C%22y%22%3A282.48334%2C%22width%22%3A41.54159999999979%2C%22height%22%3A20.77084000000002%2C%22text%22%3A%220.6%22%7D%2C%7B%22x%22%3A1584.8146%2C%22y%22%3A282.48334%2C%22width%22%3A39.46460000000002%2C%22height%22%3A22.84789999999998%2C%22text%22%3A%221.1%22%7D%2C%7B%22x%22%3A70.620834%2C%22y%22%3A286.6375%2C%22width%22%3A76.85208599999999%2C%22height%22%3A22.84790000000004%2C%22text%22%3A%22step-1%22%7D%2C%7B%22x%22%3A114.239586%2C%22y%22%3A326.10208%2C%22width%22%3A442.418714%2C%22height%22%3A27.002079999999978%2C%22text%22%3A%221.xcodebuild.sit...-precornect.htmi%22%7D%2C%7B%22x%22%3A953.3813%2C%22y%22%3A328.17917%2C%22width%22%3A58.15829999999994%2C%22height%22%3A22.84793000000002%2C%22text%22%3A%22375ms%22%7D%2C%7B%22x%22%3A1142.3959%2C%22y%22%3A359.33542%2C%22width%22%3A49.849899999999934%2C%22height%22%3A24.924980000000005%2C%22text%22%3A%22155%22%7D%2C%7B%22x%22%3A103.854164%2C%22y%22%3A359.33542%2C%22width%22%3A471.497936%2C%22height%22%3A29.07916%2C%22text%22%3A%222.cdn.jsdelivr.n...production.min.Js%22%7D%2C%7B%22x%22%3A1204.7084%2C%22y%22%3A394.64584%2C%22width%22%3A68.54369999999994%2C%22height%22%3A22.84789999999998%2C%22text%22%3A%22109%22%7D%2C%7B%22x%22%3A97.62292%2C%22y%22%3A396.72293%2C%22width%22%3A459.03538000000003%2C%22height%22%3A24.92498999999998%2C%22text%22%3A%223.cdn.Jsdelivr.n...produiction.min.J%22%7D%2C%7B%22x%22%3A1636.7417%2C%22y%22%3A427.87918%2C%22width%22%3A70.62079999999992%2C%22height%22%3A24.92498999999998%2C%22text%22%3A%2236NS%22%7D%2C%7B%22x%22%3A97.62292%2C%22y%22%3A429.95627%2C%22width%22%3A425.80207999999993%2C%22height%22%3A24.92498999999998%2C%22text%22%3A%224.cert.int-x3.letsencrypt.org-%22%7D%2C%7B%22x%22%3A963.76666%2C%22y%22%3A461.11252%2C%22width%22%3A76.85213999999996%2C%22height%22%3A24.924980000000005%2C%22text%22%3A%22880ms%22%7D%2C%7B%22x%22%3A103.854164%2C%22y%22%3A461.11252%2C%22width%22%3A456.95833600000003%2C%22height%22%3A27.002079999999978%2C%22text%22%3A%225.wWw.ocky.009c73113%22%7D%2C%7B%22x%22%3A1676.2063%2C%22y%22%3A496.4229%2C%22width%22%3A43.618799999999965%2C%22height%22%3A27.002099999999928%2C%22text%22%3A%221.2%22%7D%2C%7B%22x%22%3A1771.7521%2C%22y%22%3A496.4229%2C%22width%22%3A41.54169999999999%2C%22height%22%3A24.924999999999955%2C%22text%22%3A%221.3%22%7D%2C%7B%22x%22%3A635.5875%2C%22y%22%3A498.5%2C%22width%22%3A39.464560000000006%2C%22height%22%3A22.84789999999998%2C%22text%22%3A%220.1%22%7D%2C%7B%22x%22%3A915.9938%2C%22y%22%3A496.4229%2C%22width%22%3A45.69580000000008%2C%22height%22%3A24.924999999999955%2C%22text%22%3A%220.4%22%7D%2C%7B%22x%22%3A1017.7708%2C%22y%22%3A498.5%2C%22width%22%3A33.233400000000074%2C%22height%22%3A20.77080000000001%2C%22text%22%3A%220.5%22%7D%2C%7B%22x%22%3A1109.1625%2C%22y%22%3A498.5%2C%22width%22%3A41.54169999999999%2C%22height%22%3A22.84789999999998%2C%22text%22%3A%220.6%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22WaterfallView%20RUMFirstPaint%20lStartRender%20IDomInteractive%20OnLoad%20IDocumentCompleto%20DOMContentLoaded%20%E8%BF%99%E9%87%8C%E6%89%8D%E5%BC%80%E5%A7%8B%E8%B0%83%E7%94%A8fe%20%E7%94%A8fetch%20html%20js%20VidE0%20JSExEcution%20connect%20flash%20other%20iMage%200.2%201.3%200.1%200.3%200.4%200.5%200.7%200.8%200.9%201.2%201.4%200.6%201.1%20step-1%201.xcodebuild.sit...-precornect.htmi%20375ms%20155%202.cdn.jsdelivr.n...production.min.Js%20109%203.cdn.Jsdelivr.n...produiction.min.J%2036NS%204.cert.int-x3.letsencrypt.org-%20880ms%205.wWw.ocky.009c73113%201.2%201.3%200.1%200.4%200.5%200.6%22%2C%22width%22%3A997%2C%22height%22%3A269%7D\"></card></p><p data-lake-id=\"7e76604f0ebc96c939f484151b3ecb34\">可以看到这种情况下，我们在 JS 加载后前（实际上 <code>fetch</code> 这个时候才能开始执行），就开始建立连接。同时 <code>preconnect</code> 也附带着让浏览器提前进行了 DNS 解析。</p><h3 id=\"QIrav\" data-lake-id=\"78a8bcb0e57657edb1fe385347d6c081\">连接复用</h3><p data-lake-id=\"051097bcd53f9be26d32f8df0f6cd3ab\">当然如果直接使用同一个连接，即使不使用 <code>pre-connect</code> 就能天然减少额外的连接次数。</p><h4 id=\"cSppd\" data-lake-id=\"ca062d8c857698ffe7d142655feb0366\">域名收拢</h4><p data-lake-id=\"b294e747a4bb36c398558ede70b441a7\">在 HTTP 1 时代，为了解决阻塞的问题，很多网站都做了分散域名的优化让多个请求可以并行加载。而在 HTTP 2 普及后，已经具备了连接复用的能力，使用多个分散的域名只会让我们消耗更高的连接成本。</p><p data-lake-id=\"517fab71968a2ac8b1146c92b4d8f5ad\"><br /></p><p data-lake-id=\"81ac2cf0d027cb4e7b0c8779f03bc73f\">所以尽可能把域名收拢到相同域名，可以尽可能的减少建连的耗时。</p><h4 id=\"SbrZd\" data-lake-id=\"6100b4eaf78c4bd2b4c207e4eec8f186\">IP 收拢</h4><p data-lake-id=\"af9a8d3461a997e1086ca6c62fe57224\">我们都知道，一个 TCP 连接是由一个四元组组成的（源 IP、源端口、目标 IP、目标端口），和域名其实没有关系。所以看起来很反直觉的一点是，当两个请求域名不同，但来自同一个 IP 时，同样可以复用连接（虽然会额外解析一次 DNS）。</p><p data-lake-id=\"9409a5fdecfff4861dd6dc87b907fbfa\"><br /></p><p data-lake-id=\"a0f641aa7ebbfe70182d8b29d31f18b5\">如果我们试用了类似于阿里云全站加速的技术，把页面和静态资源的 IP 指向同一个可以帮助我们减少重复的连接建立。</p><h3 id=\"7UdXx\" data-lake-id=\"e58da19aee88d4850ea291dcdfc5151b\">连接为什么不复用</h3><h4 data-lake-id=\"1b651f3aa0903587dab0c887ae4e8dda\" id=\"8RMHh\">如何确定一个连接</h4><p data-lake-id=\"2086181818360c3aa34716b282df07fe\">看起来无论是 <code>pre-connect</code> 还是链接复用都非常简单，但实际应用中并非如此。由于一些浏览器安全策略，不同的连接之间复用会受到一些限制。</p><p data-lake-id=\"776bd91c2054a7ca7cf91ddcbfd600d6\"><br /></p><p data-lake-id=\"26a63609679fc28034647fcd6ee470aa\">在 <a href=\"https://fetch.spec.whatwg.org/#cors-protocol-and-credentials\" target=\"_blank\">https://fetch.spec.whatwg.org/#cors-protocol-and-credentials</a> 我们可以看到</p><p data-lake-id=\"c49ba6356e1fe8e92318d172d6832c64\"><br /></p><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"c9e20f7d007a80c9c582a97445231917\">A user agent has an associated connection pool. A connection pool consists of zero or more connections. Each connection is identified by an origin (an origin) and credentials (a boolean).</p></blockquote><p data-lake-id=\"120ee7167ba71fc7dd6f2f283d9e1102\"><br /></p><p data-lake-id=\"34c0f9d96c0bda363c43671201d68747\">即一个连接是由 <code>origin</code> 和 <code>credentials</code> 确定的，这里的 <code>origin</code> 并非单纯是指我们加载的连接的 <code>origin</code> ，而是对于页面上不同的资源来说，会遵循不同的策略（详细的策略见 <a href=\"https://html.spec.whatwg.org/multipage/origin.html#concept-origin\" target=\"_blank\">https://html.spec.whatwg.org/multipage/origin.html#concept-origin</a>）。</p><p data-lake-id=\"773a24606f8283d083f79baae5b63709\"><br /></p><p data-lake-id=\"6477e19caa9d2af0d79ab4ed3f510216\">例如对于图像而言（其实对于 <code>script/css</code> 等来说也是一样的）</p><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"44cf5ac260de4660c97ed053d5a201eb\">For images of <code><a href=\"https://html.spec.whatwg.org/multipage/embedded-content.html#the-img-element\" target=\"_blank\">img</a></code> elements</p><p data-lake-id=\"3743496dad55c944f878841d4fb6c9c9\">If the <a href=\"https://html.spec.whatwg.org/multipage/images.html#img-req-data\" target=\"_blank\">image data</a> is <a href=\"https://html.spec.whatwg.org/multipage/urls-and-fetching.html#cors-cross-origin\" target=\"_blank\">CORS-cross-origin</a></p><p data-lake-id=\"8559060a85109b496d1cf7cd0fe5fdce\" style=\"text-indent: 2em;\">A unique <a href=\"https://html.spec.whatwg.org/multipage/origin.html#concept-origin-opaque\" target=\"_blank\">opaque origin</a> assigned when the image is created.</p><p data-lake-id=\"8db595db0ead478d1926ced1d12d5bb0\">If the <a href=\"https://html.spec.whatwg.org/multipage/images.html#img-req-data\" target=\"_blank\">image data</a> is <a href=\"https://html.spec.whatwg.org/multipage/urls-and-fetching.html#cors-same-origin\" target=\"_blank\">CORS-same-origin</a></p><p data-lake-id=\"252c8fa7340ed1e946c894dd1704577e\" style=\"text-indent: 2em;\">The <code><a href=\"https://html.spec.whatwg.org/multipage/embedded-content.html#the-img-element\" target=\"_blank\">img</a></code> element's <a href=\"https://dom.spec.whatwg.org/#concept-node-document\" target=\"_blank\">node document</a>'s <a href=\"https://html.spec.whatwg.org/multipage/origin.html#concept-origin\" target=\"_blank\">origin</a>.</p></blockquote><p data-lake-id=\"38738fd5a20e55a0d99e57adc35a1d0d\"><br /></p><p data-lake-id=\"b3e1190c1e148dfbdb6f28134b8e9afa\">即在有 <code>crossorigin</code> 时（不是单纯的是另外一个域名时），则其 <code>origin</code> 是图片的 <code>origin</code> 。</p><p data-lake-id=\"2100e098b9b1fcb5ab9471fabcfcba5d\">如果没有（一般来说是没有的），则 <code>origin</code> 是页面相同的 <code>origin</code> 。</p><p data-lake-id=\"b12094b5d23261d28ea6a8c7598686c9\"><br /></p><p data-lake-id=\"4a5c9cf7adab611267b47aa24c8b93a6\">这意味着对于 <code>cors</code> 和 <code>non-cors</code> 的请求、<code><span>credentials=true</span></code> 和 <code><span>credentials=false</span></code> 的请求来说，他们的连接是不能复用的。</p><p data-lake-id=\"f4bc2d339c084a9ab5afa63396b6314d\"><br /></p><p data-lake-id=\"2c5a0136e3c65c9f0c98e8727e65e6bf\">例如 <a href=\"https://xcodebuild.github.io/why-so-slow/connect/cors-non-cors.html\" target=\"_blank\">https://xcodebuild.github.io/why-so-slow/connect/cors-non-cors.html</a> 这个页面中，有四个来自同一个域名的 <code>img</code> ，但是后面两个是 <code>crossorigin</code> 的</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%3Cimg%20src%3D%5C%22https%3A%2F%2Fi.picsum.photos%2Fid%2F1061%2F200%2F200.jpg%5C%22%2F%3E%5Cn%3Cimg%20src%3D%5C%22https%3A%2F%2Fi.picsum.photos%2Fid%2F1061%2F200%2F300.jpg%5C%22%2F%3E%5Cn%3Cimg%20src%3D%5C%22https%3A%2F%2Fi.picsum.photos%2Fid%2F1061%2F100%2F300.jpg%5C%22%20crossorigin%2F%3E%5Cn%3Cimg%20src%3D%5C%22https%3A%2F%2Fi.picsum.photos%2Fid%2F1061%2F300%2F300.jpg%5C%22%20crossorigin%2F%3E%22%2C%22id%22%3A%22qjOm4%22%7D\"></card><p data-lake-id=\"5868cac9301043b06379a47479551182\"><br /></p><p data-lake-id=\"9f8410e4d4ede8eb343bb39a9337f754\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585190581512-5105a07b-5871-4d57-ac19-829f926b978c.png%22%2C%22originWidth%22%3A1924%2C%22originHeight%22%3A916%2C%22name%22%3A%22image.png%22%2C%22size%22%3A538733%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A791.6458%2C%22y%22%3A36.075%2C%22width%22%3A322.6709000000001%2C%22height%22%3A42.08749999999999%2C%22text%22%3A%22WaterfallView%22%7D%2C%7B%22x%22%3A322.67084%2C%22y%22%3A144.3%2C%22width%22%3A144.29998999999998%2C%22height%22%3A26.05417%2C%22text%22%3A%22IStartRender%22%7D%2C%7B%22x%22%3A495.02917%2C%22y%22%3A144.3%2C%22width%22%3A180.37502999999992%2C%22height%22%3A26.05417%2C%22text%22%3A%22IRUMFirstPaint%22%7D%2C%7B%22x%22%3A939.95416%2C%22y%22%3A144.3%2C%22width%22%3A240.5000399999999%2C%22height%22%3A24.049999999999983%2C%22text%22%3A%22DOMContentLoaded%22%7D%2C%7B%22x%22%3A1352.8125%2C%22y%22%3A144.3%2C%22width%22%3A240.5%2C%22height%22%3A30.0625%2C%22text%22%3A%22dIDocumentComplete%22%7D%2C%7B%22x%22%3A697.45%2C%22y%22%3A146.30417%2C%22width%22%3A186.38749999999993%2C%22height%22%3A24.05000000000001%2C%22text%22%3A%22IDOMInteracitive%22%7D%2C%7B%22x%22%3A1238.575%2C%22y%22%3A146.30417%2C%22width%22%3A96.20000000000005%2C%22height%22%3A24.05000000000001%2C%22text%22%3A%22OnLoad%22%7D%2C%7B%22x%22%3A1745.6292%2C%22y%22%3A222.46251%2C%22width%22%3A142.29579999999987%2C%22height%22%3A26.054149999999993%2C%22text%22%3A%22JSExecution%22%7D%2C%7B%22x%22%3A1210.5167%2C%22y%22%3A224.46667%2C%22width%22%3A62.12920000000008%2C%22height%22%3A24.049990000000008%2C%22text%22%3A%22Flash%22%7D%2C%7B%22x%22%3A1356.8208%2C%22y%22%3A224.46667%2C%22width%22%3A50.10419999999999%2C%22height%22%3A22.045829999999995%2C%22text%22%3A%22font%22%7D%2C%7B%22x%22%3A66.1375%2C%22y%22%3A226.47084%2C%22width%22%3A52.108334%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%22wait%22%7D%2C%7B%22x%22%3A218.45416%2C%22y%22%3A226.47084%2C%22width%22%3A40.08334000000002%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%22dns%22%7D%2C%7B%22x%22%3A501.04166%2C%22y%22%3A226.47084%2C%22width%22%3A38.07919000000004%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%22ssI%22%7D%2C%7B%22x%22%3A639.32916%2C%22y%22%3A226.47084%2C%22width%22%3A50.10419000000002%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%22html%22%7D%2C%7B%22x%22%3A795.6542%2C%22y%22%3A226.47084%2C%22width%22%3A30.0625%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%22js%22%7D%2C%7B%22x%22%3A1062.2084%2C%22y%22%3A226.47084%2C%22width%22%3A58.12079999999992%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%22IMage%22%7D%2C%7B%22x%22%3A1495.1084%2C%22y%22%3A226.47084%2C%22width%22%3A64.13329999999996%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%22video%22%7D%2C%7B%22x%22%3A1633.3959%2C%22y%22%3A226.47084%2C%22width%22%3A60.125%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%22other%22%7D%2C%7B%22x%22%3A336.7%2C%22y%22%3A228.475%2C%22width%22%3A84.17500000000001%2C%22height%22%3A20.041660000000007%2C%22text%22%3A%22connect%22%7D%2C%7B%22x%22%3A931.9375%2C%22y%22%3A228.475%2C%22width%22%3A44.091699999999946%2C%22height%22%3A20.041660000000007%2C%22text%22%3A%22CSS%22%7D%2C%7B%22x%22%3A1639.4083%2C%22y%22%3A298.62085%2C%22width%22%3A46.09590000000003%2C%22height%22%3A26.054149999999993%2C%22text%22%3A%221.5%22%7D%2C%7B%22x%22%3A575.19586%2C%22y%22%3A300.625%2C%22width%22%3A44.091639999999984%2C%22height%22%3A24.05000000000001%2C%22text%22%3A%220.1%22%7D%2C%7B%22x%22%3A657.3667%2C%22y%22%3A300.625%2C%22width%22%3A40.08330000000001%2C%22height%22%3A24.05000000000001%2C%22text%22%3A%220.2%22%7D%2C%7B%22x%22%3A725.50836%2C%22y%22%3A300.625%2C%22width%22%3A44.09168%2C%22height%22%3A22.04584%2C%22text%22%3A%220.3%22%7D%2C%7B%22x%22%3A887.8458%2C%22y%22%3A300.625%2C%22width%22%3A30.0625%2C%22height%22%3A26.05417%2C%22text%22%3A%220.5%22%7D%2C%7B%22x%22%3A959.99585%2C%22y%22%3A300.625%2C%22width%22%3A44.09164999999996%2C%22height%22%3A24.05000000000001%2C%22text%22%3A%220.6%22%7D%2C%7B%22x%22%3A1032.1459%2C%22y%22%3A300.625%2C%22width%22%3A44.09159999999997%2C%22height%22%3A22.04584%2C%22text%22%3A%220.7%22%7D%2C%7B%22x%22%3A1186.4667%2C%22y%22%3A300.625%2C%22width%22%3A42.08750000000009%2C%22height%22%3A22.04584%2C%22text%22%3A%220.9%22%7D%2C%7B%22x%22%3A1491.1%2C%22y%22%3A300.625%2C%22width%22%3A44.09170000000017%2C%22height%22%3A24.05000000000001%2C%22text%22%3A%221.3%22%7D%2C%7B%22x%22%3A1565.2542%2C%22y%22%3A300.625%2C%22width%22%3A44.09159999999997%2C%22height%22%3A22.04584%2C%22text%22%3A%221.4%22%7D%2C%7B%22x%22%3A1719.5751%2C%22y%22%3A300.625%2C%22width%22%3A38.079099999999926%2C%22height%22%3A24.05000000000001%2C%22text%22%3A%221.6%22%7D%2C%7B%22x%22%3A1793.7291%2C%22y%22%3A300.625%2C%22width%22%3A40.08339999999998%2C%22height%22%3A24.05000000000001%2C%22text%22%3A%221.7%22%7D%2C%7B%22x%22%3A805.675%2C%22y%22%3A302.62918%2C%22width%22%3A44.09166000000005%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%220.4%22%7D%2C%7B%22x%22%3A1264.6292%2C%22y%22%3A302.62918%2C%22width%22%3A44.09159999999997%2C%22height%22%3A20.04165999999998%2C%22text%22%3A%221.0%22%7D%2C%7B%22x%22%3A1418.95%2C%22y%22%3A302.62918%2C%22width%22%3A36.075000000000045%2C%22height%22%3A22.045819999999992%2C%22text%22%3A%221.2%22%7D%2C%7B%22x%22%3A32.066666%2C%22y%22%3A306.6375%2C%22width%22%3A76.158334%2C%22height%22%3A24.05000000000001%2C%22text%22%3A%22step-1%22%7D%2C%7B%22x%22%3A72.15%2C%22y%22%3A346.72083%2C%22width%22%3A456.95000000000005%2C%22height%22%3A26.05417%2C%22text%22%3A%221.xcodebuild.git...ors-non-cors.html%22%7D%2C%7B%22x%22%3A68.14167%2C%22y%22%3A382.79584%2C%22width%22%3A376.78335000000004%2C%22height%22%3A24.04998999999998%2C%22text%22%3A%222.i.picsum.photos-200.jpg%22%7D%2C%7B%22x%22%3A1012.1042%2C%22y%22%3A382.79584%2C%22width%22%3A68.14159999999993%2C%22height%22%3A20.04165999999998%2C%22text%22%3A%22178m%22%7D%2C%7B%22x%22%3A60.125%2C%22y%22%3A416.86667%2C%22width%22%3A344.71667%2C%22height%22%3A26.05417%2C%22text%22%3A%223.i.picsum.photos-300.jpg%22%7D%2C%7B%22x%22%3A58.120834%2C%22y%22%3A450.9375%2C%22width%22%3A352.733326%2C%22height%22%3A24.050020000000018%2C%22text%22%3A%224.i.picsum.photos-300.jpg%22%7D%2C%7B%22x%22%3A1016.1125%2C%22y%22%3A452.94168%2C%22width%22%3A70.14580000000001%2C%22height%22%3A22.04584%2C%22text%22%3A%22149m%22%7D%2C%7B%22x%22%3A62.129166%2C%22y%22%3A483.00418%2C%22width%22%3A354.737504%2C%22height%22%3A26.05417%2C%22text%22%3A%225.i.picsun.photos-300.jpg%22%7D%2C%7B%22x%22%3A1198.4917%2C%22y%22%3A515.07086%2C%22width%22%3A627.3042%2C%22height%22%3A30.0625%2C%22text%22%3A%220.91.01.11.21.3141.51.61.7%22%7D%2C%7B%22x%22%3A118.245834%2C%22y%22%3A585.2167%2C%22width%22%3A186.387496%2C%22height%22%3A26.054100000000062%2C%22text%22%3A%22-cpuUtilization%22%7D%2C%7B%22x%22%3A120.25%2C%22y%22%3A679.4125%2C%22width%22%3A352.73334%2C%22height%22%3A30.0625%2C%22text%22%3A%22BandhuidthIn(o-5.000kops)%22%7D%2C%7B%22x%22%3A116.24167%2C%22y%22%3A777.6167%2C%22width%22%3A244.50833%2C%22height%22%3A30.0625%2C%22text%22%3A%22BraowserMainThread%22%7D%2C%7B%22x%22%3A118.245834%2C%22y%22%3A847.7625%2C%22width%22%3A240.50001600000002%2C%22height%22%3A24.049999999999955%2C%22text%22%3A%22PageisInteractive%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22WaterfallView%20IStartRender%20IRUMFirstPaint%20DOMContentLoaded%20dIDocumentComplete%20IDOMInteracitive%20OnLoad%20JSExecution%20Flash%20font%20wait%20dns%20ssI%20html%20js%20IMage%20video%20other%20connect%20CSS%201.5%200.1%200.2%200.3%200.5%200.6%200.7%200.9%201.3%201.4%201.6%201.7%200.4%201.0%201.2%20step-1%201.xcodebuild.git...ors-non-cors.html%202.i.picsum.photos-200.jpg%20178m%203.i.picsum.photos-300.jpg%204.i.picsum.photos-300.jpg%20149m%205.i.picsun.photos-300.jpg%200.91.01.11.21.3141.51.61.7%20-cpuUtilization%20BandhuidthIn(o-5.000kops)%20BraowserMainThread%20PageisInteractive%22%2C%22width%22%3A962%2C%22height%22%3A458%7D\"></card></p><p data-lake-id=\"4da7628a3b87eee54f02504b0d61adf2\">这样就会发现前面两个和后面两个分别能够复用连接，但是 <code>cors</code> 的和 <code>non-cors</code> 的不能复用连接。</p><blockquote style=\"padding-left: 1em;\"><p data-lake-id=\"12aa126383eb69dbc7340c9f2205f3da\">其实这里如果有 crossorigin=&quot;use-credentials&quot;，其和 cors 也不能复用连接</p></blockquote><p data-lake-id=\"5600f710637ff3bdcf5cbe66c699316e\">具体这么做的原因主要是为了安全考虑，在 <a href=\"https://github.com/whatwg/fetch/issues/341\" target=\"_blank\">https://github.com/whatwg/fetch/issues/341</a> 中有提到，在这里不展开。</p><h4 data-lake-id=\"e872d748ee4bf8a610db0c1f81880c37\" id=\"0RLnO\">怎么避免不复用</h4><p data-lake-id=\"a5b74125bb3297ce3f0faff01fdf7578\">知道了怎么确定一个连接后，我们就知道怎么避免连接没有复用的问题。无论是我们尝试让两个请求复用一个连接还是通过 <code>preconnect</code> 去提前建连，都应该保持其 <code>cors</code> 和 <code>credentials</code> 的一致性。</p><p data-lake-id=\"80cb4a22b79d8b28edd5791528c8b817\"><br /></p><p data-lake-id=\"236c7fa1f7757395e21decdfb3ba3263\">由于实际规则其实蛮复杂的，并不能保证我们总是能判断策略是否符合预期，<strong>还是建议通过 </strong><strong><code>WebPageTest</code></strong><strong> 等工具验证是否有多余的建连。</strong></p><p data-lake-id=\"976905f2b2af29d300081e9a3216a9f4\"><br /></p><p data-lake-id=\"d45f6a86700f21654ffe21f1bce28cb7\">当然通过 Chrome Devtools 也能够验证这一点，我们可以在 Network 面板打开 <code>Connection ID</code> ，可以看到不同的连接使用的 <code>Connection ID</code> 是不同的。</p><p data-lake-id=\"0a3115b0b66ec5975000fb9396f6a6c3\"><br /></p><p data-lake-id=\"a2d4f632c2fa703c2abd8e56fa8c0440\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1585191129731-7ff634e7-4184-4de0-98a0-d3339c388644.png%22%2C%22originWidth%22%3A2012%2C%22originHeight%22%3A202%2C%22name%22%3A%22image.png%22%2C%22size%22%3A181126%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A578.45%2C%22y%22%3A12.575%2C%22width%22%3A44.01249999999993%2C%22height%22%3A25.150000000000002%2C%22text%22%3A%22200%22%7D%2C%7B%22x%22%3A1288.9375%2C%22y%22%3A12.575%2C%22width%22%3A77.5458000000001%2C%22height%22%3A23.054166%2C%22text%22%3A%227.3KB%22%7D%2C%7B%22x%22%3A46.108334%2C%22y%22%3A14.670834%2C%22width%22%3A81.73749600000001%2C%22height%22%3A25.150001000000003%2C%22text%22%3A%22200.jpg%22%7D%2C%7B%22x%22%3A917.975%2C%22y%22%3A14.670834%2C%22width%22%3A217.96670000000006%2C%22height%22%3A25.150001000000003%2C%22text%22%3A%22cors-non-cors.html%22%7D%2C%7B%22x%22%3A1454.5083%2C%22y%22%3A14.670834%2C%22width%22%3A81.73749999999995%2C%22height%22%3A23.054166000000002%2C%22text%22%3A%22754Ms%22%7D%2C%7B%22x%22%3A1542.5333%2C%22y%22%3A14.670834%2C%22width%22%3A46.10829999999987%2C%22height%22%3A20.958332%2C%22text%22%3A%22229%22%7D%2C%7B%22x%22%3A750.30835%2C%22y%22%3A16.766666%2C%22width%22%3A50.29998999999998%2C%22height%22%3A23.054169%2C%22text%22%3A%22ipeg%22%7D%2C%7B%22x%22%3A46.108334%2C%22y%22%3A56.5875%2C%22width%22%3A79.641666%2C%22height%22%3A25.15%2C%22text%22%3A%22300.jpg%22%7D%2C%7B%22x%22%3A582.64166%2C%22y%22%3A56.5875%2C%22width%22%3A39.820839999999976%2C%22height%22%3A23.054170000000006%2C%22text%22%3A%22200%22%7D%2C%7B%22x%22%3A1282.65%2C%22y%22%3A56.5875%2C%22width%22%3A83.83330000000001%2C%22height%22%3A23.054170000000006%2C%22text%22%3A%2210.2kB%22%7D%2C%7B%22x%22%3A1450.3167%2C%22y%22%3A56.5875%2C%22width%22%3A83.83330000000001%2C%22height%22%3A25.15%2C%22text%22%3A%22755ms%22%7D%2C%7B%22x%22%3A1546.725%2C%22y%22%3A56.5875%2C%22width%22%3A39.82080000000019%2C%22height%22%3A23.054170000000006%2C%22text%22%3A%22229%22%7D%2C%7B%22x%22%3A750.30835%2C%22y%22%3A58.683334%2C%22width%22%3A52.39580999999998%2C%22height%22%3A20.958336000000003%2C%22text%22%3A%22jipeg%22%7D%2C%7B%22x%22%3A917.975%2C%22y%22%3A56.5875%2C%22width%22%3A224.2541%2C%22height%22%3A25.15%2C%22text%22%3A%22corS-non-cors.html%22%7D%2C%7B%22x%22%3A580.54584%2C%22y%22%3A96.40833%2C%22width%22%3A48.20416%2C%22height%22%3A25.150003999999996%2C%22text%22%3A%22200%22%7D%2C%7B%22x%22%3A1544.6292%2C%22y%22%3A96.40833%2C%22width%22%3A46.10829999999987%2C%22height%22%3A25.150003999999996%2C%22text%22%3A%22s243%22%7D%2C%7B%22x%22%3A44.0125%2C%22y%22%3A98.504166%2C%22width%22%3A83.83333%2C%22height%22%3A25.150003999999996%2C%22text%22%3A%22300.jpg%22%7D%2C%7B%22x%22%3A924.2625%2C%22y%22%3A98.504166%2C%22width%22%3A213.77499999999986%2C%22height%22%3A23.054168000000004%2C%22text%22%3A%22cors-non-cors.html%22%7D%2C%7B%22x%22%3A1291.0333%2C%22y%22%3A98.504166%2C%22width%22%3A73.35419999999999%2C%22height%22%3A20.958334000000008%2C%22text%22%3A%225.8kB%22%7D%2C%7B%22x%22%3A1450.3167%2C%22y%22%3A98.504166%2C%22width%22%3A81.73749999999995%2C%22height%22%3A23.054168000000004%2C%22text%22%3A%22753ms%22%7D%2C%7B%22x%22%3A748.2125%2C%22y%22%3A100.6%2C%22width%22%3A52.39584000000002%2C%22height%22%3A23.05417%2C%22text%22%3A%22ipog%22%7D%2C%7B%22x%22%3A580.54584%2C%22y%22%3A138.325%2C%22width%22%3A48.20416%2C%22height%22%3A25.150000000000006%2C%22text%22%3A%22200%22%7D%2C%7B%22x%22%3A44.0125%2C%22y%22%3A140.42084%2C%22width%22%3A83.83333%2C%22height%22%3A27.245830000000012%2C%22text%22%3A%22300.jpg%22%7D%2C%7B%22x%22%3A1278.4584%2C%22y%22%3A140.42084%2C%22width%22%3A85.92910000000006%2C%22height%22%3A25.149990000000003%2C%22text%22%3A%2214.6kB%22%7D%2C%7B%22x%22%3A1462.8917%2C%22y%22%3A138.325%2C%22width%22%3A62.875%2C%22height%22%3A27.245830000000012%2C%22text%22%3A%222.58s%22%7D%2C%7B%22x%22%3A1546.725%2C%22y%22%3A140.42084%2C%22width%22%3A44.012500000000045%2C%22height%22%3A25.149990000000003%2C%22text%22%3A%22243%22%7D%2C%7B%22x%22%3A752.4042%2C%22y%22%3A142.51666%2C%22width%22%3A50.299960000000056%2C%22height%22%3A23.05417%2C%22text%22%3A%22ipeg%22%7D%2C%7B%22x%22%3A924.2625%2C%22y%22%3A142.51666%2C%22width%22%3A209.5833%2C%22height%22%3A23.05417%2C%22text%22%3A%22corS-non-cors.html%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22200%207.3KB%20200.jpg%20cors-non-cors.html%20754Ms%20229%20ipeg%20300.jpg%20200%2010.2kB%20755ms%20229%20jipeg%20corS-non-cors.html%20200%20s243%20300.jpg%20cors-non-cors.html%205.8kB%20753ms%20ipog%20200%20300.jpg%2014.6kB%202.58s%20243%20ipeg%20corS-non-cors.html%22%2C%22width%22%3A1006%2C%22height%22%3A101%7D\"></card></p><h2 id=\"EyboO\" data-lake-id=\"81e2aaea9defd8d7f05478e785575ef3\">为什么要握手</h2><p data-lake-id=\"cde95d2636384e8380030a65f73e99ec\">为什么一定要先握手才能发送 HTTP 报文呢？这是由 TCP 本身的设计决定的，TCP 是一种可靠的传输层通信协议。所谓可靠，就是能保证数据流的顺序和完整性。</p><h3 id=\"qVj1E\" data-lake-id=\"ea5974f97f7c04f3e6b00ed283cd96d1\">ISN</h3><p data-lake-id=\"f80fa130199732a4efe2053f764896ca\">TCP 本身在网络层（IP 协议）的上层，应用层的下层（HTTP 协议）。当应用层发起请求时，把包传给 TCP，TCP 将其分割成合适的大小，将其传递给网络层。</p><p data-lake-id=\"e01f3acdba3193c10d03421381e3bdeb\"><br /></p><p data-lake-id=\"f5f90712762731f0e0e43a9f5bb49b6a\">为了保证不丢包，TCP 会给每一个包一个序号，接收端接受到后返回响应的确认消息。如果在合理的时间内没有收到确认，发送端则会认为发生了丢包，会尝试重新发送。</p><p data-lake-id=\"734d2352f27650d5e07762ad813c6e79\"><br /></p><p data-lake-id=\"264a4c99abf8ddb64c01bd36ce3e1df7\">而作为接收端，收到的包可能是乱序的（网络层不保证传输顺序）或者重复的（例如上面重新发送的时候就会重复），就会按照接收方的序号重新组建传输包的内容，然后将其交付给应用层。</p><p data-lake-id=\"9e0759b2beeb3429812ef38586a60bdd\"><br /></p><p data-lake-id=\"059e672ae7b629ceeb0d2bdc6a290df9\">理解了 TCP 保证顺序和完整性的原理，就理解了 TCP 包的序号（Sequence Number<strong>）</strong>的重要性，而 TCP 握手时就是为了相互交换初始序列号（ISN，Inital Sequence Number<strong>），</strong>从而保证互相收到的包都能够保持正确的顺序。</p><h4 id=\"MZ1LO\" data-lake-id=\"5cce42754381d63a51a1dc3e7956a09d\">为什么不能用固定值</h4><p data-lake-id=\"18011ddb451b01aa6ba276337fff3b8e\">从 ISN 的使用场景很自然可以想到，只要我们统一用一个固定值（例如0）作为 ISN，不就可以直接避免握手的性能损耗了么？</p><p data-lake-id=\"a2586b51e95547afd1edb1ed910b7fc9\"><br /></p><h5 id=\"Uj6iu\" data-lake-id=\"9d4f80a69f9a2664d2d6f0159be0e6b2\">避免相邻的 TCP 连接互相干扰</h5><p data-lake-id=\"8bf52e2b1a4316490f35ca9d6b04db7f\">假设我们把 ISN 统一设置为 0，当我们的客户端和一个服务器建立起连接后传输了一部分数据包后，突然网络中断了，这个时候他们之间重新建立起连接，ISN 仍然为 0。</p><p data-lake-id=\"d29f47fe1cae82b12397edfea2e924d0\"><br /></p><p data-lake-id=\"15d28bdcec02026342161eb18b1cbf03\">这个时候服务器端可能同时收到序号为 N 的包，但却无从判断这个包属于哪一个 TCP 连接。</p><h3 id=\"RPdQe\" data-lake-id=\"7c95bc17c4e4f24397713d76f9f74d3f\">结论</h3><p data-lake-id=\"63d7a2e8999188e7ba6aa1b2379b27c2\">TCP 为了确保能够把数据按照正确顺序、完整的发送给目标，必须通过握手同步 ISN。而由于 TCP 是全双工的（即双向通信），握手至少需要三次才能完成。</p><p data-lake-id=\"a2eeb26c9d779f5c0c3e49318325be5e\"><br /></p><p data-lake-id=\"a49c46cc5dca4d8d5a0845bb2cec370f\">其实对于客户端（浏览器）来说，从发送 ACK 到接受到 SYN-ACK 的过程就已经完成了 TCP 的建连，此时就可以开始给服务器端传输数据了。</p><h2 data-lake-id=\"33517611d33f530fc641ce7720d99b7c\" id=\"CeCLZ\">能不能更快一点</h2><h3 data-lake-id=\"1efdc8ddd8a0577afe77d27d70682d30\" id=\"IPdfI\">TCP Fast Open</h3><p data-lake-id=\"d0eb46a0c03ff2ebf3ebeabf0b1956a2\">TCP 协议每次都要等待 SYN-ACK+SYN-ACK 后，服务端的 TCP 才会把接收到的数据包传输给应用层，这样当连接不稳定时总是需要重新建立连接。那么，为什么不直接在第一次传输 SYN 时直接发送数据呢？</p><p data-lake-id=\"6fe199de0acf7f46d8652bc017a7e331\"><br /></p><p data-lake-id=\"2ac239e483c6bd375d42c59ff1c429e0\">事实上在 TCP 上有一个拓展标准是支持这么做的，称之为 TCP Fast Open，在 TFO 第一次建立连接时和正常的三次握手是相同的，但客户端会额外拿到一个 TFO Cookie。而当之后再重新建立连接（例如说断网后重连，或者移动设备切换网络登）时，则直接由 SYN 携带 TFO Cookie 和数据发送。服务端收到校验 Cookie 有效直接把数据交付给应用层。</p><p data-lake-id=\"a736d223f5c5752a64eaf631f7d69717\"><br /></p><p data-lake-id=\"9c165643bdb5ed9dfa455d1176bdb58e\">然而 TFO 并没有在所有的客户端和服务端默认打开，目前绝大多数浏览器都是不支持的，而且由于 TCP 作为协议层由操作系统实现，无法由应用层的浏览器、客户端等自由控制。</p><h3 data-lake-id=\"513c89fb34f3685e7a5d4da8f26831d5\" id=\"Yk40Q\">QUIC/HTTP3</h3><p data-lake-id=\"3d4080ad9779ba79973b59c1547da18c\">QUIC 和 HTTP3 也解决了建连耗时的问题，不在本文展开，后续会在其他文章介绍。</p><h2 data-lake-id=\"9338d05edc1197048619caa01d340429\" id=\"M0DPI\">总结</h2><p data-lake-id=\"b5dfaef9a22789393626a871f788c0b4\">由于 HTTP 是基于 TCP 的，而 TCP 为了可靠性是面向连接的，需要通过三次握手建立连接。</p><p data-lake-id=\"2bb56bc5bcd4debb387b8c681334888e\"><br /></p><p data-lake-id=\"2e3efb623bbc2f4c42176684612714d3\">在 HTTP2 后我们有了多路复用可以让多个请求在一个连接中进行，但是连接的复用并不是单纯由域名决定的，同一个域名的连接可能不能复用一个连接，而不同的域名其实也可能复用一个连接。我们需要尽可能确定连接被正确的复用了。如果使用了 CDN 技术，我们可以尝试让页面和资源使用相同的 IP 从而复用链接。</p><p data-lake-id=\"7c8f71d4911813d5114e8807269f0c17\"><br /></p><p data-lake-id=\"d106bc70ca5c39b06d8855b1bac12469\">除此之外，我们可以使用 <code>preconnect</code> 来提前建连，同样的，也需要确定这个提前建立的连接被正确复用了。这对于即将发起的请求、即将到来的 <code>redirect</code> 等非常有效。<span style=\"background-color: transparent;\"><br /></span></p><h2 data-lake-id=\"4ce15ad4ba6bcd2a8e4b85ad54ecf2cd\" id=\"MzPEp\">拓展阅读</h2><ul data-lake-id=\"90b7a58b04b97e8452e8bbd6083abeb6\"><li data-lake-id=\"753323fd1967269bdc238849416b4f77\"><a href=\"https://crenshaw.dev/preconnect-resource-hint-crossorigin-attribute/\" target=\"_blank\">preconnect resource hint and the crossorigin attribute</a></li><li data-lake-id=\"f1e180aa7f197bed5e2efa18a0c1b283\"><a href=\"https://github.com/whatwg/fetch/issues/341\" target=\"_blank\">https://github.com/whatwg/fetch/issues/341</a></li></ul>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-03-26T16:56:17.000Z",
    "deleted_at": null,
    "created_at": "2020-03-26T03:09:32.000Z",
    "updated_at": "2020-04-01T15:28:17.000Z",
    "published_at": "2020-04-01T15:28:17.000Z",
    "first_published_at": "2020-03-26T03:09:57.000Z",
    "word_count": 3598,
    "cover": "https://cdn.nlark.com/yuque/0/2020/png/236311/1584964408688-4c021c34-501c-408c-a704-1f30656ccbb1.png",
    "description": "我们都知道 HTTP 是基于 TCP 的，而 TCP 是面向连接的。当我们向服务器请求一个页面时，首先需要建立 TCP 连接，才能开始真正开始传输内容。这个时间平时不容易被人察觉，因为开发场景下我们往往不需要重新建立连接。但是在有些场景（尤其是新用户场景、landing page 等）却会对页...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 3982499,
    "slug": "lightproxy",
    "title": "LightProxy 全能代理抓包工具",
    "book_id": 653495,
    "book": {
      "id": 653495,
      "type": "Column",
      "slug": "blog",
      "name": "blog",
      "user_id": 236311,
      "description": "",
      "creator_id": 236311,
      "public": 0,
      "items_count": 7,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-04-06T15:07:10.653Z",
      "updated_at": "2020-04-06T15:07:10.000Z",
      "created_at": "2019-12-24T14:26:42.000Z",
      "namespace": "xcodebuild/blog",
      "user": {
        "id": 236311,
        "type": "User",
        "login": "xcodebuild",
        "name": "xcodebuIld",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/236311/1546508350871-89a1db68-50d3-4776-9b7b-97ba81a8dfbe.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 0,
        "created_at": "2019-01-03T03:16:21.000Z",
        "updated_at": "2020-03-23T08:18:51.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 236311,
    "creator": {
      "id": 236311,
      "type": "User",
      "login": "xcodebuild",
      "name": "xcodebuIld",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/236311/1546508350871-89a1db68-50d3-4776-9b7b-97ba81a8dfbe.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 0,
      "created_at": "2019-01-03T03:16:21.000Z",
      "updated_at": "2020-03-23T08:18:51.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "> 原文地址：[https://github.com/alibaba/lightproxy/issues/19](https://github.com/alibaba/lightproxy/issues/19)\n\n<a name=\"u8H7E\"></a>\n## ![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1578205382432-2c9cc104-2fef-4ea8-b31e-951cbee73da4.png#align=left&display=inline&height=75&name=image.png&originHeight=150&originWidth=400&size=12307&status=done&style=none&width=200)\n\n`LightProxy` 是 `IFE` 团队开发的一款基于 `Electron` 和 `whistle` 的开源桌面代理软件，致力于让前端开发人员能够精确的掌握自己的开发环境，通过 `HTTP` 代理使用规则转发、修改每一个请求和响应的内容。\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1578205761175-e5d216c9-dd52-4d73-98de-d8638791f017.png#align=left&display=inline&height=352&name=image.png&originHeight=1005&originWidth=1500&size=224010&status=done&style=none&width=525)\n<a name=\"vz7QC\"></a>\n## \n<a name=\"NJPM5\"></a>\n## 为什么需要一个代理工具\n**因为代理工具能够让你随心所欲的掌控自己当前的开发环境。**\n\n**开发环境**是影响研发效能最大的一个因素之一，不可用的环境，无法完成的部署，不稳定的上游环境等等都**让一个非常简单的需求轻松消耗掉数天的时间**。\n\n当开发环境陷入一种不健康的状态时，开发者就更容易破罐子破摔。宁可忍受每改一行代码重新手动 `build` 几分钟再开发也不愿意花时间让 watch 可用，然后发现自己越来越忙乱。\n\n> ![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1578206007497-b7935205-d8a8-4fc3-866d-0bc62c5a2814.png#align=left&display=inline&height=120&name=image.png&originHeight=239&originWidth=211&size=134204&status=done&style=none&width=105.5)\n> \n> 希腊神话中有一个受到惩罚的人西西弗斯，他受罚的方式是：必须将一块巨石推上山顶，而每次到达山顶后巨石又滚回山下，如此永无止境地重复下去。在西方语境中，形容词“西西弗斯式的”（英语：sisyphean）形容“永无尽头而又徒劳无功的任务”。\n\n\n当你的接口和页面突然不能工作时，代理工具可以快速 `mock` 一个。当你想测试一下线上页面改动可能会带来的后果，代理工具可以让你不经过复杂的发布过程快速在本地看到想要的效果。\n\n<a name=\"CJSHA\"></a>\n## 什么是好的开发环境\n既然我们在讨论开发环境对于研发效率的影响，那我们先来看一看什么是好的前端开发环境。\n\n<a name=\"UmNIw\"></a>\n### 稳定\n好的开发环境首先应该是稳定可用的，不应该在开发测试的过程中频繁挂掉或者频繁发生改变。<br />依赖于后端日常接口进行调试的前端对这点应该深有体会，自己的问题还没解决，环境就时常带来新的问题。\n\n<a name=\"JgdYr\"></a>\n### 快速验证\n修改代码能够在尽可能短的时间内得到验证也是一个基本诉求，这也是为什么大部分前端构建都会关注 `Hot reload` 和更高级的 `HMR` 。\n\n有些场景下的修改一次简单的修改就要经过长时间的等待，例如依赖上游修改接口的返回内容，需要修改后端的页面结构然后重新部署，需要走一遍完整的发布流程来测试某个修改在真实的线上页面会产生的影响等等。\n\n这种改一行等几十分钟的开发方式对效率的拖累是极其恐怖的。\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1578275488620-13ad673e-fa57-4715-b1d7-fd6adf8dbc5f.png#align=left&display=inline&height=112&name=image.png&originHeight=224&originWidth=225&size=100533&status=done&style=none&width=112.5)\n\n<a name=\"r9l9z\"></a>\n### 和线上的一致性\n很多项目的线上环境极为复杂，为了解决日常开发中的问题，也会有一个线下的 `DEMO` 页面，最后开发完再搬到线上。\n\n这种方式相对来说较为稳定且能快速验证，但比较凸显的问题在于和线上并不一致。开发中会存在很多 `if-else` 的逻辑，例如最常见的：\n\n```javascript\nconst API_BASE = utils.isDaily ? 'http://localhost:7001:': 'https://xxxx/';\n```\n\n这种情况也往往导致 `Bug` 非常难以被定位，最后逼着开发者退化到在线上环境低效的进行 debug。\n\n<a name=\"3MNL0\"></a>\n### 确定性\n开发者对于当前的环境应该是有确切认知的，而不是一直不停的怀疑自己的配置到底有没有生效，命中的是不是又是缓存等等。\n\n有些情况下我们利用 `hosts` 切换工具来进行联调，但在切完 `hosts` 后却又不得不来回确认自己的切换是否生效，清楚 Chrome 的 DNS Cache，清楚 Socket 之类的。\n\n这种非确定性不但提高了开发者心智负担，而且也会导致 Bug 难以定位。\n\n<a name=\"6aYPs\"></a>\n## LightProxy 如何解决这些问题\n那么 `LightProxy` 要如何解决上面的这些问题呢\n\n`LightProxy` 通过基于 `whistle` 的代理能力，能够任意修改开发环境中的 `request` 和 `response` 。\n\n<a name=\"WxTiC\"></a>\n### 举个例子\n例如当我们需要在线上页面中加入一个 `DIV` ，如果没有代理我们需要依赖后端一套类似的预发环境，而有了 `LightProxy` 我们只需要使用：\n\n```javascript\nhttps://www.alibaba.com/ htmlPrepend://(<div>test</div>)\n```\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1578276397871-fcf46678-c2a3-48bb-83cd-02bf2bd7e201.png#align=left&display=inline&height=139&name=image.png&originHeight=278&originWidth=1099&size=93886&status=done&style=none&width=549.5)\n\n就可以在一个线上的页面中插入一个 `div` 。\n\n同样的，我们可以直接把页面中的一个 `JS` 转发到本地一个开发中的文件\n\n```javascript\nhttps://www.google.com/xx.js file:///User/xxx/xxx.js\n```\n\n当后端缺少 `CORS` 头时，我们可以直接给它先加上 `CORS` 头\n\n```javascript\nhttps://xxx.com/xx.json resCors:// # 给响应的请求增加 CORS header\n```\n\n也可以直接把某个文件变成一个内联的文字，只要用类似 `ES6` 字符串框起来\n\n```javascript\nhttps://xxx.com/xx.json `test text`\n```\n\n总体来说，`LightProxy` 能够让开发者完全掌控自己的开发环境，用极低的成本定制自己的开发环境，而不是总是在等待依赖方按照自己的需求提供相应的环境。\n\n甚至于，你可以自己用 `NodeJS` 书写针对某个规则的响应：[使用 NodeJS 编写规则](https://alibaba.github.io/lightproxy/write-rule-with-nodejs.html#%E4%BD%BF%E7%94%A8)\n\n<a name=\"DTTMJ\"></a>\n## 快速确认\n为了能够快速确认代理是否按预期工作，我们在经过 `LightProxy` 代理的网络请求的 Response Header 增加了一些相关的信息，用于协助开发人员快速确认当前请求命中了什么规则，以及这个请求是怎么来的（由谁响应，匹配什么规则，实际真正访问的来源）。\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1578276694637-f5b52b24-5e76-43c4-9425-3f2787c7e8c5.png#align=left&display=inline&height=85&name=image.png&originHeight=170&originWidth=1022&size=29831&status=done&style=none&width=511)\n\n<a name=\"SASae\"></a>\n## 没有银弹\n虽然说代理工具可以快速的解决各种开发环境上的坑，但也并不是银弹。\n\n这种方案更加适合在开发阶段快速绕过各种拦路虎，但最终在多人协作中仍然需要有健康的环境来保障项目的协作流程流畅，不能因为有了代理工具后就完全无视开发环境的问题。\n\n<a name=\"19TAe\"></a>\n## 开始 & 下载\n说了这么多，开始使用 `LightProxy` 控制你的开发环境吧：[https://github.com/alibaba/lightproxy](https://github.com/alibaba/lightproxy)\n\n<a name=\"B9W04\"></a>\n### 下载\n[**macOS 版**](https://gw.alipayobjects.com/os/LightProxy/LightProxy.dmg)<br />[**Windows 版**](https://gw.alipayobjects.com/os/LightProxy/LightProxy-Setup.exe)\n\n<a name=\"ddxHZ\"></a>\n## 问题反馈\n欢迎加入钉钉群讨论和反馈问题，或者直接在 issue 反馈问题：[https://github.com/alibaba/lightproxy/issues](https://github.com/alibaba/lightproxy/issues)\n\n> ps: Whistle 的作者也在群里，欢迎来撩\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1578277057662-2ff248c8-7f29-4ad3-88ff-8381e8a99095.png#align=left&display=inline&height=248&name=image.png&originHeight=1280&originWidth=970&size=338210&status=done&style=none&width=188)\n",
    "body_draft": "> 原文地址：[https://github.com/alibaba/lightproxy/issues/19](https://github.com/alibaba/lightproxy/issues/19)\n\n<a name=\"u8H7E\"></a>\n## ![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1578205382432-2c9cc104-2fef-4ea8-b31e-951cbee73da4.png#align=left&display=inline&height=75&name=image.png&originHeight=150&originWidth=400&size=12307&status=done&style=none&width=200)\n\n`LightProxy` 是 `IFE` 团队开发的一款基于 `Electron` 和 `whistle` 的开源桌面代理软件，致力于让前端开发人员能够精确的掌握自己的开发环境，通过 `HTTP` 代理使用规则转发、修改每一个请求和响应的内容。\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1578205761175-e5d216c9-dd52-4d73-98de-d8638791f017.png#align=left&display=inline&height=352&name=image.png&originHeight=1005&originWidth=1500&size=224010&status=done&style=none&width=525)\n<a name=\"vz7QC\"></a>\n## \n<a name=\"NJPM5\"></a>\n## 为什么需要一个代理工具\n**因为代理工具能够让你随心所欲的掌控自己当前的开发环境。**\n\n**开发环境**是影响研发效能最大的一个因素之一，不可用的环境，无法完成的部署，不稳定的上游环境等等都**让一个非常简单的需求轻松消耗掉数天的时间**。\n\n当开发环境陷入一种不健康的状态时，开发者就更容易破罐子破摔。宁可忍受每改一行代码重新手动 `build` 几分钟再开发也不愿意花时间让 watch 可用，然后发现自己越来越忙乱。\n\n> ![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1578206007497-b7935205-d8a8-4fc3-866d-0bc62c5a2814.png#align=left&display=inline&height=120&name=image.png&originHeight=239&originWidth=211&size=134204&status=done&style=none&width=105.5)\n> \n> 希腊神话中有一个受到惩罚的人西西弗斯，他受罚的方式是：必须将一块巨石推上山顶，而每次到达山顶后巨石又滚回山下，如此永无止境地重复下去。在西方语境中，形容词“西西弗斯式的”（英语：sisyphean）形容“永无尽头而又徒劳无功的任务”。\n\n\n当你的接口和页面突然不能工作时，代理工具可以快速 `mock` 一个。当你想测试一下线上页面改动可能会带来的后果，代理工具可以让你不经过复杂的发布过程快速在本地看到想要的效果。\n\n<a name=\"CJSHA\"></a>\n## 什么是好的开发环境\n既然我们在讨论开发环境对于研发效率的影响，那我们先来看一看什么是好的前端开发环境。\n\n<a name=\"UmNIw\"></a>\n### 稳定\n好的开发环境首先应该是稳定可用的，不应该在开发测试的过程中频繁挂掉或者频繁发生改变。<br />依赖于后端日常接口进行调试的前端对这点应该深有体会，自己的问题还没解决，环境就时常带来新的问题。\n\n<a name=\"JgdYr\"></a>\n### 快速验证\n修改代码能够在尽可能短的时间内得到验证也是一个基本诉求，这也是为什么大部分前端构建都会关注 `Hot reload` 和更高级的 `HMR` 。\n\n有些场景下的修改一次简单的修改就要经过长时间的等待，例如依赖上游修改接口的返回内容，需要修改后端的页面结构然后重新部署，需要走一遍完整的发布流程来测试某个修改在真实的线上页面会产生的影响等等。\n\n这种改一行等几十分钟的开发方式对效率的拖累是极其恐怖的。\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1578275488620-13ad673e-fa57-4715-b1d7-fd6adf8dbc5f.png#align=left&display=inline&height=112&name=image.png&originHeight=224&originWidth=225&size=100533&status=done&style=none&width=112.5)\n\n<a name=\"r9l9z\"></a>\n### 和线上的一致性\n很多项目的线上环境极为复杂，为了解决日常开发中的问题，也会有一个线下的 `DEMO` 页面，最后开发完再搬到线上。\n\n这种方式相对来说较为稳定且能快速验证，但比较凸显的问题在于和线上并不一致。开发中会存在很多 `if-else` 的逻辑，例如最常见的：\n\n```javascript\nconst API_BASE = utils.isDaily ? 'http://localhost:7001:': 'https://xxxx/';\n```\n\n这种情况也往往导致 `Bug` 非常难以被定位，最后逼着开发者退化到在线上环境低效的进行 debug。\n\n<a name=\"3MNL0\"></a>\n### 确定性\n开发者对于当前的环境应该是有确切认知的，而不是一直不停的怀疑自己的配置到底有没有生效，命中的是不是又是缓存等等。\n\n有些情况下我们利用 `hosts` 切换工具来进行联调，但在切完 `hosts` 后却又不得不来回确认自己的切换是否生效，清楚 Chrome 的 DNS Cache，清楚 Socket 之类的。\n\n这种非确定性不但提高了开发者心智负担，而且也会导致 Bug 难以定位。\n\n<a name=\"6aYPs\"></a>\n## LightProxy 如何解决这些问题\n那么 `LightProxy` 要如何解决上面的这些问题呢\n\n`LightProxy` 通过基于 `whistle` 的代理能力，能够任意修改开发环境中的 `request` 和 `response` 。\n\n<a name=\"WxTiC\"></a>\n### 举个例子\n例如当我们需要在线上页面中加入一个 `DIV` ，如果没有代理我们需要依赖后端一套类似的预发环境，而有了 `LightProxy` 我们只需要使用：\n\n```javascript\nhttps://www.alibaba.com/ htmlPrepend://(<div>test</div>)\n```\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1578276397871-fcf46678-c2a3-48bb-83cd-02bf2bd7e201.png#align=left&display=inline&height=139&name=image.png&originHeight=278&originWidth=1099&size=93886&status=done&style=none&width=549.5)\n\n就可以在一个线上的页面中插入一个 `div` 。\n\n同样的，我们可以直接把页面中的一个 `JS` 转发到本地一个开发中的文件\n\n```javascript\nhttps://www.google.com/xx.js file:///User/xxx/xxx.js\n```\n\n当后端缺少 `CORS` 头时，我们可以直接给它先加上 `CORS` 头\n\n```javascript\nhttps://xxx.com/xx.json resCors:// # 给响应的请求增加 CORS header\n```\n\n也可以直接把某个文件变成一个内联的文字，只要用类似 `ES6` 字符串框起来\n\n```javascript\nhttps://xxx.com/xx.json `test text`\n```\n\n总体来说，`LightProxy` 能够让开发者完全掌控自己的开发环境，用极低的成本定制自己的开发环境，而不是总是在等待依赖方按照自己的需求提供相应的环境。\n\n甚至于，你可以自己用 `NodeJS` 书写针对某个规则的响应：[使用 NodeJS 编写规则](https://alibaba.github.io/lightproxy/write-rule-with-nodejs.html#%E4%BD%BF%E7%94%A8)\n\n<a name=\"DTTMJ\"></a>\n## 快速确认\n为了能够快速确认代理是否按预期工作，我们在经过 `LightProxy` 代理的网络请求的 Response Header 增加了一些相关的信息，用于协助开发人员快速确认当前请求命中了什么规则，以及这个请求是怎么来的（由谁响应，匹配什么规则，实际真正访问的来源）。\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1578276694637-f5b52b24-5e76-43c4-9425-3f2787c7e8c5.png#align=left&display=inline&height=85&name=image.png&originHeight=170&originWidth=1022&size=29831&status=done&style=none&width=511)\n\n<a name=\"SASae\"></a>\n## 没有银弹\n虽然说代理工具可以快速的解决各种开发环境上的坑，但也并不是银弹。\n\n这种方案更加适合在开发阶段快速绕过各种拦路虎，但最终在多人协作中仍然需要有健康的环境来保障项目的协作流程流畅，不能因为有了代理工具后就完全无视开发环境的问题。\n\n<a name=\"19TAe\"></a>\n## 开始 & 下载\n说了这么多，开始使用 `LightProxy` 控制你的开发环境吧：[https://github.com/alibaba/lightproxy](https://github.com/alibaba/lightproxy)\n\n<a name=\"B9W04\"></a>\n### 下载\n[**macOS 版**](https://gw.alipayobjects.com/os/LightProxy/LightProxy.dmg)<br />[**Windows 版**](https://gw.alipayobjects.com/os/LightProxy/LightProxy-Setup.exe)\n\n<a name=\"ddxHZ\"></a>\n## 问题反馈\n欢迎加入钉钉群讨论和反馈问题，或者直接在 issue 反馈问题：[https://github.com/alibaba/lightproxy/issues](https://github.com/alibaba/lightproxy/issues)\n\n> ps: Whistle 的作者也在群里，欢迎来撩\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1578277057662-2ff248c8-7f29-4ad3-88ff-8381e8a99095.png#align=left&display=inline&height=248&name=image.png&originHeight=1280&originWidth=970&size=338210&status=done&style=none&width=188)\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine\" data-lake-element=\"root\" data-selection-236311=\"%7B%22path%22%3A%5B%5B0%2C0%2C1%2C0%2C47%5D%2C%5B0%2C0%2C1%2C0%2C47%5D%5D%2C%22uuid%22%3A%22236311%22%2C%22active%22%3Atrue%7D\"><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">原文地址：<a href=\"https://github.com/alibaba/lightproxy/issues/19\" target=\"_blank\">https://github.com/alibaba/lightproxy/issues/19</a></p></blockquote><h2 id=\"u8H7E\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1578205382432-2c9cc104-2fef-4ea8-b31e-951cbee73da4.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1578205382432-2c9cc104-2fef-4ea8-b31e-951cbee73da4.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 200px; height: 75px;\"></span></h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">LightProxy</code>&nbsp;是 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">IFE</code>&nbsp;团队开发的一款基于 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Electron</code>&nbsp;和 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">whistle</code>&nbsp;的开源桌面代理软件，致力于让前端开发人员能够精确的掌握自己的开发环境，通过 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">HTTP</code>&nbsp;代理使用规则转发、修改每一个请求和响应的内容。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1578205761175-e5d216c9-dd52-4d73-98de-d8638791f017.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1578205761175-e5d216c9-dd52-4d73-98de-d8638791f017.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 525px; height: 352px;\"></span></p><h2 id=\"vz7QC\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\"><br></h2><h2 id=\"NJPM5\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">为什么需要一个代理工具</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong>因为代理工具能够让你随心所欲的掌控自己当前的开发环境。</strong></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong>开发环境</strong>是影响研发效能最大的一个因素之一，不可用的环境，无法完成的部署，不稳定的上游环境等等都<strong>让一个非常简单的需求轻松消耗掉数天的时间</strong>。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当开发环境陷入一种不健康的状态时，开发者就更容易破罐子破摔。宁可忍受每改一行代码重新手动 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">build</code> 几分钟再开发也不愿意花时间让 watch 可用，然后发现自己越来越忙乱。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1578206007497-b7935205-d8a8-4fc3-866d-0bc62c5a2814.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1578206007497-b7935205-d8a8-4fc3-866d-0bc62c5a2814.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 105.5px; height: 120px;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #222222;\"><span>希腊神话中有一个受到惩罚的人西西弗斯，他受罚的方式是：必须将一块巨石推上山顶，而每次到达山顶后巨石又滚回山下，如此永无止境地重复下去。在西方语境中，形容词“西西弗斯式的”（英语：sisyphean）形容“永无尽头而又徒劳无功的任务”。</span></span></p></blockquote><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当你的接口和页面突然不能工作时，代理工具可以快速 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">mock</code>&nbsp;一个。当你想测试一下线上页面改动可能会带来的后果，代理工具可以让你不经过复杂的发布过程快速在本地看到想要的效果。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"CJSHA\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">什么是好的开发环境</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">既然我们在讨论开发环境对于研发效率的影响，那我们先来看一看什么是好的前端开发环境。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"UmNIw\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">稳定</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">好的开发环境首先应该是稳定可用的，不应该在开发测试的过程中频繁挂掉或者频繁发生改变。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">依赖于后端日常接口进行调试的前端对这点应该深有体会，自己的问题还没解决，环境就时常带来新的问题。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"JgdYr\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">快速验证</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">修改代码能够在尽可能短的时间内得到验证也是一个基本诉求，这也是为什么大部分前端构建都会关注 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Hot reload</code>&nbsp;和更高级的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">HMR</code>&nbsp;。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">有些场景下的修改一次简单的修改就要经过长时间的等待，例如依赖上游修改接口的返回内容，需要修改后端的页面结构然后重新部署，需要走一遍完整的发布流程来测试某个修改在真实的线上页面会产生的影响等等。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这种改一行等几十分钟的开发方式对效率的拖累是极其恐怖的。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1578275488620-13ad673e-fa57-4715-b1d7-fd6adf8dbc5f.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1578275488620-13ad673e-fa57-4715-b1d7-fd6adf8dbc5f.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 112.5px; height: 112px;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"r9l9z\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">和线上的一致性</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">很多项目的线上环境极为复杂，为了解决日常开发中的问题，也会有一个线下的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">DEMO</code>&nbsp;页面，最后开发完再搬到线上。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这种方式相对来说较为稳定且能快速验证，但比较凸显的问题在于和线上并不一致。开发中会存在很多 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">if-else</code>&nbsp;的逻辑，例如最常见的：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"pYW11\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(38, 38, 38); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">API_BASE</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">utils</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">isDaily</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">?</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'http://localhost:7001:'</span>: <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'https://xxxx/'</span>;</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这种情况也往往导致 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Bug</code>&nbsp;非常难以被定位，最后逼着开发者退化到在线上环境低效的进行 debug。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"3MNL0\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">确定性</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">开发者对于当前的环境应该是有确切认知的，而不是一直不停的怀疑自己的配置到底有没有生效，命中的是不是又是缓存等等。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">有些情况下我们利用&nbsp;<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">hosts</code>&nbsp;切换工具来进行联调，但在切完 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">hosts</code>&nbsp;后却又不得不来回确认自己的切换是否生效，清楚 Chrome 的 DNS Cache，清楚 Socket 之类的。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这种非确定性不但提高了开发者心智负担，而且也会导致 Bug 难以定位。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"6aYPs\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">LightProxy 如何解决这些问题</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">那么&nbsp;<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">LightProxy</code>&nbsp;要如何解决上面的这些问题呢</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">LightProxy</code>&nbsp;通过基于 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">whistle</code>&nbsp;的代理能力，能够任意修改开发环境中的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">request</code>&nbsp;和 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">response</code>&nbsp;。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"WxTiC\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">举个例子</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">例如当我们需要在线上页面中加入一个 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">DIV</code>&nbsp;，如果没有代理我们需要依赖后端一套类似的预发环境，而有了 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">LightProxy</code>&nbsp;我们只需要使用：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"HkZn9\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(38, 38, 38); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">https</span>:<span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">//www.alibaba.com/ htmlPrepend://(&lt;div&gt;test&lt;/div&gt;)</span></span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1578276397871-fcf46678-c2a3-48bb-83cd-02bf2bd7e201.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1578276397871-fcf46678-c2a3-48bb-83cd-02bf2bd7e201.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 549.5px; height: 139px;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">就可以在一个线上的页面中插入一个 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">div</code>&nbsp;。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">同样的，我们可以直接把页面中的一个 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">JS</code>&nbsp;转发到本地一个开发中的文件</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"bDifr\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(38, 38, 38); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">https</span>:<span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">//www.google.com/xx.js file:///User/xxx/xxx.js</span></span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当后端缺少 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">CORS</code>&nbsp;头时，我们可以直接给它先加上 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">CORS</code>&nbsp;头</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"Zw7hJ\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(38, 38, 38); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">https</span>:<span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">//xxx.com/xx.json resCors:// # 给响应的请求增加 CORS header</span></span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">也可以直接把某个文件变成一个内联的文字，只要用类似 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">ES6</code>&nbsp;字符串框起来</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"3rzMc\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(38, 38, 38); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">https</span>:<span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">//xxx.com/xx.json `test text`</span></span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">总体来说，<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"><span>LightProxy</span></code> 能够让开发者完全掌控自己的开发环境，用极低的成本定制自己的开发环境，而不是总是在等待依赖方按照自己的需求提供相应的环境。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">甚至于，你可以自己用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">NodeJS</code>&nbsp;书写针对某个规则的响应：<a href=\"https://alibaba.github.io/lightproxy/write-rule-with-nodejs.html#%E4%BD%BF%E7%94%A8\" target=\"_blank\">使用 NodeJS 编写规则</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"DTTMJ\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">快速确认</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">为了能够快速确认代理是否按预期工作，我们在经过 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"><span>LightProxy</span></code> 代理的网络请求的 Response Header 增加了一些相关的信息，用于协助开发人员快速确认当前请求命中了什么规则，以及这个请求是怎么来的（由谁响应，匹配什么规则，实际真正访问的来源）。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1578276694637-f5b52b24-5e76-43c4-9425-3f2787c7e8c5.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1578276694637-f5b52b24-5e76-43c4-9425-3f2787c7e8c5.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 511px; height: 85px;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"SASae\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">没有银弹</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">虽然说代理工具可以快速的解决各种开发环境上的坑，但也并不是银弹。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这种方案更加适合在开发阶段快速绕过各种拦路虎，但最终在多人协作中仍然需要有健康的环境来保障项目的协作流程流畅，不能因为有了代理工具后就完全无视开发环境的问题。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"19TAe\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">开始 &amp; 下载</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">说了这么多，开始使用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">LightProxy</code>&nbsp;控制你的开发环境吧：<a href=\"https://github.com/alibaba/lightproxy\" target=\"_blank\">https://github.com/alibaba/lightproxy</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"B9W04\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">下载</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"https://gw.alipayobjects.com/os/LightProxy/LightProxy.dmg\" target=\"_blank\"><span class=\"lake-fontsize-12\" data-mce-style=\"font-size: 12px\" style=\"font-size: 16px; line-height: 24px;\"><strong><u>macOS 版</u></strong></span></a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"https://gw.alipayobjects.com/os/LightProxy/LightProxy-Setup.exe\" target=\"_blank\"><span class=\"lake-fontsize-12\" data-mce-style=\"font-size: 12px\" style=\"font-size: 16px; line-height: 24px;\"><strong><u>Windows 版</u></strong></span></a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"ddxHZ\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">问题反馈</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">欢迎加入钉钉群讨论和反馈问题，或者直接在 issue 反馈问题：<a href=\"https://github.com/alibaba/lightproxy/issues\" target=\"_blank\">https://github.com/alibaba/lightproxy/issues</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><blockquote style=\"margin-top: 5px; margin-bottom: 5px; padding-left: 1em; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">ps: Whistle 的作者也在群里，欢迎来撩</p></blockquote><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1578277057662-2ff248c8-7f29-4ad3-88ff-8381e8a99095.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1578277057662-2ff248c8-7f29-4ad3-88ff-8381e8a99095.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 188px; height: 248px;\"></span></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><blockquote><p>原文地址：<a href=\"https://github.com/alibaba/lightproxy/issues/19\" target=\"_blank\">https://github.com/alibaba/lightproxy/issues/19</a></p></blockquote><h2 id=\"u8H7E\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1578205382432-2c9cc104-2fef-4ea8-b31e-951cbee73da4.png%22%2C%22originWidth%22%3A400%2C%22originHeight%22%3A150%2C%22name%22%3A%22image.png%22%2C%22size%22%3A12307%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A151.33333%2C%22y%22%3A52%2C%22width%22%3A222.66667%2C%22height%22%3A66.666664%2C%22text%22%3A%22shtproxy%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22shtproxy%22%2C%22width%22%3A200%2C%22height%22%3A75%7D\"></card></h2><p><br /></p><p><code>LightProxy</code> 是 <code>IFE</code> 团队开发的一款基于 <code>Electron</code> 和 <code>whistle</code> 的开源桌面代理软件，致力于让前端开发人员能够精确的掌握自己的开发环境，通过 <code>HTTP</code> 代理使用规则转发、修改每一个请求和响应的内容。</p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1578205761175-e5d216c9-dd52-4d73-98de-d8638791f017.png%22%2C%22originWidth%22%3A1500%2C%22originHeight%22%3A1005%2C%22name%22%3A%22image.png%22%2C%22size%22%3A224010%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A225%2C%22y%22%3A54.6875%2C%22width%22%3A32.8125%2C%22height%22%3A21.875%2C%22text%22%3A%22%E5%8C%95%22%7D%2C%7B%22x%22%3A1245.3125%2C%22y%22%3A56.25%2C%22width%22%3A93.75%2C%22height%22%3A17.1875%2C%22text%22%3A%22%E8%BE%93%E5%85%A5%2F%E7%BB%86%E5%85%A5%E8%A7%82%E5%88%99%22%7D%2C%7B%22x%22%3A304.6875%2C%22y%22%3A82.8125%2C%22width%22%3A384.375%2C%22height%22%3A21.875%2C%22text%22%3A%221%23LightProxyDetaultRules%2C%E5%85%A5%2F%E6%8F%92%E5%85%A5%E8%A7%84%E5%88%99%22%7D%2C%7B%22x%22%3A84.375%2C%22y%22%3A98.4375%2C%22width%22%3A64.0625%2C%22height%22%3A17.1875%2C%22text%22%3A%22Default%22%7D%2C%7B%22x%22%3A306.25%2C%22y%22%3A104.6875%2C%22width%22%3A360.9375%2C%22height%22%3A21.875%2C%22text%22%3A%222%E5%88%9D%E5%A7%8B%E8%A7%84%E5%88%99%E5%8F%AF%E4%BB%A5%E8%AE%A9%E4%B8%80%E4%BA%9B%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%9C%A8%E4%BB%A3%E7%90%86%E4%B8%8B%E5%B7%A5%E4%BD%9C%22%7D%2C%7B%22x%22%3A315.625%2C%22y%22%3A129.6875%2C%22width%22%3A162.5%2C%22height%22%3A18.75%2C%22text%22%3A%223%23%E5%9C%A8%E6%AF%94%E8%BE%93%E5%85%A5%E8%A7%84%E5%88%99%22%7D%2C%7B%22x%22%3A310.9375%2C%22y%22%3A151.5625%2C%22width%22%3A150%2C%22height%22%3A17.1875%2C%22text%22%3A%224%23command%2Bs%E4%BF%9D%E5%AD%98%22%7D%2C%7B%22x%22%3A315.625%2C%22y%22%3A173.4375%2C%22width%22%3A175%2C%22height%22%3A18.75%2C%22text%22%3A%225%23%E5%8F%8C%E5%87%BB%E5%90%AF%E7%94%A8%E6%88%96%E8%80%85%E7%A6%81%E7%94%A8%E8%A7%84%E5%88%99%22%7D%2C%7B%22x%22%3A1354.6875%2C%22y%22%3A217.1875%2C%22width%22%3A54.6875%2C%22height%22%3A15.625%2C%22text%22%3A%22%E7%BD%91%E7%BB%9C%E6%8A%93%E5%8C%85%22%7D%2C%7B%22x%22%3A318.75%2C%22y%22%3A218.75%2C%22width%22%3A110.9375%2C%22height%22%3A18.75%2C%22text%22%3A%22%23hosts%E7%BB%91%E5%AE%9A%22%7D%2C%7B%22x%22%3A309.375%2C%22y%22%3A240.625%2C%22width%22%3A245.3125%2C%22height%22%3A18.75%2C%22text%22%3A%22810.101.73189g.al1cdn.co%22%7D%2C%7B%22x%22%3A307.8125%2C%22y%22%3A259.375%2C%22width%22%3A268.75%2C%22height%22%3A26.5625%2C%22text%22%3A%22148205.215168alicnc%22%7D%2C%7B%22x%22%3A601.5625%2C%22y%22%3A264.0625%2C%22width%22%3A243.75%2C%22height%22%3A20.3125%2C%22text%22%3A%22cmb.alicdn.comu.alicdn.com%22%7D%2C%7B%22x%22%3A1356.25%2C%22y%22%3A300%2C%22width%22%3A53.125%2C%22height%22%3A15.625%2C%22text%22%3A%22%E6%89%8B%E6%9C%BA%E4%BB%A3%E7%90%86%22%7D%2C%7B%22x%22%3A312.5%2C%22y%22%3A306.25%2C%22width%22%3A154.6875%2C%22height%22%3A18.75%2C%22text%22%3A%221%E6%9D%A5%E7%9B%B4%E6%8E%A5%E8%BD%AC%E5%8F%91%E7%BD%91%E9%A1%B5%22%7D%2C%7B%22x%22%3A339.0625%2C%22y%22%3A329.6875%2C%22width%22%3A409.375%2C%22height%22%3A20.3125%2C%22text%22%3A%222H%3A%2F%2FWMAOQGLECOTS%3A%22%7D%2C%7B%22x%22%3A307.8125%2C%22y%22%3A375%2C%22width%22%3A153.125%2C%22height%22%3A15.625%2C%22text%22%3A%2214%E8%BD%AC%E5%8F%91%E5%88%B0%E6%96%87%E4%BB%B6%22%7D%2C%7B%22x%22%3A1365.625%2C%22y%22%3A382.8125%2C%22width%22%3A32.8125%2C%22height%22%3A17.1875%2C%22text%22%3A%22%E8%AE%BE%E7%BD%AE%22%7D%2C%7B%22x%22%3A312.5%2C%22y%22%3A396.875%2C%22width%22%3A454.6875%2C%22height%22%3A18.75%2C%22text%22%3A%2215%23https%3A%2F%2FwwgooqlecofleeXxxxx.html%22%7D%2C%7B%22x%22%3A315.625%2C%22y%22%3A464.0625%2C%22width%22%3A401.5625%2C%22height%22%3A18.75%2C%22text%22%3A%2218https%3A%2F%2F*XXXcomAAeALER%2FXXXXXXhTMI%22%7D%2C%7B%22x%22%3A304.6875%2C%22y%22%3A506.25%2C%22width%22%3A200%2C%22height%22%3A20.3125%2C%22text%22%3A%2220%23%E6%9B%B4%E5%A4%9A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%A1%88%E5%8F%82%E7%85%A7%E6%96%87%E6%A1%A3%22%7D%2C%7B%22x%22%3A368.75%2C%22y%22%3A551.5625%2C%22width%22%3A707.8125%2C%22height%22%3A20.3125%2C%22text%22%3A%222disable%3A%2F%2Finterceptattandekont.chh%22%7D%2C%7B%22x%22%3A342.1875%2C%22y%22%3A576.5625%2C%22width%22%3A635.9375%2C%22height%22%3A18.75%2C%22text%22%3A%22stttang.tbaba-ln.comuth-.mmom%22%7D%2C%7B%22x%22%3A315.625%2C%22y%22%3A598.4375%2C%22width%22%3A332.8125%2C%22height%22%3A18.75%2C%22text%22%3A%22static.dingtalk.commac%22%7D%2C%7B%22x%22%3A314.0625%2C%22y%22%3A639.0625%2C%22width%22%3A301.5625%2C%22height%22%3A20.3125%2C%22text%22%3A%2224%23APPLEMacStoreUpdateeTc%22%7D%2C%7B%22x%22%3A332.8125%2C%22y%22%3A662.5%2C%22width%22%3A509.375%2C%22height%22%3A20.3125%2C%22text%22%3A%2225d1sable%3A%2F%2FInterceptppLe.comcomc%22%7D%2C%7B%22x%22%3A287.5%2C%22y%22%3A684.375%2C%22width%22%3A28.125%2C%22height%22%3A21.875%2C%22text%22%3A%2226%22%7D%2C%7B%22x%22%3A1128.125%2C%22y%22%3A884.375%2C%22width%22%3A289.0625%2C%22height%22%3A20.3125%2C%22text%22%3A%22%E4%BB%A3%E7%90%86%E5%B7%B2%E7%BB%8F%E5%90%AF%E5%8A%A8%26%E8%AE%BE%E7%BD%AE%E4%B8%BA%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%90%86%3A12338%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E5%8C%95%20%E8%BE%93%E5%85%A5%2F%E7%BB%86%E5%85%A5%E8%A7%82%E5%88%99%201%23LightProxyDetaultRules%2C%E5%85%A5%2F%E6%8F%92%E5%85%A5%E8%A7%84%E5%88%99%20Default%202%E5%88%9D%E5%A7%8B%E8%A7%84%E5%88%99%E5%8F%AF%E4%BB%A5%E8%AE%A9%E4%B8%80%E4%BA%9B%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%9C%A8%E4%BB%A3%E7%90%86%E4%B8%8B%E5%B7%A5%E4%BD%9C%203%23%E5%9C%A8%E6%AF%94%E8%BE%93%E5%85%A5%E8%A7%84%E5%88%99%204%23command%2Bs%E4%BF%9D%E5%AD%98%205%23%E5%8F%8C%E5%87%BB%E5%90%AF%E7%94%A8%E6%88%96%E8%80%85%E7%A6%81%E7%94%A8%E8%A7%84%E5%88%99%20%E7%BD%91%E7%BB%9C%E6%8A%93%E5%8C%85%20%23hosts%E7%BB%91%E5%AE%9A%20810.101.73189g.al1cdn.co%20148205.215168alicnc%20cmb.alicdn.comu.alicdn.com%20%E6%89%8B%E6%9C%BA%E4%BB%A3%E7%90%86%201%E6%9D%A5%E7%9B%B4%E6%8E%A5%E8%BD%AC%E5%8F%91%E7%BD%91%E9%A1%B5%202H%3A%2F%2FWMAOQGLECOTS%3A%2014%E8%BD%AC%E5%8F%91%E5%88%B0%E6%96%87%E4%BB%B6%20%E8%AE%BE%E7%BD%AE%2015%23https%3A%2F%2FwwgooqlecofleeXxxxx.html%2018https%3A%2F%2F*XXXcomAAeALER%2FXXXXXXhTMI%2020%23%E6%9B%B4%E5%A4%9A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%A1%88%E5%8F%82%E7%85%A7%E6%96%87%E6%A1%A3%202disable%3A%2F%2Finterceptattandekont.chh%20stttang.tbaba-ln.comuth-.mmom%20static.dingtalk.commac%2024%23APPLEMacStoreUpdateeTc%2025d1sable%3A%2F%2FInterceptppLe.comcomc%2026%20%E4%BB%A3%E7%90%86%E5%B7%B2%E7%BB%8F%E5%90%AF%E5%8A%A8%26%E8%AE%BE%E7%BD%AE%E4%B8%BA%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%90%86%3A12338%22%2C%22width%22%3A525%2C%22height%22%3A352%7D\"></card></p><h2 id=\"vz7QC\"><br /></h2><h2 id=\"NJPM5\">为什么需要一个代理工具</h2><p><strong>因为代理工具能够让你随心所欲的掌控自己当前的开发环境。</strong></p><p><br /></p><p><strong>开发环境</strong>是影响研发效能最大的一个因素之一，不可用的环境，无法完成的部署，不稳定的上游环境等等都<strong>让一个非常简单的需求轻松消耗掉数天的时间</strong>。</p><p><br /></p><p>当开发环境陷入一种不健康的状态时，开发者就更容易破罐子破摔。宁可忍受每改一行代码重新手动 <code>build</code> 几分钟再开发也不愿意花时间让 watch 可用，然后发现自己越来越忙乱。</p><p><br /></p><blockquote><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1578206007497-b7935205-d8a8-4fc3-866d-0bc62c5a2814.png%22%2C%22originWidth%22%3A211%2C%22originHeight%22%3A239%2C%22name%22%3A%22image.png%22%2C%22size%22%3A134204%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A105.5%2C%22height%22%3A120%7D\"></card></p><p><br /></p><p><span style=\"color: #222222;\"><span>希腊神话中有一个受到惩罚的人西西弗斯，他受罚的方式是：必须将一块巨石推上山顶，而每次到达山顶后巨石又滚回山下，如此永无止境地重复下去。在西方语境中，形容词“西西弗斯式的”（英语：sisyphean）形容“永无尽头而又徒劳无功的任务”。</span></span></p></blockquote><p><br /></p><p>当你的接口和页面突然不能工作时，代理工具可以快速 <code>mock</code> 一个。当你想测试一下线上页面改动可能会带来的后果，代理工具可以让你不经过复杂的发布过程快速在本地看到想要的效果。</p><p><br /></p><h2 id=\"CJSHA\">什么是好的开发环境</h2><p>既然我们在讨论开发环境对于研发效率的影响，那我们先来看一看什么是好的前端开发环境。</p><p><br /></p><h3 id=\"UmNIw\">稳定</h3><p>好的开发环境首先应该是稳定可用的，不应该在开发测试的过程中频繁挂掉或者频繁发生改变。</p><p>依赖于后端日常接口进行调试的前端对这点应该深有体会，自己的问题还没解决，环境就时常带来新的问题。</p><p><br /></p><h3 id=\"JgdYr\">快速验证</h3><p>修改代码能够在尽可能短的时间内得到验证也是一个基本诉求，这也是为什么大部分前端构建都会关注 <code>Hot reload</code> 和更高级的 <code>HMR</code> 。</p><p><br /></p><p>有些场景下的修改一次简单的修改就要经过长时间的等待，例如依赖上游修改接口的返回内容，需要修改后端的页面结构然后重新部署，需要走一遍完整的发布流程来测试某个修改在真实的线上页面会产生的影响等等。</p><p><br /></p><p>这种改一行等几十分钟的开发方式对效率的拖累是极其恐怖的。</p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1578275488620-13ad673e-fa57-4715-b1d7-fd6adf8dbc5f.png%22%2C%22originWidth%22%3A225%2C%22originHeight%22%3A224%2C%22name%22%3A%22image.png%22%2C%22size%22%3A100533%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1.3333334%2C%22y%22%3A0.6666667%2C%22width%22%3A121.3333306%2C%22height%22%3A19.3333333%2C%22text%22%3A%22%E4%B8%80%E6%9D%AF%E8%8C%B6%2C%E4%B8%80%E5%8C%85%E7%83%9F%2C%22%7D%2C%7B%22x%22%3A89.333336%2C%22y%22%3A22%2C%22width%22%3A122.666664%2C%22height%22%3A18.666668%2C%22text%22%3A%22%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%86%99%E4%B8%80%E5%A4%A9.%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E4%B8%80%E6%9D%AF%E8%8C%B6%2C%E4%B8%80%E5%8C%85%E7%83%9F%2C%20%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%86%99%E4%B8%80%E5%A4%A9.%22%2C%22width%22%3A112.5%2C%22height%22%3A112%7D\"></card></p><p><br /></p><h3 id=\"r9l9z\">和线上的一致性</h3><p>很多项目的线上环境极为复杂，为了解决日常开发中的问题，也会有一个线下的 <code>DEMO</code> 页面，最后开发完再搬到线上。</p><p><br /></p><p>这种方式相对来说较为稳定且能快速验证，但比较凸显的问题在于和线上并不一致。开发中会存在很多 <code>if-else</code> 的逻辑，例如最常见的：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20API_BASE%20%3D%20utils.isDaily%20%3F%20'http%3A%2F%2Flocalhost%3A7001%3A'%3A%20'https%3A%2F%2Fxxxx%2F'%3B%22%2C%22id%22%3A%22pYW11%22%7D\"></card><p><br /></p><p>这种情况也往往导致 <code>Bug</code> 非常难以被定位，最后逼着开发者退化到在线上环境低效的进行 debug。</p><p><br /></p><h3 id=\"3MNL0\">确定性</h3><p>开发者对于当前的环境应该是有确切认知的，而不是一直不停的怀疑自己的配置到底有没有生效，命中的是不是又是缓存等等。</p><p><br /></p><p>有些情况下我们利用 <code>hosts</code> 切换工具来进行联调，但在切完 <code>hosts</code> 后却又不得不来回确认自己的切换是否生效，清楚 Chrome 的 DNS Cache，清楚 Socket 之类的。</p><p><br /></p><p>这种非确定性不但提高了开发者心智负担，而且也会导致 Bug 难以定位。</p><p><br /></p><h2 id=\"6aYPs\">LightProxy 如何解决这些问题</h2><p>那么 <code>LightProxy</code> 要如何解决上面的这些问题呢</p><p><br /></p><p><code>LightProxy</code> 通过基于 <code>whistle</code> 的代理能力，能够任意修改开发环境中的 <code>request</code> 和 <code>response</code> 。</p><p><br /></p><h3 id=\"WxTiC\">举个例子</h3><p>例如当我们需要在线上页面中加入一个 <code>DIV</code> ，如果没有代理我们需要依赖后端一套类似的预发环境，而有了 <code>LightProxy</code> 我们只需要使用：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22https%3A%2F%2Fwww.alibaba.com%2F%20htmlPrepend%3A%2F%2F(%3Cdiv%3Etest%3C%2Fdiv%3E)%22%2C%22id%22%3A%22HkZn9%22%7D\"></card><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1578276397871-fcf46678-c2a3-48bb-83cd-02bf2bd7e201.png%22%2C%22originWidth%22%3A1099%2C%22originHeight%22%3A278%2C%22name%22%3A%22image.png%22%2C%22size%22%3A93886%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A22.895834%2C%22y%22%3A11.447917%2C%22width%22%3A138.51978599999998%2C%22height%22%3A16.027083%2C%22text%22%3A%22cdivtest%2Fdiv%E4%B8%80%24%22%7D%2C%7B%22x%22%3A288.4875%2C%22y%22%3A26.330208%2C%22width%22%3A477.37809999999996%2C%22height%22%3A17.171875%2C%22text%22%3A%22%2F%2FINGOLCRK4%22%7D%2C%7B%22x%22%3A44.646873%2C%22y%22%3A43.502083%2C%22width%22%3A485.39162699999997%2C%22height%22%3A16.027084000000002%2C%22text%22%3A%22metacontent%5C%22text%2Fhtml%3Bcharseteutf-8%5C%22httpequivontnt-Type%22%7D%2C%7B%22x%22%3A18.316666%2C%22y%22%3A58.384377%2C%22width%22%3A373.202074%2C%22height%22%3A16.027083000000005%2C%22text%22%3A%22titleentitleo%22%7D%2C%7B%22x%22%3A38.922916%2C%22y%22%3A75.55625%2C%22width%22%3A493.40518399999996%2C%22height%22%3A14.882289999999998%2C%22text%22%3A%22netaname%5C%22kewwordscontent%5C%22MnUfacturersSup%22%7D%2C%7B%22x%22%3A540.3417%2C%22y%22%3A75.55625%2C%22width%22%3A512.8667%2C%22height%22%3A16.027085999999997%2C%22text%22%3A%22smotersuc%22%7D%2C%7B%22x%22%3A65.25313%2C%22y%22%3A92.72813%2C%22width%22%3A469.36457%2C%22height%22%3A13.737490000000008%2C%22text%22%3A%22metaname%5C%22descriptioncontent%5C%22FindquattyMuoctures%2CSue%22%7D%2C%7B%22x%22%3A554.07916%2C%22y%22%3A92.72813%2C%22width%22%3A523.16974%2C%22height%22%3A14.882280000000009%2C%22text%22%3A%22iers%2CEXpoRtRSmte%2C%22%7D%2C%7B%22x%22%3A22.895834%2C%22y%22%3A106.46562%2C%22width%22%3A127.071876%2C%22height%22%3A13.737504999999999%2C%22text%22%3A%22alibaba.com%3E%22%7D%2C%7B%22x%22%3A35.48854%2C%22y%22%3A123.6375%2C%22width%22%3A368.62291%2C%22height%22%3A14.882289999999998%2C%22text%22%3A%22metahttp-equiv%5C%22x-dnsprefetch-controtucontente%5C%22on%22%7D%2C%7B%22x%22%3A36.63333%2C%22y%22%3A139.66458%2C%22width%22%3A317.1073%2C%22height%22%3A13.737500000000011%2C%22text%22%3A%22cuinkrel-%5C%22dns-prefetch%5C%22href-%5C%22u%2Fi.alicdn.com%5C%22%22%7D%2C%7B%22x%22%3A32.054165%2C%22y%22%3A154.54688%2C%22width%22%3A331.989595%2C%22height%22%3A16.027080000000012%2C%22text%22%3A%22%3Clinkrel-%5C%22dns-prefetch%5C%22href-%5C%22%2Fbealicdn.com%22%7D%2C%7B%22x%22%3A27.475%2C%22y%22%3A170.57396%2C%22width%22%3A325.12082999999996%2C%22height%22%3A14.882290000000012%2C%22text%22%3A%22clinkrel-%5C%22dns-prefetch%5C%22href-%2F%2Fis.olicdn.com%5C%22%22%7D%2C%7B%22x%22%3A22.895834%2C%22y%22%3A186.60104%2C%22width%22%3A356.03019600000005%2C%22height%22%3A14.882299999999987%2C%22text%22%3A%22linkrel-%5C%22dns-prefetch%5C%22href-y%2Fu.alicdn.com%5C%22%22%7D%2C%7B%22x%22%3A20.60625%2C%22y%22%3A203.77292%2C%22width%22%3A326.26565%2C%22height%22%3A12.592710000000011%2C%22text%22%3A%22%3Clinkrel-%5C%22dns-prefetch%5C%22href-%5C%22%2F%2Fg.alicdn.com'%22%7D%2C%7B%22x%22%3A22.895834%2C%22y%22%3A219.8%2C%22width%22%3A322.831246%2C%22height%22%3A11.447909999999979%2C%22text%22%3A%22%3Ciinkrel-%5C%22dns-prefetch%5C%22href-%5C%22%2F%2Fassetslicdn.co%22%7D%2C%7B%22x%22%3A24.040625%2C%22y%22%3A235.82709%2C%22width%22%3A389.22915500000005%2C%22height%22%3A12.592690000000005%2C%22text%22%3A%22Linkrel-%5C%22dns-prefetch%5C%22href%5C%22%2Fimg.aticdn.com%22%7D%2C%7B%22x%22%3A27.475%2C%22y%22%3A251.85417%2C%22width%22%3A394.95313%2C%22height%22%3A13.737500000000011%2C%22text%22%3A%22linkrei%5C%22dns-prefetch%5C%22href-%5C%22%2Fcmap.atibaba.com%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22cdivtest%2Fdiv%E4%B8%80%24%20%2F%2FINGOLCRK4%20metacontent%5C%22text%2Fhtml%3Bcharseteutf-8%5C%22httpequivontnt-Type%20titleentitleo%20netaname%5C%22kewwordscontent%5C%22MnUfacturersSup%20smotersuc%20metaname%5C%22descriptioncontent%5C%22FindquattyMuoctures%2CSue%20iers%2CEXpoRtRSmte%2C%20alibaba.com%3E%20metahttp-equiv%5C%22x-dnsprefetch-controtucontente%5C%22on%20cuinkrel-%5C%22dns-prefetch%5C%22href-%5C%22u%2Fi.alicdn.com%5C%22%20%3Clinkrel-%5C%22dns-prefetch%5C%22href-%5C%22%2Fbealicdn.com%20clinkrel-%5C%22dns-prefetch%5C%22href-%2F%2Fis.olicdn.com%5C%22%20linkrel-%5C%22dns-prefetch%5C%22href-y%2Fu.alicdn.com%5C%22%20%3Clinkrel-%5C%22dns-prefetch%5C%22href-%5C%22%2F%2Fg.alicdn.com'%20%3Ciinkrel-%5C%22dns-prefetch%5C%22href-%5C%22%2F%2Fassetslicdn.co%20Linkrel-%5C%22dns-prefetch%5C%22href%5C%22%2Fimg.aticdn.com%20linkrei%5C%22dns-prefetch%5C%22href-%5C%22%2Fcmap.atibaba.com%22%2C%22width%22%3A549.5%2C%22height%22%3A139%7D\"></card></p><p><br /></p><p>就可以在一个线上的页面中插入一个 <code>div</code> 。</p><p><br /></p><p>同样的，我们可以直接把页面中的一个 <code>JS</code> 转发到本地一个开发中的文件</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22https%3A%2F%2Fwww.google.com%2Fxx.js%20file%3A%2F%2F%2FUser%2Fxxx%2Fxxx.js%22%2C%22id%22%3A%22bDifr%22%7D\"></card><p><br /></p><p>当后端缺少 <code>CORS</code> 头时，我们可以直接给它先加上 <code>CORS</code> 头</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22https%3A%2F%2Fxxx.com%2Fxx.json%20resCors%3A%2F%2F%20%23%20%E7%BB%99%E5%93%8D%E5%BA%94%E7%9A%84%E8%AF%B7%E6%B1%82%E5%A2%9E%E5%8A%A0%20CORS%20header%22%2C%22id%22%3A%22Zw7hJ%22%7D\"></card><p><br /></p><p>也可以直接把某个文件变成一个内联的文字，只要用类似 <code>ES6</code> 字符串框起来</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22https%3A%2F%2Fxxx.com%2Fxx.json%20%60test%20text%60%22%2C%22id%22%3A%223rzMc%22%7D\"></card><p><br /></p><p>总体来说，<code><span>LightProxy</span></code> 能够让开发者完全掌控自己的开发环境，用极低的成本定制自己的开发环境，而不是总是在等待依赖方按照自己的需求提供相应的环境。</p><p><br /></p><p>甚至于，你可以自己用 <code>NodeJS</code> 书写针对某个规则的响应：<a href=\"https://alibaba.github.io/lightproxy/write-rule-with-nodejs.html#%E4%BD%BF%E7%94%A8\" target=\"_blank\">使用 NodeJS 编写规则</a></p><p><br /></p><h2 id=\"DTTMJ\">快速确认</h2><p>为了能够快速确认代理是否按预期工作，我们在经过 <code><span>LightProxy</span></code> 代理的网络请求的 Response Header 增加了一些相关的信息，用于协助开发人员快速确认当前请求命中了什么规则，以及这个请求是怎么来的（由谁响应，匹配什么规则，实际真正访问的来源）。</p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1578276694637-f5b52b24-5e76-43c4-9425-3f2787c7e8c5.png%22%2C%22originWidth%22%3A1022%2C%22originHeight%22%3A170%2C%22name%22%3A%22image.png%22%2C%22size%22%3A29831%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A229.95%2C%22y%22%3A2.1291666%2C%22width%22%3A540.80836%2C%22height%22%3A26.614583399999997%2C%22text%22%3A%22lp%3ASeehttps%3A%2F%2Fgithub.com%2Fatibaba%2Flightrox%22%7D%2C%7B%22x%22%3A29.808334%2C%22y%22%3A3.19375%2C%22width%22%3A178.850006%2C%22height%22%3A24.485416999999998%2C%22text%22%3A%22lightproxy-help_%22%7D%2C%7B%22x%22%3A59.61667%2C%22y%22%3A45.777084%2C%22width%22%3A409.86459%2C%22height%22%3A23.420829999999995%2C%22text%22%3A%22lightproxy-host-ip_180101.12%22%7D%2C%7B%22x%22%3A86.23125%2C%22y%22%3A87.29584%2C%22width%22%3A472.675%2C%22height%22%3A23.420829999999995%2C%22text%22%3A%22ghtproxy-real-urlhttp%2Fwww.aidu.com%22%7D%2C%7B%22x%22%3A25.55%2C%22y%22%3A130.94376%2C%22width%22%3A301.27709999999996%2C%22height%22%3A22.356240000000014%2C%22text%22%3A%22lightproxy-rulesone%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22lp%3ASeehttps%3A%2F%2Fgithub.com%2Fatibaba%2Flightrox%20lightproxy-help_%20lightproxy-host-ip_180101.12%20ghtproxy-real-urlhttp%2Fwww.aidu.com%20lightproxy-rulesone%22%2C%22width%22%3A511%2C%22height%22%3A85%7D\"></card></p><p><br /></p><h2 id=\"SASae\">没有银弹</h2><p>虽然说代理工具可以快速的解决各种开发环境上的坑，但也并不是银弹。</p><p><br /></p><p>这种方案更加适合在开发阶段快速绕过各种拦路虎，但最终在多人协作中仍然需要有健康的环境来保障项目的协作流程流畅，不能因为有了代理工具后就完全无视开发环境的问题。</p><p><br /></p><h2 id=\"19TAe\">开始 &amp; 下载</h2><p>说了这么多，开始使用 <code>LightProxy</code> 控制你的开发环境吧：<a href=\"https://github.com/alibaba/lightproxy\" target=\"_blank\">https://github.com/alibaba/lightproxy</a></p><p><br /></p><h3 id=\"B9W04\">下载</h3><p><a href=\"https://gw.alipayobjects.com/os/LightProxy/LightProxy.dmg\" target=\"_blank\"><span class=\"lake-fontsize-12\"><strong><u>macOS 版</u></strong></span></a></p><p><a href=\"https://gw.alipayobjects.com/os/LightProxy/LightProxy-Setup.exe\" target=\"_blank\"><span class=\"lake-fontsize-12\"><strong><u>Windows 版</u></strong></span></a></p><p><br /></p><h2 id=\"ddxHZ\">问题反馈</h2><p>欢迎加入钉钉群讨论和反馈问题，或者直接在 issue 反馈问题：<a href=\"https://github.com/alibaba/lightproxy/issues\" target=\"_blank\">https://github.com/alibaba/lightproxy/issues</a></p><p><br /></p><blockquote><p>ps: Whistle 的作者也在群里，欢迎来撩</p></blockquote><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1578277057662-2ff248c8-7f29-4ad3-88ff-8381e8a99095.png%22%2C%22originWidth%22%3A970%2C%22originHeight%22%3A1280%2C%22name%22%3A%22image.png%22%2C%22size%22%3A338210%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A118.666664%2C%22y%22%3A129.33333%2C%22width%22%3A416.000036%2C%22height%22%3A50.66667000000001%2C%22text%22%3A%22LightProxy%E5%BC%80%E6%BA%90%E7%BE%A4%22%7D%2C%7B%22x%22%3A766.6667%2C%22y%22%3A129.33333%2C%22width%22%3A60%2C%22height%22%3A60%2C%22text%22%3A%22L%22%7D%2C%7B%22x%22%3A117.333336%2C%22y%22%3A190.66667%2C%22width%22%3A58.666664%2C%22height%22%3A32%2C%22text%22%3A%223%E4%BA%BA%22%7D%2C%7B%22x%22%3A264%2C%22y%22%3A1144%2C%22width%22%3A470.6667%2C%22height%22%3A33.33339999999998%2C%22text%22%3A%22%E6%89%AB%E4%B8%80%E6%89%AB%E7%BE%A4%E4%BA%8C%E7%BB%B4%E7%A0%81%2C%E7%AB%8B%E5%88%BB%E5%8A%A0%E5%85%A5%E8%AF%A5%E7%BE%A4.%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22LightProxy%E5%BC%80%E6%BA%90%E7%BE%A4%20L%203%E4%BA%BA%20%E6%89%AB%E4%B8%80%E6%89%AB%E7%BE%A4%E4%BA%8C%E7%BB%B4%E7%A0%81%2C%E7%AB%8B%E5%88%BB%E5%8A%A0%E5%85%A5%E8%AF%A5%E7%BE%A4.%22%2C%22width%22%3A188%2C%22height%22%3A248%7D\"></card></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><blockquote><p>原文地址：<a href=\"https://github.com/alibaba/lightproxy/issues/19\" target=\"_blank\">https://github.com/alibaba/lightproxy/issues/19</a></p></blockquote><h2 id=\"u8H7E\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1578205382432-2c9cc104-2fef-4ea8-b31e-951cbee73da4.png%22%2C%22originWidth%22%3A400%2C%22originHeight%22%3A150%2C%22name%22%3A%22image.png%22%2C%22size%22%3A12307%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A151.33333%2C%22y%22%3A52%2C%22width%22%3A222.66667%2C%22height%22%3A66.666664%2C%22text%22%3A%22shtproxy%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22shtproxy%22%2C%22width%22%3A200%2C%22height%22%3A75%7D\"></card></h2><p><br /></p><p><code>LightProxy</code> 是 <code>IFE</code> 团队开发的一款基于 <code>Electron</code> 和 <code>whistle</code> 的开源桌面代理软件，致力于让前端开发人员能够精确的掌握自己的开发环境，通过 <code>HTTP</code> 代理使用规则转发、修改每一个请求和响应的内容。</p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1578205761175-e5d216c9-dd52-4d73-98de-d8638791f017.png%22%2C%22originWidth%22%3A1500%2C%22originHeight%22%3A1005%2C%22name%22%3A%22image.png%22%2C%22size%22%3A224010%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A225%2C%22y%22%3A54.6875%2C%22width%22%3A32.8125%2C%22height%22%3A21.875%2C%22text%22%3A%22%E5%8C%95%22%7D%2C%7B%22x%22%3A1245.3125%2C%22y%22%3A56.25%2C%22width%22%3A93.75%2C%22height%22%3A17.1875%2C%22text%22%3A%22%E8%BE%93%E5%85%A5%2F%E7%BB%86%E5%85%A5%E8%A7%82%E5%88%99%22%7D%2C%7B%22x%22%3A304.6875%2C%22y%22%3A82.8125%2C%22width%22%3A384.375%2C%22height%22%3A21.875%2C%22text%22%3A%221%23LightProxyDetaultRules%2C%E5%85%A5%2F%E6%8F%92%E5%85%A5%E8%A7%84%E5%88%99%22%7D%2C%7B%22x%22%3A84.375%2C%22y%22%3A98.4375%2C%22width%22%3A64.0625%2C%22height%22%3A17.1875%2C%22text%22%3A%22Default%22%7D%2C%7B%22x%22%3A306.25%2C%22y%22%3A104.6875%2C%22width%22%3A360.9375%2C%22height%22%3A21.875%2C%22text%22%3A%222%E5%88%9D%E5%A7%8B%E8%A7%84%E5%88%99%E5%8F%AF%E4%BB%A5%E8%AE%A9%E4%B8%80%E4%BA%9B%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%9C%A8%E4%BB%A3%E7%90%86%E4%B8%8B%E5%B7%A5%E4%BD%9C%22%7D%2C%7B%22x%22%3A315.625%2C%22y%22%3A129.6875%2C%22width%22%3A162.5%2C%22height%22%3A18.75%2C%22text%22%3A%223%23%E5%9C%A8%E6%AF%94%E8%BE%93%E5%85%A5%E8%A7%84%E5%88%99%22%7D%2C%7B%22x%22%3A310.9375%2C%22y%22%3A151.5625%2C%22width%22%3A150%2C%22height%22%3A17.1875%2C%22text%22%3A%224%23command%2Bs%E4%BF%9D%E5%AD%98%22%7D%2C%7B%22x%22%3A315.625%2C%22y%22%3A173.4375%2C%22width%22%3A175%2C%22height%22%3A18.75%2C%22text%22%3A%225%23%E5%8F%8C%E5%87%BB%E5%90%AF%E7%94%A8%E6%88%96%E8%80%85%E7%A6%81%E7%94%A8%E8%A7%84%E5%88%99%22%7D%2C%7B%22x%22%3A1354.6875%2C%22y%22%3A217.1875%2C%22width%22%3A54.6875%2C%22height%22%3A15.625%2C%22text%22%3A%22%E7%BD%91%E7%BB%9C%E6%8A%93%E5%8C%85%22%7D%2C%7B%22x%22%3A318.75%2C%22y%22%3A218.75%2C%22width%22%3A110.9375%2C%22height%22%3A18.75%2C%22text%22%3A%22%23hosts%E7%BB%91%E5%AE%9A%22%7D%2C%7B%22x%22%3A309.375%2C%22y%22%3A240.625%2C%22width%22%3A245.3125%2C%22height%22%3A18.75%2C%22text%22%3A%22810.101.73189g.al1cdn.co%22%7D%2C%7B%22x%22%3A307.8125%2C%22y%22%3A259.375%2C%22width%22%3A268.75%2C%22height%22%3A26.5625%2C%22text%22%3A%22148205.215168alicnc%22%7D%2C%7B%22x%22%3A601.5625%2C%22y%22%3A264.0625%2C%22width%22%3A243.75%2C%22height%22%3A20.3125%2C%22text%22%3A%22cmb.alicdn.comu.alicdn.com%22%7D%2C%7B%22x%22%3A1356.25%2C%22y%22%3A300%2C%22width%22%3A53.125%2C%22height%22%3A15.625%2C%22text%22%3A%22%E6%89%8B%E6%9C%BA%E4%BB%A3%E7%90%86%22%7D%2C%7B%22x%22%3A312.5%2C%22y%22%3A306.25%2C%22width%22%3A154.6875%2C%22height%22%3A18.75%2C%22text%22%3A%221%E6%9D%A5%E7%9B%B4%E6%8E%A5%E8%BD%AC%E5%8F%91%E7%BD%91%E9%A1%B5%22%7D%2C%7B%22x%22%3A339.0625%2C%22y%22%3A329.6875%2C%22width%22%3A409.375%2C%22height%22%3A20.3125%2C%22text%22%3A%222H%3A%2F%2FWMAOQGLECOTS%3A%22%7D%2C%7B%22x%22%3A307.8125%2C%22y%22%3A375%2C%22width%22%3A153.125%2C%22height%22%3A15.625%2C%22text%22%3A%2214%E8%BD%AC%E5%8F%91%E5%88%B0%E6%96%87%E4%BB%B6%22%7D%2C%7B%22x%22%3A1365.625%2C%22y%22%3A382.8125%2C%22width%22%3A32.8125%2C%22height%22%3A17.1875%2C%22text%22%3A%22%E8%AE%BE%E7%BD%AE%22%7D%2C%7B%22x%22%3A312.5%2C%22y%22%3A396.875%2C%22width%22%3A454.6875%2C%22height%22%3A18.75%2C%22text%22%3A%2215%23https%3A%2F%2FwwgooqlecofleeXxxxx.html%22%7D%2C%7B%22x%22%3A315.625%2C%22y%22%3A464.0625%2C%22width%22%3A401.5625%2C%22height%22%3A18.75%2C%22text%22%3A%2218https%3A%2F%2F*XXXcomAAeALER%2FXXXXXXhTMI%22%7D%2C%7B%22x%22%3A304.6875%2C%22y%22%3A506.25%2C%22width%22%3A200%2C%22height%22%3A20.3125%2C%22text%22%3A%2220%23%E6%9B%B4%E5%A4%9A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%A1%88%E5%8F%82%E7%85%A7%E6%96%87%E6%A1%A3%22%7D%2C%7B%22x%22%3A368.75%2C%22y%22%3A551.5625%2C%22width%22%3A707.8125%2C%22height%22%3A20.3125%2C%22text%22%3A%222disable%3A%2F%2Finterceptattandekont.chh%22%7D%2C%7B%22x%22%3A342.1875%2C%22y%22%3A576.5625%2C%22width%22%3A635.9375%2C%22height%22%3A18.75%2C%22text%22%3A%22stttang.tbaba-ln.comuth-.mmom%22%7D%2C%7B%22x%22%3A315.625%2C%22y%22%3A598.4375%2C%22width%22%3A332.8125%2C%22height%22%3A18.75%2C%22text%22%3A%22static.dingtalk.commac%22%7D%2C%7B%22x%22%3A314.0625%2C%22y%22%3A639.0625%2C%22width%22%3A301.5625%2C%22height%22%3A20.3125%2C%22text%22%3A%2224%23APPLEMacStoreUpdateeTc%22%7D%2C%7B%22x%22%3A332.8125%2C%22y%22%3A662.5%2C%22width%22%3A509.375%2C%22height%22%3A20.3125%2C%22text%22%3A%2225d1sable%3A%2F%2FInterceptppLe.comcomc%22%7D%2C%7B%22x%22%3A287.5%2C%22y%22%3A684.375%2C%22width%22%3A28.125%2C%22height%22%3A21.875%2C%22text%22%3A%2226%22%7D%2C%7B%22x%22%3A1128.125%2C%22y%22%3A884.375%2C%22width%22%3A289.0625%2C%22height%22%3A20.3125%2C%22text%22%3A%22%E4%BB%A3%E7%90%86%E5%B7%B2%E7%BB%8F%E5%90%AF%E5%8A%A8%26%E8%AE%BE%E7%BD%AE%E4%B8%BA%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%90%86%3A12338%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E5%8C%95%20%E8%BE%93%E5%85%A5%2F%E7%BB%86%E5%85%A5%E8%A7%82%E5%88%99%201%23LightProxyDetaultRules%2C%E5%85%A5%2F%E6%8F%92%E5%85%A5%E8%A7%84%E5%88%99%20Default%202%E5%88%9D%E5%A7%8B%E8%A7%84%E5%88%99%E5%8F%AF%E4%BB%A5%E8%AE%A9%E4%B8%80%E4%BA%9B%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%9C%A8%E4%BB%A3%E7%90%86%E4%B8%8B%E5%B7%A5%E4%BD%9C%203%23%E5%9C%A8%E6%AF%94%E8%BE%93%E5%85%A5%E8%A7%84%E5%88%99%204%23command%2Bs%E4%BF%9D%E5%AD%98%205%23%E5%8F%8C%E5%87%BB%E5%90%AF%E7%94%A8%E6%88%96%E8%80%85%E7%A6%81%E7%94%A8%E8%A7%84%E5%88%99%20%E7%BD%91%E7%BB%9C%E6%8A%93%E5%8C%85%20%23hosts%E7%BB%91%E5%AE%9A%20810.101.73189g.al1cdn.co%20148205.215168alicnc%20cmb.alicdn.comu.alicdn.com%20%E6%89%8B%E6%9C%BA%E4%BB%A3%E7%90%86%201%E6%9D%A5%E7%9B%B4%E6%8E%A5%E8%BD%AC%E5%8F%91%E7%BD%91%E9%A1%B5%202H%3A%2F%2FWMAOQGLECOTS%3A%2014%E8%BD%AC%E5%8F%91%E5%88%B0%E6%96%87%E4%BB%B6%20%E8%AE%BE%E7%BD%AE%2015%23https%3A%2F%2FwwgooqlecofleeXxxxx.html%2018https%3A%2F%2F*XXXcomAAeALER%2FXXXXXXhTMI%2020%23%E6%9B%B4%E5%A4%9A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%A1%88%E5%8F%82%E7%85%A7%E6%96%87%E6%A1%A3%202disable%3A%2F%2Finterceptattandekont.chh%20stttang.tbaba-ln.comuth-.mmom%20static.dingtalk.commac%2024%23APPLEMacStoreUpdateeTc%2025d1sable%3A%2F%2FInterceptppLe.comcomc%2026%20%E4%BB%A3%E7%90%86%E5%B7%B2%E7%BB%8F%E5%90%AF%E5%8A%A8%26%E8%AE%BE%E7%BD%AE%E4%B8%BA%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%90%86%3A12338%22%2C%22width%22%3A525%2C%22height%22%3A352%7D\"></card></p><h2 id=\"vz7QC\"><br /></h2><h2 id=\"NJPM5\">为什么需要一个代理工具</h2><p><strong>因为代理工具能够让你随心所欲的掌控自己当前的开发环境。</strong></p><p><br /></p><p><strong>开发环境</strong>是影响研发效能最大的一个因素之一，不可用的环境，无法完成的部署，不稳定的上游环境等等都<strong>让一个非常简单的需求轻松消耗掉数天的时间</strong>。</p><p><br /></p><p>当开发环境陷入一种不健康的状态时，开发者就更容易破罐子破摔。宁可忍受每改一行代码重新手动 <code>build</code> 几分钟再开发也不愿意花时间让 watch 可用，然后发现自己越来越忙乱。</p><p><br /></p><blockquote><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1578206007497-b7935205-d8a8-4fc3-866d-0bc62c5a2814.png%22%2C%22originWidth%22%3A211%2C%22originHeight%22%3A239%2C%22name%22%3A%22image.png%22%2C%22size%22%3A134204%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A105.5%2C%22height%22%3A120%7D\"></card></p><p><br /></p><p><span style=\"color: #222222;\"><span>希腊神话中有一个受到惩罚的人西西弗斯，他受罚的方式是：必须将一块巨石推上山顶，而每次到达山顶后巨石又滚回山下，如此永无止境地重复下去。在西方语境中，形容词“西西弗斯式的”（英语：sisyphean）形容“永无尽头而又徒劳无功的任务”。</span></span></p></blockquote><p><br /></p><p>当你的接口和页面突然不能工作时，代理工具可以快速 <code>mock</code> 一个。当你想测试一下线上页面改动可能会带来的后果，代理工具可以让你不经过复杂的发布过程快速在本地看到想要的效果。</p><p><br /></p><h2 id=\"CJSHA\">什么是好的开发环境</h2><p>既然我们在讨论开发环境对于研发效率的影响，那我们先来看一看什么是好的前端开发环境。</p><p><br /></p><h3 id=\"UmNIw\">稳定</h3><p>好的开发环境首先应该是稳定可用的，不应该在开发测试的过程中频繁挂掉或者频繁发生改变。</p><p>依赖于后端日常接口进行调试的前端对这点应该深有体会，自己的问题还没解决，环境就时常带来新的问题。</p><p><br /></p><h3 id=\"JgdYr\">快速验证</h3><p>修改代码能够在尽可能短的时间内得到验证也是一个基本诉求，这也是为什么大部分前端构建都会关注 <code>Hot reload</code> 和更高级的 <code>HMR</code> 。</p><p><br /></p><p>有些场景下的修改一次简单的修改就要经过长时间的等待，例如依赖上游修改接口的返回内容，需要修改后端的页面结构然后重新部署，需要走一遍完整的发布流程来测试某个修改在真实的线上页面会产生的影响等等。</p><p><br /></p><p>这种改一行等几十分钟的开发方式对效率的拖累是极其恐怖的。</p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1578275488620-13ad673e-fa57-4715-b1d7-fd6adf8dbc5f.png%22%2C%22originWidth%22%3A225%2C%22originHeight%22%3A224%2C%22name%22%3A%22image.png%22%2C%22size%22%3A100533%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1.3333334%2C%22y%22%3A0.6666667%2C%22width%22%3A121.3333306%2C%22height%22%3A19.3333333%2C%22text%22%3A%22%E4%B8%80%E6%9D%AF%E8%8C%B6%2C%E4%B8%80%E5%8C%85%E7%83%9F%2C%22%7D%2C%7B%22x%22%3A89.333336%2C%22y%22%3A22%2C%22width%22%3A122.666664%2C%22height%22%3A18.666668%2C%22text%22%3A%22%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%86%99%E4%B8%80%E5%A4%A9.%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E4%B8%80%E6%9D%AF%E8%8C%B6%2C%E4%B8%80%E5%8C%85%E7%83%9F%2C%20%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%86%99%E4%B8%80%E5%A4%A9.%22%2C%22width%22%3A112.5%2C%22height%22%3A112%7D\"></card></p><p><br /></p><h3 id=\"r9l9z\">和线上的一致性</h3><p>很多项目的线上环境极为复杂，为了解决日常开发中的问题，也会有一个线下的 <code>DEMO</code> 页面，最后开发完再搬到线上。</p><p><br /></p><p>这种方式相对来说较为稳定且能快速验证，但比较凸显的问题在于和线上并不一致。开发中会存在很多 <code>if-else</code> 的逻辑，例如最常见的：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20API_BASE%20%3D%20utils.isDaily%20%3F%20'http%3A%2F%2Flocalhost%3A7001%3A'%3A%20'https%3A%2F%2Fxxxx%2F'%3B%22%2C%22id%22%3A%22pYW11%22%7D\"></card><p><br /></p><p>这种情况也往往导致 <code>Bug</code> 非常难以被定位，最后逼着开发者退化到在线上环境低效的进行 debug。</p><p><br /></p><h3 id=\"3MNL0\">确定性</h3><p>开发者对于当前的环境应该是有确切认知的，而不是一直不停的怀疑自己的配置到底有没有生效，命中的是不是又是缓存等等。</p><p><br /></p><p>有些情况下我们利用 <code>hosts</code> 切换工具来进行联调，但在切完 <code>hosts</code> 后却又不得不来回确认自己的切换是否生效，清楚 Chrome 的 DNS Cache，清楚 Socket 之类的。</p><p><br /></p><p>这种非确定性不但提高了开发者心智负担，而且也会导致 Bug 难以定位。</p><p><br /></p><h2 id=\"6aYPs\">LightProxy 如何解决这些问题</h2><p>那么 <code>LightProxy</code> 要如何解决上面的这些问题呢</p><p><br /></p><p><code>LightProxy</code> 通过基于 <code>whistle</code> 的代理能力，能够任意修改开发环境中的 <code>request</code> 和 <code>response</code> 。</p><p><br /></p><h3 id=\"WxTiC\">举个例子</h3><p>例如当我们需要在线上页面中加入一个 <code>DIV</code> ，如果没有代理我们需要依赖后端一套类似的预发环境，而有了 <code>LightProxy</code> 我们只需要使用：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22https%3A%2F%2Fwww.alibaba.com%2F%20htmlPrepend%3A%2F%2F(%3Cdiv%3Etest%3C%2Fdiv%3E)%22%2C%22id%22%3A%22HkZn9%22%7D\"></card><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1578276397871-fcf46678-c2a3-48bb-83cd-02bf2bd7e201.png%22%2C%22originWidth%22%3A1099%2C%22originHeight%22%3A278%2C%22name%22%3A%22image.png%22%2C%22size%22%3A93886%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A22.895834%2C%22y%22%3A11.447917%2C%22width%22%3A138.51978599999998%2C%22height%22%3A16.027083%2C%22text%22%3A%22cdivtest%2Fdiv%E4%B8%80%24%22%7D%2C%7B%22x%22%3A288.4875%2C%22y%22%3A26.330208%2C%22width%22%3A477.37809999999996%2C%22height%22%3A17.171875%2C%22text%22%3A%22%2F%2FINGOLCRK4%22%7D%2C%7B%22x%22%3A44.646873%2C%22y%22%3A43.502083%2C%22width%22%3A485.39162699999997%2C%22height%22%3A16.027084000000002%2C%22text%22%3A%22metacontent%5C%22text%2Fhtml%3Bcharseteutf-8%5C%22httpequivontnt-Type%22%7D%2C%7B%22x%22%3A18.316666%2C%22y%22%3A58.384377%2C%22width%22%3A373.202074%2C%22height%22%3A16.027083000000005%2C%22text%22%3A%22titleentitleo%22%7D%2C%7B%22x%22%3A38.922916%2C%22y%22%3A75.55625%2C%22width%22%3A493.40518399999996%2C%22height%22%3A14.882289999999998%2C%22text%22%3A%22netaname%5C%22kewwordscontent%5C%22MnUfacturersSup%22%7D%2C%7B%22x%22%3A540.3417%2C%22y%22%3A75.55625%2C%22width%22%3A512.8667%2C%22height%22%3A16.027085999999997%2C%22text%22%3A%22smotersuc%22%7D%2C%7B%22x%22%3A65.25313%2C%22y%22%3A92.72813%2C%22width%22%3A469.36457%2C%22height%22%3A13.737490000000008%2C%22text%22%3A%22metaname%5C%22descriptioncontent%5C%22FindquattyMuoctures%2CSue%22%7D%2C%7B%22x%22%3A554.07916%2C%22y%22%3A92.72813%2C%22width%22%3A523.16974%2C%22height%22%3A14.882280000000009%2C%22text%22%3A%22iers%2CEXpoRtRSmte%2C%22%7D%2C%7B%22x%22%3A22.895834%2C%22y%22%3A106.46562%2C%22width%22%3A127.071876%2C%22height%22%3A13.737504999999999%2C%22text%22%3A%22alibaba.com%3E%22%7D%2C%7B%22x%22%3A35.48854%2C%22y%22%3A123.6375%2C%22width%22%3A368.62291%2C%22height%22%3A14.882289999999998%2C%22text%22%3A%22metahttp-equiv%5C%22x-dnsprefetch-controtucontente%5C%22on%22%7D%2C%7B%22x%22%3A36.63333%2C%22y%22%3A139.66458%2C%22width%22%3A317.1073%2C%22height%22%3A13.737500000000011%2C%22text%22%3A%22cuinkrel-%5C%22dns-prefetch%5C%22href-%5C%22u%2Fi.alicdn.com%5C%22%22%7D%2C%7B%22x%22%3A32.054165%2C%22y%22%3A154.54688%2C%22width%22%3A331.989595%2C%22height%22%3A16.027080000000012%2C%22text%22%3A%22%3Clinkrel-%5C%22dns-prefetch%5C%22href-%5C%22%2Fbealicdn.com%22%7D%2C%7B%22x%22%3A27.475%2C%22y%22%3A170.57396%2C%22width%22%3A325.12082999999996%2C%22height%22%3A14.882290000000012%2C%22text%22%3A%22clinkrel-%5C%22dns-prefetch%5C%22href-%2F%2Fis.olicdn.com%5C%22%22%7D%2C%7B%22x%22%3A22.895834%2C%22y%22%3A186.60104%2C%22width%22%3A356.03019600000005%2C%22height%22%3A14.882299999999987%2C%22text%22%3A%22linkrel-%5C%22dns-prefetch%5C%22href-y%2Fu.alicdn.com%5C%22%22%7D%2C%7B%22x%22%3A20.60625%2C%22y%22%3A203.77292%2C%22width%22%3A326.26565%2C%22height%22%3A12.592710000000011%2C%22text%22%3A%22%3Clinkrel-%5C%22dns-prefetch%5C%22href-%5C%22%2F%2Fg.alicdn.com'%22%7D%2C%7B%22x%22%3A22.895834%2C%22y%22%3A219.8%2C%22width%22%3A322.831246%2C%22height%22%3A11.447909999999979%2C%22text%22%3A%22%3Ciinkrel-%5C%22dns-prefetch%5C%22href-%5C%22%2F%2Fassetslicdn.co%22%7D%2C%7B%22x%22%3A24.040625%2C%22y%22%3A235.82709%2C%22width%22%3A389.22915500000005%2C%22height%22%3A12.592690000000005%2C%22text%22%3A%22Linkrel-%5C%22dns-prefetch%5C%22href%5C%22%2Fimg.aticdn.com%22%7D%2C%7B%22x%22%3A27.475%2C%22y%22%3A251.85417%2C%22width%22%3A394.95313%2C%22height%22%3A13.737500000000011%2C%22text%22%3A%22linkrei%5C%22dns-prefetch%5C%22href-%5C%22%2Fcmap.atibaba.com%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22cdivtest%2Fdiv%E4%B8%80%24%20%2F%2FINGOLCRK4%20metacontent%5C%22text%2Fhtml%3Bcharseteutf-8%5C%22httpequivontnt-Type%20titleentitleo%20netaname%5C%22kewwordscontent%5C%22MnUfacturersSup%20smotersuc%20metaname%5C%22descriptioncontent%5C%22FindquattyMuoctures%2CSue%20iers%2CEXpoRtRSmte%2C%20alibaba.com%3E%20metahttp-equiv%5C%22x-dnsprefetch-controtucontente%5C%22on%20cuinkrel-%5C%22dns-prefetch%5C%22href-%5C%22u%2Fi.alicdn.com%5C%22%20%3Clinkrel-%5C%22dns-prefetch%5C%22href-%5C%22%2Fbealicdn.com%20clinkrel-%5C%22dns-prefetch%5C%22href-%2F%2Fis.olicdn.com%5C%22%20linkrel-%5C%22dns-prefetch%5C%22href-y%2Fu.alicdn.com%5C%22%20%3Clinkrel-%5C%22dns-prefetch%5C%22href-%5C%22%2F%2Fg.alicdn.com'%20%3Ciinkrel-%5C%22dns-prefetch%5C%22href-%5C%22%2F%2Fassetslicdn.co%20Linkrel-%5C%22dns-prefetch%5C%22href%5C%22%2Fimg.aticdn.com%20linkrei%5C%22dns-prefetch%5C%22href-%5C%22%2Fcmap.atibaba.com%22%2C%22width%22%3A549.5%2C%22height%22%3A139%7D\"></card></p><p><br /></p><p>就可以在一个线上的页面中插入一个 <code>div</code> 。</p><p><br /></p><p>同样的，我们可以直接把页面中的一个 <code>JS</code> 转发到本地一个开发中的文件</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22https%3A%2F%2Fwww.google.com%2Fxx.js%20file%3A%2F%2F%2FUser%2Fxxx%2Fxxx.js%22%2C%22id%22%3A%22bDifr%22%7D\"></card><p><br /></p><p>当后端缺少 <code>CORS</code> 头时，我们可以直接给它先加上 <code>CORS</code> 头</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22https%3A%2F%2Fxxx.com%2Fxx.json%20resCors%3A%2F%2F%20%23%20%E7%BB%99%E5%93%8D%E5%BA%94%E7%9A%84%E8%AF%B7%E6%B1%82%E5%A2%9E%E5%8A%A0%20CORS%20header%22%2C%22id%22%3A%22Zw7hJ%22%7D\"></card><p><br /></p><p>也可以直接把某个文件变成一个内联的文字，只要用类似 <code>ES6</code> 字符串框起来</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22https%3A%2F%2Fxxx.com%2Fxx.json%20%60test%20text%60%22%2C%22id%22%3A%223rzMc%22%7D\"></card><p><br /></p><p>总体来说，<code><span>LightProxy</span></code> 能够让开发者完全掌控自己的开发环境，用极低的成本定制自己的开发环境，而不是总是在等待依赖方按照自己的需求提供相应的环境。</p><p><br /></p><p>甚至于，你可以自己用 <code>NodeJS</code> 书写针对某个规则的响应：<a href=\"https://alibaba.github.io/lightproxy/write-rule-with-nodejs.html#%E4%BD%BF%E7%94%A8\" target=\"_blank\">使用 NodeJS 编写规则</a></p><p><br /></p><h2 id=\"DTTMJ\">快速确认</h2><p>为了能够快速确认代理是否按预期工作，我们在经过 <code><span>LightProxy</span></code> 代理的网络请求的 Response Header 增加了一些相关的信息，用于协助开发人员快速确认当前请求命中了什么规则，以及这个请求是怎么来的（由谁响应，匹配什么规则，实际真正访问的来源）。</p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1578276694637-f5b52b24-5e76-43c4-9425-3f2787c7e8c5.png%22%2C%22originWidth%22%3A1022%2C%22originHeight%22%3A170%2C%22name%22%3A%22image.png%22%2C%22size%22%3A29831%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A229.95%2C%22y%22%3A2.1291666%2C%22width%22%3A540.80836%2C%22height%22%3A26.614583399999997%2C%22text%22%3A%22lp%3ASeehttps%3A%2F%2Fgithub.com%2Fatibaba%2Flightrox%22%7D%2C%7B%22x%22%3A29.808334%2C%22y%22%3A3.19375%2C%22width%22%3A178.850006%2C%22height%22%3A24.485416999999998%2C%22text%22%3A%22lightproxy-help_%22%7D%2C%7B%22x%22%3A59.61667%2C%22y%22%3A45.777084%2C%22width%22%3A409.86459%2C%22height%22%3A23.420829999999995%2C%22text%22%3A%22lightproxy-host-ip_180101.12%22%7D%2C%7B%22x%22%3A86.23125%2C%22y%22%3A87.29584%2C%22width%22%3A472.675%2C%22height%22%3A23.420829999999995%2C%22text%22%3A%22ghtproxy-real-urlhttp%2Fwww.aidu.com%22%7D%2C%7B%22x%22%3A25.55%2C%22y%22%3A130.94376%2C%22width%22%3A301.27709999999996%2C%22height%22%3A22.356240000000014%2C%22text%22%3A%22lightproxy-rulesone%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22lp%3ASeehttps%3A%2F%2Fgithub.com%2Fatibaba%2Flightrox%20lightproxy-help_%20lightproxy-host-ip_180101.12%20ghtproxy-real-urlhttp%2Fwww.aidu.com%20lightproxy-rulesone%22%2C%22width%22%3A511%2C%22height%22%3A85%7D\"></card></p><p><br /></p><h2 id=\"SASae\">没有银弹</h2><p>虽然说代理工具可以快速的解决各种开发环境上的坑，但也并不是银弹。</p><p><br /></p><p>这种方案更加适合在开发阶段快速绕过各种拦路虎，但最终在多人协作中仍然需要有健康的环境来保障项目的协作流程流畅，不能因为有了代理工具后就完全无视开发环境的问题。</p><p><br /></p><h2 id=\"19TAe\">开始 &amp; 下载</h2><p>说了这么多，开始使用 <code>LightProxy</code> 控制你的开发环境吧：<a href=\"https://github.com/alibaba/lightproxy\" target=\"_blank\">https://github.com/alibaba/lightproxy</a></p><p><br /></p><h3 id=\"B9W04\">下载</h3><p><a href=\"https://gw.alipayobjects.com/os/LightProxy/LightProxy.dmg\" target=\"_blank\"><span class=\"lake-fontsize-12\"><strong><u>macOS 版</u></strong></span></a></p><p><a href=\"https://gw.alipayobjects.com/os/LightProxy/LightProxy-Setup.exe\" target=\"_blank\"><span class=\"lake-fontsize-12\"><strong><u>Windows 版</u></strong></span></a></p><p><br /></p><h2 id=\"ddxHZ\">问题反馈</h2><p>欢迎加入钉钉群讨论和反馈问题，或者直接在 issue 反馈问题：<a href=\"https://github.com/alibaba/lightproxy/issues\" target=\"_blank\">https://github.com/alibaba/lightproxy/issues</a></p><p><br /></p><blockquote><p>ps: Whistle 的作者也在群里，欢迎来撩</p></blockquote><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1578277057662-2ff248c8-7f29-4ad3-88ff-8381e8a99095.png%22%2C%22originWidth%22%3A970%2C%22originHeight%22%3A1280%2C%22name%22%3A%22image.png%22%2C%22size%22%3A338210%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A118.666664%2C%22y%22%3A129.33333%2C%22width%22%3A416.000036%2C%22height%22%3A50.66667000000001%2C%22text%22%3A%22LightProxy%E5%BC%80%E6%BA%90%E7%BE%A4%22%7D%2C%7B%22x%22%3A766.6667%2C%22y%22%3A129.33333%2C%22width%22%3A60%2C%22height%22%3A60%2C%22text%22%3A%22L%22%7D%2C%7B%22x%22%3A117.333336%2C%22y%22%3A190.66667%2C%22width%22%3A58.666664%2C%22height%22%3A32%2C%22text%22%3A%223%E4%BA%BA%22%7D%2C%7B%22x%22%3A264%2C%22y%22%3A1144%2C%22width%22%3A470.6667%2C%22height%22%3A33.33339999999998%2C%22text%22%3A%22%E6%89%AB%E4%B8%80%E6%89%AB%E7%BE%A4%E4%BA%8C%E7%BB%B4%E7%A0%81%2C%E7%AB%8B%E5%88%BB%E5%8A%A0%E5%85%A5%E8%AF%A5%E7%BE%A4.%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22LightProxy%E5%BC%80%E6%BA%90%E7%BE%A4%20L%203%E4%BA%BA%20%E6%89%AB%E4%B8%80%E6%89%AB%E7%BE%A4%E4%BA%8C%E7%BB%B4%E7%A0%81%2C%E7%AB%8B%E5%88%BB%E5%8A%A0%E5%85%A5%E8%AF%A5%E7%BE%A4.%22%2C%22width%22%3A188%2C%22height%22%3A248%7D\"></card></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-01-06T03:11:10.000Z",
    "deleted_at": null,
    "created_at": "2020-01-05T06:21:54.000Z",
    "updated_at": "2020-01-06T03:11:10.000Z",
    "published_at": "2020-01-06T03:11:10.000Z",
    "first_published_at": "2020-01-06T02:30:12.000Z",
    "word_count": 1760,
    "cover": "",
    "description": "原文地址：https://github.com/alibaba/lightproxy/issues/19LightProxy 是 IFE 团队开发的一款基于 Electron 和 whistle 的开源桌面代理软件，致力于让前端开发人员能够精确的掌握自己的开发环境，通过 HTTP 代理使用规则...",
    "custom_description": "LightProxy 是 IFE 团队开发的一款基于 Electron 和 whistle 的开源桌面代理软件，致力于让前端开发人员能够精确的掌握自己的开发环境，通过 HTTP 代理使用规则转发、修改每一个请求和响应的内容。为什么需要一个代理工具因为代理工具能够让你随心所欲的掌控自己当前的开发...",
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 3820165,
    "slug": "micro-macro-task-and-promise-perf",
    "title": "宏任务、微任务和 Promise 的性能",
    "book_id": 653495,
    "book": {
      "id": 653495,
      "type": "Column",
      "slug": "blog",
      "name": "blog",
      "user_id": 236311,
      "description": "",
      "creator_id": 236311,
      "public": 0,
      "items_count": 7,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-04-06T15:07:10.653Z",
      "updated_at": "2020-04-06T15:07:10.000Z",
      "created_at": "2019-12-24T14:26:42.000Z",
      "namespace": "xcodebuild/blog",
      "user": {
        "id": 236311,
        "type": "User",
        "login": "xcodebuild",
        "name": "xcodebuIld",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/236311/1546508350871-89a1db68-50d3-4776-9b7b-97ba81a8dfbe.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 0,
        "created_at": "2019-01-03T03:16:21.000Z",
        "updated_at": "2020-03-23T08:18:51.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 236311,
    "creator": {
      "id": 236311,
      "type": "User",
      "login": "xcodebuild",
      "name": "xcodebuIld",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/236311/1546508350871-89a1db68-50d3-4776-9b7b-97ba81a8dfbe.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 0,
      "created_at": "2019-01-03T03:16:21.000Z",
      "updated_at": "2020-03-23T08:18:51.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"AK0O6\"></a>\n## 背景\n\n我们都知道 setTimeout 和 Promise 并不在一个异步队列中，前者属于宏任务（ `MacroTask` ），而后者属于微任务（ `MicroTask` ）。\n\n很多地方在介绍宏任务和微任务的差异时，往往用一个类似于 `++i++++`  一样的题目让大家猜测不同任务的执行先后。这么做虽然可以精确的理解宏任务和微任务的执行时序，但却让人对于它们之间真正的差异摸不着头脑。\n\n更重要的是，我们完全不应该依赖这个微小的时序差异进行开发（正如同在 c++ 中不应该依赖未定义行为一样）。虽然宏任务和微任务的定义是存在于标准中的，但是不同的运行环境并不一定能够精准的遵循标准，而且某些场景下的 `Promise` 是各种千奇百怪的 polyfill。\n\n**总之，本文不关注执行时序上的差异，只关注性能。**<br />**\n<a name=\"R7Jsf\"></a>\n## 异步\n\n无论是宏任务还是微任务，首先都是异步任务。在 JavaScript 中的异步是靠事件循环来实现的，拿大家最常见的 setTimeout 为例。\n\n```javascript\n// 同步代码\nlet count = 1;\n\nsetTimeout(() => {\n\t// 异步\n  count = 2;\n}, 0);\n\n// 同步\ncount = 3;\n```\n\n一个异步任务会被丢到事件循环的队列中，而这部分代码会在接下来同步执行的代码后面才执行（这个时序总是可靠的）。每次事件循环中，浏览器会执行队列中的任务，然后进入下一个事件循环。\n\n> 当浏览器需要做一些渲染工作时，会等待这一帧的渲染工作完成，再进入下一个事件循环\n\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/236311/1577197618038-db7d48f3-aaa0-454c-b75d-976ee1deca9f.png#align=left&display=inline&height=304&name=image.png&originHeight=912&originWidth=1788&size=336135&status=done&style=none&width=596)\n\n那么，为什么已经有了这么一个机制，为什么又要有所谓的微任务呢，难道只是为了让大家猜测不同异步任务的执行时序么？\n\n我们来看一个 `async function` 的例子\n\n```javascript\nconst asyncTick = () => Promise.resolve();\n\n(async function(){\n\tfor (let i = 0; i < 10; i++) {\n  \tawait asyncTick();\n  }\n})()\n```\n\n我们看到这里明明其实没有异步等待的任务，但是如果 `Promise.resolve` 每次都和 `setTimeout` 一样往异步队列里丢一个任务然后等待一个事件循环来执行。看起来似乎没有什么大的问题，因为『事件循环』和一个 `for` 循环听起来似乎并没有什么本质上的不同。\n\n**然后在事实上，一次事件循环的耗时是远远超出一次 for 循环的。**<br />**<br />我们都知道 `setTimeout(fn, 0)` 并非真的是立即执行，而是要等待至少 `4ms` （事实上可能是 10ms）才会执行。\n\n> [MDN 相关文档](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Minimum_delay_and_timeout_nesting)\n> \n> In modern browsers, `setTimeout()`/`setInterval()` calls are throttled to a minimum of once every 4 ms when successive calls are triggered due to callback nesting (where the nesting level is at least a certain depth), or after certain number of successive intervals.\n> <br />**Note**: 4 ms is [specified by the HTML5 spec](http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#timers) and is consistent across browsers released in 2010 and onward. Prior to (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2), the minimum timeout value for nested timeouts was 10 ms.\n\n\n这意味着如果我们仍然采用这种方式去执行 async function（实际上就是 Promise) ，性能会非常的糟糕。\n\n而且对于正在执行一些复杂任务的页面（例如绘制）就更加糟糕了，整个循环都会被这个任务直接阻塞。\n\n微任务就是为了适应这种场景，**和宏任务最大的不同在于，如果在执行微任务的过程中我们往任务队列中新增了任务，浏览器会全部消费掉为止，再进入下一个循环**。这也是为什么微任务和宏任务的时序上会存在差别。\n\n看一个例子：\n\n```javascript\n// setTimeout 版本\nfunction test(){\n   console.log('test');\n   setTimeout(test);\n}\ntest();\n\n// Promise.resolve 版本\n// 这会卡住你的标签页\nfunction test(){\n   console.log('test');\n   Promise.resolve().then(test);\n}\ntest();\n\n// 同步版本\n// 这会卡住你的标签页\nfunction test(){\n   console.log('test');\n   test();\n}\ntest();\n```\n\n你会发现 `setTimeout` 版本的页面仍然能够操作，而控制台上 `test` 的输出次数在不断增加。\n\n而 `Promise.resolve` 和直接递归的表现是一样的（其实有一些区别， `Promise.resolve` 仍然是异步执行的），标签页被卡住，Chrome Devtools 上的输出次数隔一段时间蹦一下。\n\n> 不得不说 Chrome 的 Devtools 优化的确实不错，其实这里已经是死循环的状态了，JS 线程被完全阻塞\n\n\n<a name=\"DWWPv\"></a>\n### Promise 的性能\n\n了解宏任务和微任务的差异有助于我们理解 Promise 的性能。\n\n我们在实际生产中常常发现某些环境下的 Promise 的性能表现非常不如意，有些是不同容器的实现，另一些则是不同版本的 polyfill 实现。尤其是一些开发者会更倾向于体积更小的 `polyfill` ，例如这个有 `1.3k Star` 的实现\n\n[https://github.com/taylorhakes/promise-polyfill](https://github.com/taylorhakes/promise-polyfill)\n\n默认就是使用 `setTimout` 模拟的 `Promise.resolve` ，我们在 [https://jsperf.com/promise-performance-with-timers](https://jsperf.com/promise-performance-with-timers) 可以看到性能的对比已经有了数量级的差距（事实上比较复杂的异步任务会感觉到明显的延迟）。\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/236311/1577197618078-d26207a8-f401-4bcc-8049-5859303cf138.png#align=left&display=inline&height=406&name=image.png&originHeight=1218&originWidth=1950&size=202161&status=done&style=none&width=650)\n\n\n<a name=\"czISa\"></a>\n### 如何正确的模拟 Promise.resolve\n\n除了 `Promise` 是微任务外，还有很多 API 也是通过微任务设定的异步任务，其实如果有了解过 `Vue` 源码的同学就会注意到 `Vue` 的 `$nextTick` 源码中，在没有 `Promise.resolve` 时就是用 `MutationObserver` 模拟的。\n\n看一个简化的的 `Vue.$nextTick` ：\n\n```javascript\nconst timerFunc = (cb) => {\n    let counter = 1\n    const observer = new MutationObserver(cb);\n    const textNode = document.createTextNode(String(counter))\n    observer.observe(textNode, {\n      characterData: true\n    })\n    counter = (counter + 1) % 2\n    textNode.data = String(counter)\n}\n```\n\n原理其实非常简单，手动构造一个 `MutationObserver` 然后触发 DOM 元素的改变，从而触发异步任务。\n\n使用这种方式就明显把数量级拉了回来\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/236311/1577197618165-bce37f3c-a859-4312-8e3f-7f717c0757dd.png#align=left&display=inline&height=359&name=image.png&originHeight=1076&originWidth=1952&size=173379&status=done&style=none&width=650.6666666666666)\n\n\n> 由于这个 Promise 本身实现偏向于体积的缘故，这里的 benchmark 性能仍有数倍差距，但其实 `bluebird` 等注重性能的实现方式在 `timer` 函数用 `MutationObserver` 构造的情况下性能和原生不相上下，某些版本的浏览器下甚至更快\n> \n> **![image.png](https://cdn.nlark.com/yuque/0/2019/png/236311/1577197618171-ffb74451-d0c7-417c-8655-8ef5ae500449.png#align=left&display=inline&height=303&name=image.png&originHeight=908&originWidth=1264&size=58867&status=done&style=none&width=421.3333333333333)**\n\n\n\n当然实际上 Vue 中的 `NextTick` 实现要更细致一些，例如通过复用 `MutationObserver` 的方式避免多次创建等。**不过能够让 Promise 实现在性能上拉开百倍差距的就只有宏任务和微任务之间的差异。**<br />**\n> 除 `MutationObserver` 外还有很多其他的 API 使用的也是微任务，但从兼容性和性能角度 `MutationObserver` 仍然是使用最广泛的。\n\n\n<a name=\"uADje\"></a>\n### 总结\n\n宏任务和微任务在机制上的差异会导致不同的 `Promise` 实现产生巨大的性能差异，大到足以直接影响用户的直接体感。所以我们还是要避免暴力引入 `Promise polyfill` 的方式，在现代浏览器上优先使用 `Native Promise` ，而在需要 polyfill 的地方则需要避免性能出现破坏性下滑的情况。\n\n另外，哪条 `console.log` 先执行看懂了就好了，真的不是问题的关键，因为你永远不应该依赖宏任务和微任务的时序差异来编程。\n\n<a name=\"71Z7C\"></a>\n## 拓展阅读\n\n- [视频][ Jake Archibald's talk The Event Loop](https://vimeo.com/254947206)\n- [https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Minimum_delay_and_timeout_nesting](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Minimum_delay_and_timeout_nesting)\n- [https://github.com/taylorhakes/promise-polyfill](https://github.com/taylorhakes/promise-polyfill)\n- [https://jsperf.com/promise-vs-bluebird](https://jsperf.com/promise-vs-bluebird)\n",
    "body_draft": "<a name=\"AK0O6\"></a>\n## 背景\n\n我们都知道 setTimeout 和 Promise 并不在一个异步队列中，前者属于宏任务（ `MacroTask` ），而后者属于微任务（ `MicroTask` ）。\n\n很多地方在介绍宏任务和微任务的差异时，往往用一个类似于 `++i++++`  一样的题目让大家猜测不同任务的执行先后。这么做虽然可以精确的理解宏任务和微任务的执行时序，但却让人对于它们之间真正的差异摸不着头脑。\n\n更重要的是，我们完全不应该依赖这个微小的时序差异进行开发（正如同在 c++ 中不应该依赖未定义行为一样）。虽然宏任务和微任务的定义是存在于标准中的，但是不同的运行环境并不一定能够精准的遵循标准，而且某些场景下的 `Promise` 是各种千奇百怪的 polyfill。\n\n**总之，本文不关注执行时序上的差异，只关注性能。**<br />**\n<a name=\"R7Jsf\"></a>\n## 异步\n\n无论是宏任务还是微任务，首先都是异步任务。在 JavaScript 中的异步是靠事件循环来实现的，拿大家最常见的 setTimeout 为例。\n\n```javascript\n// 同步代码\nlet count = 1;\n\nsetTimeout(() => {\n\t// 异步\n  count = 2;\n}, 0);\n\n// 同步\ncount = 3;\n```\n\n一个异步任务会被丢到事件循环的队列中，而这部分代码会在接下来同步执行的代码后面才执行（这个时序总是可靠的）。每次事件循环中，浏览器会执行队列中的任务，然后进入下一个事件循环。\n\n> 当浏览器需要做一些渲染工作时，会等待这一帧的渲染工作完成，再进入下一个事件循环\n\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/236311/1577197618038-db7d48f3-aaa0-454c-b75d-976ee1deca9f.png#align=left&display=inline&height=304&name=image.png&originHeight=912&originWidth=1788&size=336135&status=done&style=none&width=596)\n\n那么，为什么已经有了这么一个机制，为什么又要有所谓的微任务呢，难道只是为了让大家猜测不同异步任务的执行时序么？\n\n我们来看一个 `async function` 的例子\n\n```javascript\nconst asyncTick = () => Promise.resolve();\n\n(async function(){\n\tfor (let i = 0; i < 10; i++) {\n  \tawait asyncTick();\n  }\n})()\n```\n\n我们看到这里明明其实没有异步等待的任务，但是如果 `Promise.resolve` 每次都和 `setTimeout` 一样往异步队列里丢一个任务然后等待一个事件循环来执行。看起来似乎没有什么大的问题，因为『事件循环』和一个 `for` 循环听起来似乎并没有什么本质上的不同。\n\n**然后在事实上，一次事件循环的耗时是远远超出一次 for 循环的。**<br />**<br />我们都知道 `setTimeout(fn, 0)` 并非真的是立即执行，而是要等待至少 `4ms` （事实上可能是 10ms）才会执行。\n\n> [MDN 相关文档](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Minimum_delay_and_timeout_nesting)\n> \n> In modern browsers, `setTimeout()`/`setInterval()` calls are throttled to a minimum of once every 4 ms when successive calls are triggered due to callback nesting (where the nesting level is at least a certain depth), or after certain number of successive intervals.\n> <br />**Note**: 4 ms is [specified by the HTML5 spec](http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#timers) and is consistent across browsers released in 2010 and onward. Prior to (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2), the minimum timeout value for nested timeouts was 10 ms.\n\n\n这意味着如果我们仍然采用这种方式去执行 async function（实际上就是 Promise) ，性能会非常的糟糕。\n\n而且对于正在执行一些复杂任务的页面（例如绘制）就更加糟糕了，整个循环都会被这个任务直接阻塞。\n\n微任务就是为了适应这种场景，**和宏任务最大的不同在于，如果在执行微任务的过程中我们往任务队列中新增了任务，浏览器会全部消费掉为止，再进入下一个循环**。这也是为什么微任务和宏任务的时序上会存在差别。\n\n看一个例子：\n\n```javascript\n// setTimeout 版本\nfunction test(){\n   console.log('test');\n   setTimeout(test);\n}\ntest();\n\n// Promise.resolve 版本\n// 这会卡住你的标签页\nfunction test(){\n   console.log('test');\n   Promise.resolve().then(test);\n}\ntest();\n\n// 同步版本\n// 这会卡住你的标签页\nfunction test(){\n   console.log('test');\n   test();\n}\ntest();\n```\n\n你会发现 `setTimeout` 版本的页面仍然能够操作，而控制台上 `test` 的输出次数在不断增加。\n\n而 `Promise.resolve` 和直接递归的表现是一样的（其实有一些区别， `Promise.resolve` 仍然是异步执行的），标签页被卡住，Chrome Devtools 上的输出次数隔一段时间蹦一下。\n\n> 不得不说 Chrome 的 Devtools 优化的确实不错，其实这里已经是死循环的状态了，JS 线程被完全阻塞\n\n\n<a name=\"DWWPv\"></a>\n### Promise 的性能\n\n了解宏任务和微任务的差异有助于我们理解 Promise 的性能。\n\n我们在实际生产中常常发现某些环境下的 Promise 的性能表现非常不如意，有些是不同容器的实现，另一些则是不同版本的 polyfill 实现。尤其是一些开发者会更倾向于体积更小的 `polyfill` ，例如这个有 `1.3k Star` 的实现\n\n[https://github.com/taylorhakes/promise-polyfill](https://github.com/taylorhakes/promise-polyfill)\n\n默认就是使用 `setTimout` 模拟的 `Promise.resolve` ，我们在 [https://jsperf.com/promise-performance-with-timers](https://jsperf.com/promise-performance-with-timers) 可以看到性能的对比已经有了数量级的差距（事实上比较复杂的异步任务会感觉到明显的延迟）。\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/236311/1577197618078-d26207a8-f401-4bcc-8049-5859303cf138.png#align=left&display=inline&height=406&name=image.png&originHeight=1218&originWidth=1950&size=202161&status=done&style=none&width=650)\n\n\n<a name=\"czISa\"></a>\n### 如何正确的模拟 Promise.resolve\n\n除了 `Promise` 是微任务外，还有很多 API 也是通过微任务设定的异步任务，其实如果有了解过 `Vue` 源码的同学就会注意到 `Vue` 的 `$nextTick` 源码中，在没有 `Promise.resolve` 时就是用 `MutationObserver` 模拟的。\n\n看一个简化的的 `Vue.$nextTick` ：\n\n```javascript\nconst timerFunc = (cb) => {\n    let counter = 1\n    const observer = new MutationObserver(cb);\n    const textNode = document.createTextNode(String(counter))\n    observer.observe(textNode, {\n      characterData: true\n    })\n    counter = (counter + 1) % 2\n    textNode.data = String(counter)\n}\n```\n\n原理其实非常简单，手动构造一个 `MutationObserver` 然后触发 DOM 元素的改变，从而触发异步任务。\n\n使用这种方式就明显把数量级拉了回来\n\n![image.png](https://cdn.nlark.com/yuque/0/2019/png/236311/1577197618165-bce37f3c-a859-4312-8e3f-7f717c0757dd.png#align=left&display=inline&height=359&name=image.png&originHeight=1076&originWidth=1952&size=173379&status=done&style=none&width=650.6666666666666)\n\n\n> 由于这个 Promise 本身实现偏向于体积的缘故，这里的 benchmark 性能仍有数倍差距，但其实 `bluebird` 等注重性能的实现方式在 `timer` 函数用 `MutationObserver` 构造的情况下性能和原生不相上下，某些版本的浏览器下甚至更快\n> \n> **![image.png](https://cdn.nlark.com/yuque/0/2019/png/236311/1577197618171-ffb74451-d0c7-417c-8655-8ef5ae500449.png#align=left&display=inline&height=303&name=image.png&originHeight=908&originWidth=1264&size=58867&status=done&style=none&width=421.3333333333333)**\n\n\n\n当然实际上 Vue 中的 `NextTick` 实现要更细致一些，例如通过复用 `MutationObserver` 的方式避免多次创建等。**不过能够让 Promise 实现在性能上拉开百倍差距的就只有宏任务和微任务之间的差异。**<br />**\n> 除 `MutationObserver` 外还有很多其他的 API 使用的也是微任务，但从兼容性和性能角度 `MutationObserver` 仍然是使用最广泛的。\n\n\n<a name=\"uADje\"></a>\n### 总结\n\n宏任务和微任务在机制上的差异会导致不同的 `Promise` 实现产生巨大的性能差异，大到足以直接影响用户的直接体感。所以我们还是要避免暴力引入 `Promise polyfill` 的方式，在现代浏览器上优先使用 `Native Promise` ，而在需要 polyfill 的地方则需要避免性能出现破坏性下滑的情况。\n\n另外，哪条 `console.log` 先执行看懂了就好了，真的不是问题的关键，因为你永远不应该依赖宏任务和微任务的时序差异来编程。\n\n<a name=\"71Z7C\"></a>\n## 拓展阅读\n\n- [视频][ Jake Archibald's talk The Event Loop](https://vimeo.com/254947206)\n- [https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Minimum_delay_and_timeout_nesting](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Minimum_delay_and_timeout_nesting)\n- [https://github.com/taylorhakes/promise-polyfill](https://github.com/taylorhakes/promise-polyfill)\n- [https://jsperf.com/promise-vs-bluebird](https://jsperf.com/promise-vs-bluebird)\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine\" data-lake-element=\"root\" data-selection-236311=\"%7B%22path%22%3A%5B%5B2%2C4%2C1%5D%2C%5B2%2C4%2C1%5D%5D%2C%22uuid%22%3A%22236311%22%2C%22active%22%3Atrue%7D\"><h2 id=\"AK0O6\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">背景</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们都知道 setTimeout 和 Promise 并不在一个异步队列中，前者属于宏任务（ <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">MacroTask</code>&nbsp;），而后者属于微任务（ <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">MicroTask</code>&nbsp;）。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">很多地方在介绍宏任务和微任务的差异时，往往用一个类似于 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">++i++++</code>&nbsp; 一样的题目让大家猜测不同任务的执行先后。这么做虽然可以精确的理解宏任务和微任务的执行时序，但却让人对于它们之间真正的差异摸不着头脑。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">更重要的是，我们完全不应该依赖这个微小的时序差异进行开发（正如同在 c++ 中不应该依赖未定义行为一样）。虽然宏任务和微任务的定义是存在于标准中的，但是不同的运行环境并不一定能够精准的遵循标准，而且某些场景下的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Promise</code> 是各种千奇百怪的 polyfill。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong>总之，本文不关注执行时序上的差异，只关注性能。</strong></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong><br></strong></p><h2 id=\"R7Jsf\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">异步</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">无论是宏任务还是微任务，首先都是异步任务。在 JavaScript 中的异步是靠事件循环来实现的，拿大家最常见的 setTimeout 为例。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"bTQtY\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(38, 38, 38); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 同步代码</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">let</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">count</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">setTimeout</span>(() <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=&gt;</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 异步</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">count</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}, <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 同步</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">count</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">3</span>;</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">一个异步任务会被丢到事件循环的队列中，而这部分代码会在接下来同步执行的代码后面才执行（这个时序总是可靠的）。每次事件循环中，浏览器会执行队列中的任务，然后进入下一个事件循环。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><blockquote style=\"padding-left: 1em; margin-top: 5px; margin-bottom: 5px; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当浏览器需要做一些渲染工作时，会等待这一帧的渲染工作完成，再进入下一个事件循环</p></blockquote><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/236311/1577197618038-db7d48f3-aaa0-454c-b75d-976ee1deca9f.png?x-oss-process=image/resize,w_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/236311/1577197618038-db7d48f3-aaa0-454c-b75d-976ee1deca9f.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 596px; height: 304px;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">那么，为什么已经有了这么一个机制，为什么又要有所谓的微任务呢，难道只是为了让大家猜测不同异步任务的执行时序么？</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们来看一个 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">async function</code> 的例子</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"0lVzI\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(38, 38, 38); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">asyncTick</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> () <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=&gt;</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Promise</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resolve</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">(<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">async</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">function</span>(){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">for</span> (<span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">let</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0</span>; <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">&lt;</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">10</span>; <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">i</span><span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">++</span>) {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">await</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">asyncTick</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  }\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">})()</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们看到这里明明其实没有异步等待的任务，但是如果 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Promise.resolve</code> 每次都和 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">setTimeout</code> 一样往异步队列里丢一个任务然后等待一个事件循环来执行。看起来似乎没有什么大的问题，因为『事件循环』和一个 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">for</code> 循环听起来似乎并没有什么本质上的不同。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong>然后在事实上，一次事件循环的耗时是远远超出一次 for 循环的。</strong></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong><br></strong></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们都知道 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">setTimeout(fn, 0)</code> 并非真的是立即执行，而是要等待至少 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">4ms</code> （事实上可能是 10ms）才会执行。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><blockquote style=\"padding-left: 1em; margin-top: 5px; margin-bottom: 5px; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Minimum_delay_and_timeout_nesting\" target=\"_blank\">MDN 相关文档</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(51, 51, 51); font-size: 16px; line-height: 24px;\" data-mce-style=\"font-size: 12px\">In modern browsers,&nbsp;</span><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">setTimeout()</code><span class=\"lake-fontsize-12\" style=\"color: rgb(51, 51, 51); font-size: 16px; line-height: 24px;\" data-mce-style=\"font-size: 12px\">/</span><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">setInterval()</code><span class=\"lake-fontsize-12\" style=\"color: rgb(51, 51, 51); font-size: 16px; line-height: 24px;\" data-mce-style=\"font-size: 12px\">&nbsp;calls are throttled to a minimum of once every 4 ms when successive calls are triggered due to callback nesting (where the nesting level is at least a certain depth), or after certain number of successive intervals.</span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-12\" style=\"color: rgb(51, 51, 51); font-size: 16px; line-height: 24px;\" data-mce-style=\"font-size: 12px\"><br></span><strong>Note</strong><span class=\"lake-fontsize-12\" style=\"color: rgb(51, 51, 51); background-color: rgb(255, 243, 212); font-size: 16px; line-height: 24px;\" data-mce-style=\"font-size: 12px\">: 4 ms is&nbsp;</span><a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#timers\" target=\"_blank\">specified by the HTML5 spec</a><span class=\"lake-fontsize-12\" style=\"color: rgb(51, 51, 51); background-color: rgb(255, 243, 212); font-size: 16px; line-height: 24px;\" data-mce-style=\"font-size: 12px\">&nbsp;and is consistent across browsers released in 2010 and onward. Prior to (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2), the minimum timeout value for nested timeouts was 10 ms.</span></p></blockquote><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这意味着如果我们仍然采用这种方式去执行 <span style=\"background-color: rgba(0, 0, 0, 0.06);\">async function（实际上就是 Promise)</span> ，性能会非常的糟糕。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">而且对于正在执行一些复杂任务的页面（例如绘制）就更加糟糕了，整个循环都会被这个任务直接阻塞。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">微任务就是为了适应这种场景，<strong>和宏任务最大的不同在于，如果在执行微任务的过程中我们往任务队列中新增了任务，浏览器会全部消费掉为止，再进入下一个循环</strong>。这也是为什么微任务和宏任务的时序上会存在差别。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">看一个例子：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"0bQ6j\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(38, 38, 38); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// setTimeout 版本</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">function</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">test</span>(){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">   <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">console</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">log</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'test'</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">   <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">setTimeout</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">test</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">test</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// Promise.resolve 版本</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 这会卡住你的标签页</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">function</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">test</span>(){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">   <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">console</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">log</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'test'</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">   <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">Promise</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">resolve</span>().<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">then</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">test</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">test</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 同步版本</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 这会卡住你的标签页</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">function</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">test</span>(){\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">   <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">console</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">log</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'test'</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">   <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">test</span>();\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">test</span>();</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">你会发现 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">setTimeout</code> 版本的页面仍然能够操作，而控制台上 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">test</code> 的输出次数在不断增加。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">而 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Promise.resolve</code> 和直接递归的表现是一样的（其实有一些区别， <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Promise.resolve</code> 仍然是异步执行的），标签页被卡住，Chrome Devtools 上的输出次数隔一段时间蹦一下。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><blockquote style=\"padding-left: 1em; margin-top: 5px; margin-bottom: 5px; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">不得不说 Chrome 的 Devtools 优化的确实不错，其实这里已经是死循环的状态了，JS 线程被完全阻塞</p></blockquote><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"DWWPv\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">Promise 的性能</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">了解宏任务和微任务的差异有助于我们理解 Promise 的性能。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们在实际生产中常常发现某些环境下的 Promise 的性能表现非常不如意，有些是不同容器的实现，另一些则是不同版本的 polyfill 实现。尤其是一些开发者会更倾向于体积更小的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">polyfill</code> ，例如这个有 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">1.3k Star</code> 的实现</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"https://github.com/taylorhakes/promise-polyfill\" target=\"_blank\">https://github.com/taylorhakes/promise-polyfill</a></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">默认就是使用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">setTimout</code> 模拟的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Promise.resolve</code> ，我们在 <a href=\"https://jsperf.com/promise-performance-with-timers\" target=\"_blank\">https://jsperf.com/promise-performance-with-timers</a> 可以看到性能的对比已经有了数量级的差距（事实上比较复杂的异步任务会感觉到明显的延迟）。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/236311/1577197618078-d26207a8-f401-4bcc-8049-5859303cf138.png?x-oss-process=image/resize,w_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/236311/1577197618078-d26207a8-f401-4bcc-8049-5859303cf138.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 650px; height: 406px;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"czISa\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">如何正确的模拟 Promise.resolve</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">除了 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Promise</code> 是微任务外，还有很多 API 也是通过微任务设定的异步任务，其实如果有了解过 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Vue</code> 源码的同学就会注意到 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Vue</code> 的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">$nextTick</code> 源码中，在没有 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Promise.resolve</code> 时就是用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">MutationObserver</code> 模拟的。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">看一个简化的的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Vue.$nextTick</code> ：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"KFmnw\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(38, 38, 38); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">timerFunc</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> (<span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cb</span>) <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=&gt;</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">let</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">counter</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">observer</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">new</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">MutationObserver</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cb</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">textNode</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">document</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">createTextNode</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">counter</span>))\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">observer</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">observe</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">textNode</span>, {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">      <span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">characterData</span>: <span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">true</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    })\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">counter</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> (<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">counter</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">+</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>) <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">%</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">textNode</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">data</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">String</span>(<span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">counter</span>)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">原理其实非常简单，手动构造一个 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">MutationObserver</code> 然后触发 DOM 元素的改变，从而触发异步任务。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">使用这种方式就明显把数量级拉了回来</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/236311/1577197618165-bce37f3c-a859-4312-8e3f-7f717c0757dd.png?x-oss-process=image/resize,w_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/236311/1577197618165-bce37f3c-a859-4312-8e3f-7f717c0757dd.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 650.667px; height: 359px;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><blockquote style=\"padding-left: 1em; margin-top: 5px; margin-bottom: 5px; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">由于这个 Promise 本身实现偏向于体积的缘故，这里的 benchmark 性能仍有数倍差距，但其实 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">bluebird</code> 等注重性能的实现方式在 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">timer</code> 函数用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">MutationObserver</code> 构造的情况下性能和原生不相上下，某些版本的浏览器下甚至更快</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2019/png/236311/1577197618171-ffb74451-d0c7-417c-8655-8ef5ae500449.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2019/png/236311/1577197618171-ffb74451-d0c7-417c-8655-8ef5ae500449.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 421.333px; height: 303px;\"></span></strong></p></blockquote><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当然实际上 Vue 中的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">NextTick</code> 实现要更细致一些，例如通过复用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">MutationObserver</code> 的方式避免多次创建等。<strong>不过能够让 Promise 实现在性能上拉开百倍差距的就只有宏任务和微任务之间的差异。</strong></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><strong><br></strong></p><blockquote style=\"padding-left: 1em; margin-top: 5px; margin-bottom: 5px; margin-left: 0px; border-left: 3px solid rgb(238, 238, 238); opacity: 0.6;\"><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">除 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">MutationObserver</code> 外还有很多其他的 API 使用的也是微任务，但从兼容性和性能角度 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">MutationObserver</code> 仍然是使用最广泛的。</p></blockquote><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"uADje\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">总结</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">宏任务和微任务在机制上的差异会导致不同的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Promise</code> 实现产生巨大的性能差异，大到足以直接影响用户的直接体感。所以我们还是要避免暴力引入 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Promise polyfill</code> 的方式，在现代浏览器上优先使用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Native Promise</code> ，而在需要 polyfill 的地方则需要避免性能出现破坏性下滑的情况。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">另外，哪条 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">console.log</code> 先执行看懂了就好了，真的不是问题的关键，因为你永远不应该依赖宏任务和微任务的时序差异来编程。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"71Z7C\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">拓展阅读</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ul lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 24px; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>[视频]<a href=\"https://vimeo.com/254947206\" target=\"_blank\">&nbsp;Jake Archibald's talk The Event Loop</a></li><li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Minimum_delay_and_timeout_nesting\" target=\"_blank\">https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Minimum_delay_and_timeout_nesting</a></li><li><a href=\"https://github.com/taylorhakes/promise-polyfill\" target=\"_blank\">https://github.com/taylorhakes/promise-polyfill</a></li><li><a href=\"https://jsperf.com/promise-vs-bluebird\" target=\"_blank\">https://jsperf.com/promise-vs-bluebird</a></li></ul></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><h2 id=\"AK0O6\">背景</h2><p><br /></p><p>我们都知道 setTimeout 和 Promise 并不在一个异步队列中，前者属于宏任务（ <code>MacroTask</code> ），而后者属于微任务（ <code>MicroTask</code> ）。</p><p><br /></p><p>很多地方在介绍宏任务和微任务的差异时，往往用一个类似于 <code>++i++++</code>  一样的题目让大家猜测不同任务的执行先后。这么做虽然可以精确的理解宏任务和微任务的执行时序，但却让人对于它们之间真正的差异摸不着头脑。</p><p><br /></p><p>更重要的是，我们完全不应该依赖这个微小的时序差异进行开发（正如同在 c++ 中不应该依赖未定义行为一样）。虽然宏任务和微任务的定义是存在于标准中的，但是不同的运行环境并不一定能够精准的遵循标准，而且某些场景下的 <code>Promise</code> 是各种千奇百怪的 polyfill。</p><p><br /></p><p><strong>总之，本文不关注执行时序上的差异，只关注性能。</strong></p><p><strong><br /></strong></p><h2 id=\"R7Jsf\">异步</h2><p><br /></p><p>无论是宏任务还是微任务，首先都是异步任务。在 JavaScript 中的异步是靠事件循环来实现的，拿大家最常见的 setTimeout 为例。</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20%E5%90%8C%E6%AD%A5%E4%BB%A3%E7%A0%81%5Cnlet%20count%20%3D%201%3B%5Cn%5CnsetTimeout(()%20%3D%3E%20%7B%5Cn%5Ct%2F%2F%20%E5%BC%82%E6%AD%A5%5Cn%20%20count%20%3D%202%3B%5Cn%7D%2C%200)%3B%5Cn%5Cn%2F%2F%20%E5%90%8C%E6%AD%A5%5Cncount%20%3D%203%3B%22%2C%22id%22%3A%22bTQtY%22%7D\"></card><p><br /></p><p>一个异步任务会被丢到事件循环的队列中，而这部分代码会在接下来同步执行的代码后面才执行（这个时序总是可靠的）。每次事件循环中，浏览器会执行队列中的任务，然后进入下一个事件循环。</p><p><br /></p><blockquote style=\"padding-left: 1em;\"><p>当浏览器需要做一些渲染工作时，会等待这一帧的渲染工作完成，再进入下一个事件循环</p></blockquote><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F236311%2F1577197618038-db7d48f3-aaa0-454c-b75d-976ee1deca9f.png%22%2C%22originWidth%22%3A1788%2C%22originHeight%22%3A912%2C%22name%22%3A%22image.png%22%2C%22size%22%3A336135%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A596%2C%22height%22%3A304%7D\"></card></p><p><br /></p><p>那么，为什么已经有了这么一个机制，为什么又要有所谓的微任务呢，难道只是为了让大家猜测不同异步任务的执行时序么？</p><p><br /></p><p>我们来看一个 <code>async function</code> 的例子</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20asyncTick%20%3D%20()%20%3D%3E%20Promise.resolve()%3B%5Cn%5Cn(async%20function()%7B%5Cn%5Ctfor%20(let%20i%20%3D%200%3B%20i%20%3C%2010%3B%20i%2B%2B)%20%7B%5Cn%20%20%5Ctawait%20asyncTick()%3B%5Cn%20%20%7D%5Cn%7D)()%22%2C%22id%22%3A%220lVzI%22%7D\"></card><p><br /></p><p>我们看到这里明明其实没有异步等待的任务，但是如果 <code>Promise.resolve</code> 每次都和 <code>setTimeout</code> 一样往异步队列里丢一个任务然后等待一个事件循环来执行。看起来似乎没有什么大的问题，因为『事件循环』和一个 <code>for</code> 循环听起来似乎并没有什么本质上的不同。</p><p><br /></p><p><strong>然后在事实上，一次事件循环的耗时是远远超出一次 for 循环的。</strong></p><p><strong><br /></strong></p><p>我们都知道 <code>setTimeout(fn, 0)</code> 并非真的是立即执行，而是要等待至少 <code>4ms</code> （事实上可能是 10ms）才会执行。</p><p><br /></p><blockquote style=\"padding-left: 1em;\"><p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Minimum_delay_and_timeout_nesting\" target=\"_blank\">MDN 相关文档</a></p><p><br /></p><p><span class=\"lake-fontsize-12\" style=\"color: #333333;\">In modern browsers, </span><code>setTimeout()</code><span class=\"lake-fontsize-12\" style=\"color: #333333;\">/</span><code>setInterval()</code><span class=\"lake-fontsize-12\" style=\"color: #333333;\"> calls are throttled to a minimum of once every 4 ms when successive calls are triggered due to callback nesting (where the nesting level is at least a certain depth), or after certain number of successive intervals.</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #333333;\"><br /></span><strong>Note</strong><span class=\"lake-fontsize-12\" style=\"color: #333333; background-color: #FFF3D4;\">: 4 ms is </span><a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#timers\" target=\"_blank\">specified by the HTML5 spec</a><span class=\"lake-fontsize-12\" style=\"color: #333333; background-color: #FFF3D4;\"> and is consistent across browsers released in 2010 and onward. Prior to (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2), the minimum timeout value for nested timeouts was 10 ms.</span></p></blockquote><p><br /></p><p>这意味着如果我们仍然采用这种方式去执行 <span style=\"background-color: rgba(0, 0, 0, 0.06);\">async function（实际上就是 Promise)</span> ，性能会非常的糟糕。</p><p><br /></p><p>而且对于正在执行一些复杂任务的页面（例如绘制）就更加糟糕了，整个循环都会被这个任务直接阻塞。</p><p><br /></p><p>微任务就是为了适应这种场景，<strong>和宏任务最大的不同在于，如果在执行微任务的过程中我们往任务队列中新增了任务，浏览器会全部消费掉为止，再进入下一个循环</strong>。这也是为什么微任务和宏任务的时序上会存在差别。</p><p><br /></p><p>看一个例子：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20setTimeout%20%E7%89%88%E6%9C%AC%5Cnfunction%20test()%7B%5Cn%20%20%20console.log('test')%3B%5Cn%20%20%20setTimeout(test)%3B%5Cn%7D%5Cntest()%3B%5Cn%5Cn%2F%2F%20Promise.resolve%20%E7%89%88%E6%9C%AC%5Cn%2F%2F%20%E8%BF%99%E4%BC%9A%E5%8D%A1%E4%BD%8F%E4%BD%A0%E7%9A%84%E6%A0%87%E7%AD%BE%E9%A1%B5%5Cnfunction%20test()%7B%5Cn%20%20%20console.log('test')%3B%5Cn%20%20%20Promise.resolve().then(test)%3B%5Cn%7D%5Cntest()%3B%5Cn%5Cn%2F%2F%20%E5%90%8C%E6%AD%A5%E7%89%88%E6%9C%AC%5Cn%2F%2F%20%E8%BF%99%E4%BC%9A%E5%8D%A1%E4%BD%8F%E4%BD%A0%E7%9A%84%E6%A0%87%E7%AD%BE%E9%A1%B5%5Cnfunction%20test()%7B%5Cn%20%20%20console.log('test')%3B%5Cn%20%20%20test()%3B%5Cn%7D%5Cntest()%3B%22%2C%22id%22%3A%220bQ6j%22%7D\"></card><p><br /></p><p>你会发现 <code>setTimeout</code> 版本的页面仍然能够操作，而控制台上 <code>test</code> 的输出次数在不断增加。</p><p><br /></p><p>而 <code>Promise.resolve</code> 和直接递归的表现是一样的（其实有一些区别， <code>Promise.resolve</code> 仍然是异步执行的），标签页被卡住，Chrome Devtools 上的输出次数隔一段时间蹦一下。</p><p><br /></p><blockquote style=\"padding-left: 1em;\"><p>不得不说 Chrome 的 Devtools 优化的确实不错，其实这里已经是死循环的状态了，JS 线程被完全阻塞</p></blockquote><p><br /></p><h3 id=\"DWWPv\">Promise 的性能</h3><p><br /></p><p>了解宏任务和微任务的差异有助于我们理解 Promise 的性能。</p><p><br /></p><p>我们在实际生产中常常发现某些环境下的 Promise 的性能表现非常不如意，有些是不同容器的实现，另一些则是不同版本的 polyfill 实现。尤其是一些开发者会更倾向于体积更小的 <code>polyfill</code> ，例如这个有 <code>1.3k Star</code> 的实现</p><p><br /></p><p><a href=\"https://github.com/taylorhakes/promise-polyfill\" target=\"_blank\">https://github.com/taylorhakes/promise-polyfill</a></p><p><br /></p><p>默认就是使用 <code>setTimout</code> 模拟的 <code>Promise.resolve</code> ，我们在 <a href=\"https://jsperf.com/promise-performance-with-timers\" target=\"_blank\">https://jsperf.com/promise-performance-with-timers</a> 可以看到性能的对比已经有了数量级的差距（事实上比较复杂的异步任务会感觉到明显的延迟）。</p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F236311%2F1577197618078-d26207a8-f401-4bcc-8049-5859303cf138.png%22%2C%22originWidth%22%3A1950%2C%22originHeight%22%3A1218%2C%22name%22%3A%22image.png%22%2C%22size%22%3A202161%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A650%2C%22height%22%3A406%7D\"></card></p><p><br /></p><p><br /></p><h3 id=\"czISa\">如何正确的模拟 Promise.resolve</h3><p><br /></p><p>除了 <code>Promise</code> 是微任务外，还有很多 API 也是通过微任务设定的异步任务，其实如果有了解过 <code>Vue</code> 源码的同学就会注意到 <code>Vue</code> 的 <code>$nextTick</code> 源码中，在没有 <code>Promise.resolve</code> 时就是用 <code>MutationObserver</code> 模拟的。</p><p><br /></p><p>看一个简化的的 <code>Vue.$nextTick</code> ：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20timerFunc%20%3D%20(cb)%20%3D%3E%20%7B%5Cn%20%20%20%20let%20counter%20%3D%201%5Cn%20%20%20%20const%20observer%20%3D%20new%20MutationObserver(cb)%3B%5Cn%20%20%20%20const%20textNode%20%3D%20document.createTextNode(String(counter))%5Cn%20%20%20%20observer.observe(textNode%2C%20%7B%5Cn%20%20%20%20%20%20characterData%3A%20true%5Cn%20%20%20%20%7D)%5Cn%20%20%20%20counter%20%3D%20(counter%20%2B%201)%20%25%202%5Cn%20%20%20%20textNode.data%20%3D%20String(counter)%5Cn%7D%22%2C%22id%22%3A%22KFmnw%22%7D\"></card><p><br /></p><p>原理其实非常简单，手动构造一个 <code>MutationObserver</code> 然后触发 DOM 元素的改变，从而触发异步任务。</p><p><br /></p><p>使用这种方式就明显把数量级拉了回来</p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F236311%2F1577197618165-bce37f3c-a859-4312-8e3f-7f717c0757dd.png%22%2C%22originWidth%22%3A1952%2C%22originHeight%22%3A1076%2C%22name%22%3A%22image.png%22%2C%22size%22%3A173379%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A650.6666666666666%2C%22height%22%3A359%7D\"></card></p><p><br /></p><p><br /></p><blockquote style=\"padding-left: 1em;\"><p>由于这个 Promise 本身实现偏向于体积的缘故，这里的 benchmark 性能仍有数倍差距，但其实 <code>bluebird</code> 等注重性能的实现方式在 <code>timer</code> 函数用 <code>MutationObserver</code> 构造的情况下性能和原生不相上下，某些版本的浏览器下甚至更快</p><p><br /></p><p><strong><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F236311%2F1577197618171-ffb74451-d0c7-417c-8655-8ef5ae500449.png%22%2C%22originWidth%22%3A1264%2C%22originHeight%22%3A908%2C%22name%22%3A%22image.png%22%2C%22size%22%3A58867%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A421.3333333333333%2C%22height%22%3A303%7D\"></card></strong></p></blockquote><p><br /></p><p><br /></p><p>当然实际上 Vue 中的 <code>NextTick</code> 实现要更细致一些，例如通过复用 <code>MutationObserver</code> 的方式避免多次创建等。<strong>不过能够让 Promise 实现在性能上拉开百倍差距的就只有宏任务和微任务之间的差异。</strong></p><p><strong><br /></strong></p><blockquote style=\"padding-left: 1em;\"><p>除 <code>MutationObserver</code> 外还有很多其他的 API 使用的也是微任务，但从兼容性和性能角度 <code>MutationObserver</code> 仍然是使用最广泛的。</p></blockquote><p><br /></p><h3 id=\"uADje\">总结</h3><p><br /></p><p>宏任务和微任务在机制上的差异会导致不同的 <code>Promise</code> 实现产生巨大的性能差异，大到足以直接影响用户的直接体感。所以我们还是要避免暴力引入 <code>Promise polyfill</code> 的方式，在现代浏览器上优先使用 <code>Native Promise</code> ，而在需要 polyfill 的地方则需要避免性能出现破坏性下滑的情况。</p><p><br /></p><p>另外，哪条 <code>console.log</code> 先执行看懂了就好了，真的不是问题的关键，因为你永远不应该依赖宏任务和微任务的时序差异来编程。</p><p><br /></p><h2 id=\"71Z7C\">拓展阅读</h2><p><br /></p><ul><li>[视频]<a href=\"https://vimeo.com/254947206\" target=\"_blank\"> Jake Archibald's talk The Event Loop</a></li><li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Minimum_delay_and_timeout_nesting\" target=\"_blank\">https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Minimum_delay_and_timeout_nesting</a></li><li><a href=\"https://github.com/taylorhakes/promise-polyfill\" target=\"_blank\">https://github.com/taylorhakes/promise-polyfill</a></li><li><a href=\"https://jsperf.com/promise-vs-bluebird\" target=\"_blank\">https://jsperf.com/promise-vs-bluebird</a></li></ul>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><h2 id=\"AK0O6\">背景</h2><p><br /></p><p>我们都知道 setTimeout 和 Promise 并不在一个异步队列中，前者属于宏任务（ <code>MacroTask</code> ），而后者属于微任务（ <code>MicroTask</code> ）。</p><p><br /></p><p>很多地方在介绍宏任务和微任务的差异时，往往用一个类似于 <code>++i++++</code>  一样的题目让大家猜测不同任务的执行先后。这么做虽然可以精确的理解宏任务和微任务的执行时序，但却让人对于它们之间真正的差异摸不着头脑。</p><p><br /></p><p>更重要的是，我们完全不应该依赖这个微小的时序差异进行开发（正如同在 c++ 中不应该依赖未定义行为一样）。虽然宏任务和微任务的定义是存在于标准中的，但是不同的运行环境并不一定能够精准的遵循标准，而且某些场景下的 <code>Promise</code> 是各种千奇百怪的 polyfill。</p><p><br /></p><p><strong>总之，本文不关注执行时序上的差异，只关注性能。</strong></p><p><strong><br /></strong></p><h2 id=\"R7Jsf\">异步</h2><p><br /></p><p>无论是宏任务还是微任务，首先都是异步任务。在 JavaScript 中的异步是靠事件循环来实现的，拿大家最常见的 setTimeout 为例。</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20%E5%90%8C%E6%AD%A5%E4%BB%A3%E7%A0%81%5Cnlet%20count%20%3D%201%3B%5Cn%5CnsetTimeout(()%20%3D%3E%20%7B%5Cn%5Ct%2F%2F%20%E5%BC%82%E6%AD%A5%5Cn%20%20count%20%3D%202%3B%5Cn%7D%2C%200)%3B%5Cn%5Cn%2F%2F%20%E5%90%8C%E6%AD%A5%5Cncount%20%3D%203%3B%22%2C%22id%22%3A%22bTQtY%22%7D\"></card><p><br /></p><p>一个异步任务会被丢到事件循环的队列中，而这部分代码会在接下来同步执行的代码后面才执行（这个时序总是可靠的）。每次事件循环中，浏览器会执行队列中的任务，然后进入下一个事件循环。</p><p><br /></p><blockquote style=\"padding-left: 1em;\"><p>当浏览器需要做一些渲染工作时，会等待这一帧的渲染工作完成，再进入下一个事件循环</p></blockquote><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F236311%2F1577197618038-db7d48f3-aaa0-454c-b75d-976ee1deca9f.png%22%2C%22originWidth%22%3A1788%2C%22originHeight%22%3A912%2C%22name%22%3A%22image.png%22%2C%22size%22%3A336135%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A596%2C%22height%22%3A304%7D\"></card></p><p><br /></p><p>那么，为什么已经有了这么一个机制，为什么又要有所谓的微任务呢，难道只是为了让大家猜测不同异步任务的执行时序么？</p><p><br /></p><p>我们来看一个 <code>async function</code> 的例子</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20asyncTick%20%3D%20()%20%3D%3E%20Promise.resolve()%3B%5Cn%5Cn(async%20function()%7B%5Cn%5Ctfor%20(let%20i%20%3D%200%3B%20i%20%3C%2010%3B%20i%2B%2B)%20%7B%5Cn%20%20%5Ctawait%20asyncTick()%3B%5Cn%20%20%7D%5Cn%7D)()%22%2C%22id%22%3A%220lVzI%22%7D\"></card><p><br /></p><p>我们看到这里明明其实没有异步等待的任务，但是如果 <code>Promise.resolve</code> 每次都和 <code>setTimeout</code> 一样往异步队列里丢一个任务然后等待一个事件循环来执行。看起来似乎没有什么大的问题，因为『事件循环』和一个 <code>for</code> 循环听起来似乎并没有什么本质上的不同。</p><p><br /></p><p><strong>然后在事实上，一次事件循环的耗时是远远超出一次 for 循环的。</strong></p><p><strong><br /></strong></p><p>我们都知道 <code>setTimeout(fn, 0)</code> 并非真的是立即执行，而是要等待至少 <code>4ms</code> （事实上可能是 10ms）才会执行。</p><p><br /></p><blockquote style=\"padding-left: 1em;\"><p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Minimum_delay_and_timeout_nesting\" target=\"_blank\">MDN 相关文档</a></p><p><br /></p><p><span class=\"lake-fontsize-12\" style=\"color: #333333;\">In modern browsers, </span><code>setTimeout()</code><span class=\"lake-fontsize-12\" style=\"color: #333333;\">/</span><code>setInterval()</code><span class=\"lake-fontsize-12\" style=\"color: #333333;\"> calls are throttled to a minimum of once every 4 ms when successive calls are triggered due to callback nesting (where the nesting level is at least a certain depth), or after certain number of successive intervals.</span></p><p><span class=\"lake-fontsize-12\" style=\"color: #333333;\"><br /></span><strong>Note</strong><span class=\"lake-fontsize-12\" style=\"color: #333333; background-color: #FFF3D4;\">: 4 ms is </span><a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#timers\" target=\"_blank\">specified by the HTML5 spec</a><span class=\"lake-fontsize-12\" style=\"color: #333333; background-color: #FFF3D4;\"> and is consistent across browsers released in 2010 and onward. Prior to (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2), the minimum timeout value for nested timeouts was 10 ms.</span></p></blockquote><p><br /></p><p>这意味着如果我们仍然采用这种方式去执行 <span style=\"background-color: rgba(0, 0, 0, 0.06);\">async function（实际上就是 Promise)</span> ，性能会非常的糟糕。</p><p><br /></p><p>而且对于正在执行一些复杂任务的页面（例如绘制）就更加糟糕了，整个循环都会被这个任务直接阻塞。</p><p><br /></p><p>微任务就是为了适应这种场景，<strong>和宏任务最大的不同在于，如果在执行微任务的过程中我们往任务队列中新增了任务，浏览器会全部消费掉为止，再进入下一个循环</strong>。这也是为什么微任务和宏任务的时序上会存在差别。</p><p><br /></p><p>看一个例子：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20setTimeout%20%E7%89%88%E6%9C%AC%5Cnfunction%20test()%7B%5Cn%20%20%20console.log('test')%3B%5Cn%20%20%20setTimeout(test)%3B%5Cn%7D%5Cntest()%3B%5Cn%5Cn%2F%2F%20Promise.resolve%20%E7%89%88%E6%9C%AC%5Cn%2F%2F%20%E8%BF%99%E4%BC%9A%E5%8D%A1%E4%BD%8F%E4%BD%A0%E7%9A%84%E6%A0%87%E7%AD%BE%E9%A1%B5%5Cnfunction%20test()%7B%5Cn%20%20%20console.log('test')%3B%5Cn%20%20%20Promise.resolve().then(test)%3B%5Cn%7D%5Cntest()%3B%5Cn%5Cn%2F%2F%20%E5%90%8C%E6%AD%A5%E7%89%88%E6%9C%AC%5Cn%2F%2F%20%E8%BF%99%E4%BC%9A%E5%8D%A1%E4%BD%8F%E4%BD%A0%E7%9A%84%E6%A0%87%E7%AD%BE%E9%A1%B5%5Cnfunction%20test()%7B%5Cn%20%20%20console.log('test')%3B%5Cn%20%20%20test()%3B%5Cn%7D%5Cntest()%3B%22%2C%22id%22%3A%220bQ6j%22%7D\"></card><p><br /></p><p>你会发现 <code>setTimeout</code> 版本的页面仍然能够操作，而控制台上 <code>test</code> 的输出次数在不断增加。</p><p><br /></p><p>而 <code>Promise.resolve</code> 和直接递归的表现是一样的（其实有一些区别， <code>Promise.resolve</code> 仍然是异步执行的），标签页被卡住，Chrome Devtools 上的输出次数隔一段时间蹦一下。</p><p><br /></p><blockquote style=\"padding-left: 1em;\"><p>不得不说 Chrome 的 Devtools 优化的确实不错，其实这里已经是死循环的状态了，JS 线程被完全阻塞</p></blockquote><p><br /></p><h3 id=\"DWWPv\">Promise 的性能</h3><p><br /></p><p>了解宏任务和微任务的差异有助于我们理解 Promise 的性能。</p><p><br /></p><p>我们在实际生产中常常发现某些环境下的 Promise 的性能表现非常不如意，有些是不同容器的实现，另一些则是不同版本的 polyfill 实现。尤其是一些开发者会更倾向于体积更小的 <code>polyfill</code> ，例如这个有 <code>1.3k Star</code> 的实现</p><p><br /></p><p><a href=\"https://github.com/taylorhakes/promise-polyfill\" target=\"_blank\">https://github.com/taylorhakes/promise-polyfill</a></p><p><br /></p><p>默认就是使用 <code>setTimout</code> 模拟的 <code>Promise.resolve</code> ，我们在 <a href=\"https://jsperf.com/promise-performance-with-timers\" target=\"_blank\">https://jsperf.com/promise-performance-with-timers</a> 可以看到性能的对比已经有了数量级的差距（事实上比较复杂的异步任务会感觉到明显的延迟）。</p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F236311%2F1577197618078-d26207a8-f401-4bcc-8049-5859303cf138.png%22%2C%22originWidth%22%3A1950%2C%22originHeight%22%3A1218%2C%22name%22%3A%22image.png%22%2C%22size%22%3A202161%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A650%2C%22height%22%3A406%7D\"></card></p><p><br /></p><p><br /></p><h3 id=\"czISa\">如何正确的模拟 Promise.resolve</h3><p><br /></p><p>除了 <code>Promise</code> 是微任务外，还有很多 API 也是通过微任务设定的异步任务，其实如果有了解过 <code>Vue</code> 源码的同学就会注意到 <code>Vue</code> 的 <code>$nextTick</code> 源码中，在没有 <code>Promise.resolve</code> 时就是用 <code>MutationObserver</code> 模拟的。</p><p><br /></p><p>看一个简化的的 <code>Vue.$nextTick</code> ：</p><p><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20timerFunc%20%3D%20(cb)%20%3D%3E%20%7B%5Cn%20%20%20%20let%20counter%20%3D%201%5Cn%20%20%20%20const%20observer%20%3D%20new%20MutationObserver(cb)%3B%5Cn%20%20%20%20const%20textNode%20%3D%20document.createTextNode(String(counter))%5Cn%20%20%20%20observer.observe(textNode%2C%20%7B%5Cn%20%20%20%20%20%20characterData%3A%20true%5Cn%20%20%20%20%7D)%5Cn%20%20%20%20counter%20%3D%20(counter%20%2B%201)%20%25%202%5Cn%20%20%20%20textNode.data%20%3D%20String(counter)%5Cn%7D%22%2C%22id%22%3A%22KFmnw%22%7D\"></card><p><br /></p><p>原理其实非常简单，手动构造一个 <code>MutationObserver</code> 然后触发 DOM 元素的改变，从而触发异步任务。</p><p><br /></p><p>使用这种方式就明显把数量级拉了回来</p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F236311%2F1577197618165-bce37f3c-a859-4312-8e3f-7f717c0757dd.png%22%2C%22originWidth%22%3A1952%2C%22originHeight%22%3A1076%2C%22name%22%3A%22image.png%22%2C%22size%22%3A173379%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A650.6666666666666%2C%22height%22%3A359%7D\"></card></p><p><br /></p><p><br /></p><blockquote style=\"padding-left: 1em;\"><p>由于这个 Promise 本身实现偏向于体积的缘故，这里的 benchmark 性能仍有数倍差距，但其实 <code>bluebird</code> 等注重性能的实现方式在 <code>timer</code> 函数用 <code>MutationObserver</code> 构造的情况下性能和原生不相上下，某些版本的浏览器下甚至更快</p><p><br /></p><p><strong><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F236311%2F1577197618171-ffb74451-d0c7-417c-8655-8ef5ae500449.png%22%2C%22originWidth%22%3A1264%2C%22originHeight%22%3A908%2C%22name%22%3A%22image.png%22%2C%22size%22%3A58867%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22width%22%3A421.3333333333333%2C%22height%22%3A303%7D\"></card></strong></p></blockquote><p><br /></p><p><br /></p><p>当然实际上 Vue 中的 <code>NextTick</code> 实现要更细致一些，例如通过复用 <code>MutationObserver</code> 的方式避免多次创建等。<strong>不过能够让 Promise 实现在性能上拉开百倍差距的就只有宏任务和微任务之间的差异。</strong></p><p><strong><br /></strong></p><blockquote style=\"padding-left: 1em;\"><p>除 <code>MutationObserver</code> 外还有很多其他的 API 使用的也是微任务，但从兼容性和性能角度 <code>MutationObserver</code> 仍然是使用最广泛的。</p></blockquote><p><br /></p><h3 id=\"uADje\">总结</h3><p><br /></p><p>宏任务和微任务在机制上的差异会导致不同的 <code>Promise</code> 实现产生巨大的性能差异，大到足以直接影响用户的直接体感。所以我们还是要避免暴力引入 <code>Promise polyfill</code> 的方式，在现代浏览器上优先使用 <code>Native Promise</code> ，而在需要 polyfill 的地方则需要避免性能出现破坏性下滑的情况。</p><p><br /></p><p>另外，哪条 <code>console.log</code> 先执行看懂了就好了，真的不是问题的关键，因为你永远不应该依赖宏任务和微任务的时序差异来编程。</p><p><br /></p><h2 id=\"71Z7C\">拓展阅读</h2><p><br /></p><ul><li>[视频]<a href=\"https://vimeo.com/254947206\" target=\"_blank\"> Jake Archibald's talk The Event Loop</a></li><li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Minimum_delay_and_timeout_nesting\" target=\"_blank\">https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Minimum_delay_and_timeout_nesting</a></li><li><a href=\"https://github.com/taylorhakes/promise-polyfill\" target=\"_blank\">https://github.com/taylorhakes/promise-polyfill</a></li><li><a href=\"https://jsperf.com/promise-vs-bluebird\" target=\"_blank\">https://jsperf.com/promise-vs-bluebird</a></li></ul>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2019-12-24T16:20:44.000Z",
    "deleted_at": null,
    "created_at": "2019-12-24T14:26:54.000Z",
    "updated_at": "2019-12-24T16:20:44.000Z",
    "published_at": "2019-12-24T16:20:44.000Z",
    "first_published_at": "2019-12-24T14:27:21.000Z",
    "word_count": 1981,
    "cover": "",
    "description": "背景我们都知道 setTimeout 和 Promise 并不在一个异步队列中，前者属于宏任务（ MacroTask ），而后者属于微任务（ MicroTask ）。很多地方在介绍宏任务和微任务的差异时，往往用一个类似于 ++i++++  一样的题目让大家猜测不同任务的执行先后。这么做虽然可以...",
    "custom_description": "背景我们都知道 setTimeout 和 Promise 并不在一个异步队列中，前者属于宏任务（MacroTask），而后者属于微任务（MicroTask）。很多文章在介绍宏任务和微任务的差异时，往往用一个类似于 ++i++++  一样的题目让大家猜测不同任务的执行先后。这么做虽然可以精确的理...",
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 6263924,
    "slug": "build-open-source-electron-travis-ci",
    "title": "使用 Travis CI 自动构建开源 Electron 项目",
    "book_id": 653495,
    "book": {
      "id": 653495,
      "type": "Column",
      "slug": "blog",
      "name": "blog",
      "user_id": 236311,
      "description": "",
      "creator_id": 236311,
      "public": 0,
      "items_count": 8,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2020-04-19T13:54:06.349Z",
      "updated_at": "2020-04-19T13:54:06.000Z",
      "created_at": "2019-12-24T14:26:42.000Z",
      "namespace": "xcodebuild/blog",
      "user": {
        "id": 236311,
        "type": "User",
        "login": "xcodebuild",
        "name": "xcodebuIld",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/236311/1546508350871-89a1db68-50d3-4776-9b7b-97ba81a8dfbe.png",
        "books_count": 6,
        "public_books_count": 1,
        "followers_count": 2,
        "following_count": 0,
        "created_at": "2019-01-03T03:16:21.000Z",
        "updated_at": "2020-03-23T08:18:51.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 236311,
    "creator": {
      "id": 236311,
      "type": "User",
      "login": "xcodebuild",
      "name": "xcodebuIld",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/236311/1546508350871-89a1db68-50d3-4776-9b7b-97ba81a8dfbe.png",
      "books_count": 6,
      "public_books_count": 1,
      "followers_count": 2,
      "following_count": 0,
      "created_at": "2019-01-03T03:16:21.000Z",
      "updated_at": "2020-03-23T08:18:51.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"NAaaf\"></a>\n## 背景\n[LightProxy](https://github.com/alibaba/lightproxy) 是基于 Electron 开发的桌面代理软件，托管在 Github 上。我们开启了 Github 的强制 Review 功能，所有提交都需要通过 Pull Reuqest 的方式由一个 Reviewer 通过才能合并进主分支。<br />\n<br />然而虽然有这样的流程，但 Review 一个 PR 的成本仍然非常的高，对于 Reviewer 来说总是把分支 `pull` 下来走完完整的 `Electron` 构建流程再手动测试非常麻烦（尤其如果手头上的机器配置比较一般的情况下）。这导致很多 PR 我们只是简单 Review 代码后就把有问题的代码合并了。<br />\n<br />我们希望通过自动集成服务给 LightProxy 的每个 PR 都提供自动化的构建、单元测试，甚至自动把构建结果贴到 PR 中提供测试者直接下载测试。<br />\n<br />最后的效果大概为当用户提交 PR 后，会自动出发构建，得知测试结果是否通过。同时机器人会自动把构建结果上传到临时空间，并且通过评论的方式提供给开发者下载测试。例如下图：\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1587302177272-d414cfa6-21a9-4c66-a5b5-1cd027b137af.png#align=left&display=inline&height=400&margin=%5Bobject%20Object%5D&name=image.png&originHeight=800&originWidth=1510&size=129412&status=done&style=none&width=755)\n<a name=\"qHwFk\"></a>\n## Travis CI\n[Travis CI](https://travis-ci.org/) 提供的是免费的自动集成服务，当我们在一个 PR 上提交了新的代码后，持续集成服务就会自动抓取代码，运行构建和自动化测试并且反馈结果。<br />\n<br />这样我们每次改动代码后，就能看到运行结果是否受到影响，而不是一次性攒了很多代码后尝试合并靠手工测试。<br />\n<br />网上介绍 `Travis CI` 以及如何搭配 `Github` 使用的文章有很多，可以参考：[持续集成服务 Travis CI 教程](http://www.ruanyifeng.com/blog/2017/12/travis_ci_tutorial.html)\n<a name=\"dHi6L\"></a>\n### .travis.yml\nTravis 通过 `.travis.yml` 文件进行配置，对于 LightProxy 这个项目来说主要就两点要求：<br />\n\n- Node.js 版本 > 12\n- 系统使用 macOS（因为需要构建 Mac App 必须是 macOS）\n\n\n\n```yaml\nosx_image: xcode11.3\n\ndist: trusty\nsudo: false\n\nlanguage: node_js\nnode_js: \"12\"\n\nenv:\n  global:\n    - ELECTRON_CACHE=$HOME/.cache/electron\n    - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder\n\nos:\n  - osx\n\ncache:\n  directories:\n  - node_modules\n  - $HOME/.cache/electron\n  - $HOME/.cache/electron-builder\n  - $HOME/.npm/_prebuilds\n\nscript:\n  - npm install -g yarn\n  - npm run install-deps\n  - npm run dist\n```\n这样构建部分就已经完成了，在 `Travis` 中打开 PR 的构建，用户就会在提交 PR 后看到自己的提交是否能通过构建。如果项目有单元测试的话，可以在 `scripts` 下继续增加 `npm run test` 等等。\n<a name=\"x4DKO\"></a>\n### 文件上传\n构建项目以及反馈结果不困难，比较麻烦的是如何把构建后的结果上传。由于这里是临时的构建版本，不是正式 `release` ，这里没有用 `github release`  API，而是用的 [https://sourceforge.net/](https://sourceforge.net/) 提供的免费文件托管服务。<br />\n<br />SourceForge 支持通过 `scp` 上传文件，首先我们需要生成一个 `ssh key` 。\n```shell\nssh-keygen -t rsa -b 4096 -C \"your_email\" -f ci_deploy_key -N ''\n```\n然后在 [https://sourceforge.net/auth/shell_services](https://sourceforge.net/auth/shell_services) 添加公钥 `ci_deploy_key.pub` 的内容。<br />\n<br />我们需要从环境变量中判断当前是否在构建一个 PR（还有可能在构建一个分支），大部分的默认环境变量可以在这里找到：[https://docs.travis-ci.com/user/environment-variables/](https://docs.travis-ci.com/user/environment-variables/)。同样的，Travis 允许我们在后台设置一些环境变量，我们也可以通过这种方式把 SSH 的私钥（`ci_deploy_key`）传递过去。<br />\n<br />由于 `ci_deploy_key` 的内容是多行的，我们可以先用 `encodeURIComponent` 将其进行编码。然后在构件时通过脚本解码。\n```javascript\nconst {\n    TRAVIS_PULL_REQUEST,\n    TRAVIS_COMMIT,\n    SSH_KEY,\n    HOME,\n} = process.env;\nconst SSH_KEY_DECODE = decodeURIComponent(SSH_KEY);\n\n// 判断是否在构建 PR\n// 指定 ssh key\nfs.writeFileSync(sshFile, sshKeyContent, 'utf-8');\n\nshell.exec('chmod  400 ~/.ssh/id_rsa');\n// scp 上传不同平台的安装包\n```\n代码可以参考 [https://github.com/alibaba/lightproxy/blob/develop/scripts/ci-release.js](https://github.com/alibaba/lightproxy/blob/develop/scripts/ci-release.js)\n<a name=\"FL9uI\"></a>\n### 自动回复\n完成了构建的上传后，我们可以用一个 `Github` 机器人自动在 PR 中回复构建后文件的 URL。<br />\n<br />Github 机器人其实就是一个单独申请的普通 Github 账号，我们可以在设置页获取到有 `repo` 操作的 `token` 。然后通过 Github API 评论 PR。\n```shell\ncurl -s -H \"Authorization: token 你的Token\" -X POST -d '{\"body\": \"评论内容\"}' \"https://api.github.com/repos/alibaba/lightproxy/issues/${TRAVIS_PULL_REQUEST}/comments\"\n```\n这里的 `Token` 可以用和上面同样的方式获取。\n<a name=\"AvaTY\"></a>\n### 其他测试构建逻辑\n由于测试包一般是提供给开发者进行临时测试的，可能会有一些和平时不同的逻辑。我们可以在构建脚本中自动修改版本信息，甚至修改应用名（防止测试包覆盖原有配置）等。<br />\n<br />LightProxy 同时也在测试包中关闭了自动更新逻辑，方便测试者只测试指定 PR 的内容。\n<a name=\"k1xCS\"></a>\n## 总结\n借助于 Travis CI 的能力我们还能做更多的事情，例如在有 `release tag` 时自动合并到 `release` 分支，构建并且发布到 `release` 等等。目前考虑到下载速度的原因 `LightProxy` 还没有这样做。<br />\n<br />最后，欢迎来给 [https://github.com/alibaba/lightproxy](https://github.com/alibaba/lightproxy) 提交 PR/Issue，或者直接在 PR 下面测试相关的改进、Fix 等~\n<a name=\"l6vBo\"></a>\n## 拓展阅读\n\n- [https://github.com/alibaba/lightproxy](https://github.com/alibaba/lightproxy)\n- [LightProxy 全能代理抓包工具](https://www.xcodebuild.com/2020/01/05/yuque/lightproxy/)\n- [持续集成服务 Travis CI 教程](http://www.ruanyifeng.com/blog/2017/12/travis_ci_tutorial.html)\n- [Travis CI - Environment Variables](https://docs.travis-ci.com/user/environment-variables/)\n",
    "body_draft": "<a name=\"NAaaf\"></a>\n## 背景\n[LightProxy](https://github.com/alibaba/lightproxy) 是基于 Electron 开发的桌面代理软件，托管在 Github 上。我们开启了 Github 的强制 Review 功能，所有提交都需要通过 Pull Reuqest 的方式由一个 Reviewer 通过才能合并进主分支。<br />\n<br />然而虽然有这样的流程，但 Review 一个 PR 的成本仍然非常的高，对于 Reviewer 来说总是把分支 `pull` 下来走完完整的 `Electron` 构建流程再手动测试非常麻烦（尤其如果手头上的机器配置比较一般的情况下）。这导致很多 PR 我们只是简单 Review 代码后就把有问题的代码合并了。<br />\n<br />我们希望通过自动集成服务给 LightProxy 的每个 PR 都提供自动化的构建、单元测试，甚至自动把构建结果贴到 PR 中提供测试者直接下载测试。<br />\n<br />最后的效果大概为当用户提交 PR 后，会自动出发构建，得知测试结果是否通过。同时机器人会自动把构建结果上传到临时空间，并且通过评论的方式提供给开发者下载测试。例如下图：\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/236311/1587302177272-d414cfa6-21a9-4c66-a5b5-1cd027b137af.png#align=left&display=inline&height=400&margin=%5Bobject%20Object%5D&name=image.png&originHeight=800&originWidth=1510&size=129412&status=done&style=none&width=755)\n<a name=\"qHwFk\"></a>\n## Travis CI\n[Travis CI](https://travis-ci.org/) 提供的是免费的自动集成服务，当我们在一个 PR 上提交了新的代码后，持续集成服务就会自动抓取代码，运行构建和自动化测试并且反馈结果。<br />\n<br />这样我们每次改动代码后，就能看到运行结果是否受到影响，而不是一次性攒了很多代码后尝试合并靠手工测试。<br />\n<br />网上介绍 `Travis CI` 以及如何搭配 `Github` 使用的文章有很多，可以参考：[持续集成服务 Travis CI 教程](http://www.ruanyifeng.com/blog/2017/12/travis_ci_tutorial.html)\n<a name=\"dHi6L\"></a>\n### .travis.yml\nTravis 通过 `.travis.yml` 文件进行配置，对于 LightProxy 这个项目来说主要就两点要求：<br />\n\n- Node.js 版本 > 12\n- 系统使用 macOS（因为需要构建 Mac App 必须是 macOS）\n\n\n\n```yaml\nosx_image: xcode11.3\n\ndist: trusty\nsudo: false\n\nlanguage: node_js\nnode_js: \"12\"\n\nenv:\n  global:\n    - ELECTRON_CACHE=$HOME/.cache/electron\n    - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder\n\nos:\n  - osx\n\ncache:\n  directories:\n  - node_modules\n  - $HOME/.cache/electron\n  - $HOME/.cache/electron-builder\n  - $HOME/.npm/_prebuilds\n\nscript:\n  - npm install -g yarn\n  - npm run install-deps\n  - npm run dist\n```\n这样构建部分就已经完成了，在 `Travis` 中打开 PR 的构建，用户就会在提交 PR 后看到自己的提交是否能通过构建。如果项目有单元测试的话，可以在 `scripts` 下继续增加 `npm run test` 等等。\n<a name=\"x4DKO\"></a>\n### 文件上传\n构建项目以及反馈结果不困难，比较麻烦的是如何把构建后的结果上传。由于这里是临时的构建版本，不是正式 `release` ，这里没有用 `github release`  API，而是用的 [https://sourceforge.net/](https://sourceforge.net/) 提供的免费文件托管服务。<br />\n<br />SourceForge 支持通过 `scp` 上传文件，首先我们需要生成一个 `ssh key` 。\n```shell\nssh-keygen -t rsa -b 4096 -C \"your_email\" -f ci_deploy_key -N ''\n```\n然后在 [https://sourceforge.net/auth/shell_services](https://sourceforge.net/auth/shell_services) 添加公钥 `ci_deploy_key.pub` 的内容。<br />\n<br />我们需要从环境变量中判断当前是否在构建一个 PR（还有可能在构建一个分支），大部分的默认环境变量可以在这里找到：[https://docs.travis-ci.com/user/environment-variables/](https://docs.travis-ci.com/user/environment-variables/)。同样的，Travis 允许我们在后台设置一些环境变量，我们也可以通过这种方式把 SSH 的私钥（`ci_deploy_key`）传递过去。<br />\n<br />由于 `ci_deploy_key` 的内容是多行的，我们可以先用 `encodeURIComponent` 将其进行编码。然后在构件时通过脚本解码。\n```javascript\nconst {\n    TRAVIS_PULL_REQUEST,\n    TRAVIS_COMMIT,\n    SSH_KEY,\n    HOME,\n} = process.env;\nconst SSH_KEY_DECODE = decodeURIComponent(SSH_KEY);\n\n// 判断是否在构建 PR\n// 指定 ssh key\nfs.writeFileSync(sshFile, sshKeyContent, 'utf-8');\n\nshell.exec('chmod  400 ~/.ssh/id_rsa');\n// scp 上传不同平台的安装包\n```\n代码可以参考 [https://github.com/alibaba/lightproxy/blob/develop/scripts/ci-release.js](https://github.com/alibaba/lightproxy/blob/develop/scripts/ci-release.js)\n<a name=\"FL9uI\"></a>\n### 自动回复\n完成了构建的上传后，我们可以用一个 `Github` 机器人自动在 PR 中回复构建后文件的 URL。<br />\n<br />Github 机器人其实就是一个单独申请的普通 Github 账号，我们可以在设置页获取到有 `repo` 操作的 `token` 。然后通过 Github API 评论 PR。\n```shell\ncurl -s -H \"Authorization: token 你的Token\" -X POST -d '{\"body\": \"评论内容\"}' \"https://api.github.com/repos/alibaba/lightproxy/issues/${TRAVIS_PULL_REQUEST}/comments\"\n```\n这里的 `Token` 可以用和上面同样的方式获取。\n<a name=\"AvaTY\"></a>\n### 其他测试构建逻辑\n由于测试包一般是提供给开发者进行临时测试的，可能会有一些和平时不同的逻辑。我们可以在构建脚本中自动修改版本信息，甚至修改应用名（防止测试包覆盖原有配置）等。<br />\n<br />LightProxy 同时也在测试包中关闭了自动更新逻辑，方便测试者只测试指定 PR 的内容。\n<a name=\"k1xCS\"></a>\n## 总结\n借助于 Travis CI 的能力我们还能做更多的事情，例如在有 `release tag` 时自动合并到 `release` 分支，构建并且发布到 `release` 等等。目前考虑到下载速度的原因 `LightProxy` 还没有这样做。<br />\n<br />最后，欢迎来给 [https://github.com/alibaba/lightproxy](https://github.com/alibaba/lightproxy) 提交 PR/Issue，或者直接在 PR 下面测试相关的改进、Fix 等~\n<a name=\"l6vBo\"></a>\n## 拓展阅读\n\n- [https://github.com/alibaba/lightproxy](https://github.com/alibaba/lightproxy)\n- [LightProxy 全能代理抓包工具](https://www.xcodebuild.com/2020/01/05/yuque/lightproxy/)\n- [持续集成服务 Travis CI 教程](http://www.ruanyifeng.com/blog/2017/12/travis_ci_tutorial.html)\n- [Travis CI - Environment Variables](https://docs.travis-ci.com/user/environment-variables/)\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\"><h2 data-lake-id=\"c4540a56d9ac19a4e7fbfe5d28f74b50\" id=\"NAaaf\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">背景</h2><p data-lake-id=\"5585cbb587a1a0601e7a019873bb11ef\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"https://github.com/alibaba/lightproxy\" target=\"_blank\">LightProxy</a>&nbsp;是基于 Electron 开发的桌面代理软件，托管在 Github 上。我们开启了 Github 的强制 Review 功能，所有提交都需要通过 Pull Reuqest 的方式由一个 Reviewer 通过才能合并进主分支。</p><p data-lake-id=\"3cd23086904b3e3657779efda963a761\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"61ab45d47396ae55767fa2b98d6f4a83\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">然而虽然有这样的流程，但 Review 一个 PR 的成本仍然非常的高，对于 Reviewer 来说总是把分支 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">pull</code>&nbsp;下来走完完整的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Electron</code>&nbsp;构建流程再手动测试非常麻烦（尤其如果手头上的机器配置比较一般的情况下）。这导致很多 PR 我们只是简单 Review 代码后就把有问题的代码合并了。</p><p data-lake-id=\"54abe954e399c8d29753b0b7ae6a639d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"a7437c0c58ad8e619d1182826eaea060\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们希望通过自动集成服务给 LightProxy 的每个 PR 都提供自动化的构建、单元测试，甚至自动把构建结果贴到 PR 中提供测试者直接下载测试。</p><p data-lake-id=\"58cf4cfe74cba19a854044e181c37153\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"2835ccae36a80b6ed41634c3f89cf084\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">最后的效果大概为<span>当用户提交 PR 后，会自动出发构建，得知测试结果是否通过。同时机器人会自动把构建结果上传到临时空间，并且通过评论的方式提供给开发者下载测试。例如下图：</span></p><p class=\"\" data-lake-id=\"411affb8409f62d2c22280d176e6e9a2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span><br></span></p><p data-lake-id=\"a23786653ef7d522db4d477d1cdaa843\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" class=\"lake-card-margin-top lake-card-margin-bottom\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1587302177272-d414cfa6-21a9-4c66-a5b5-1cd027b137af.png?x-oss-process=image/resize,w_1500\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/236311/1587302177272-d414cfa6-21a9-4c66-a5b5-1cd027b137af.png\" class=\"image lake-drag-image\" alt=\"image.png\" title=\"image.png\" style=\"visibility: visible; border: none; box-shadow: none; width: 746px; height: 395px;\"></span></p><h2 data-lake-id=\"11f2be849c0598b9edf0545262e3d784\" id=\"qHwFk\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Travis CI</h2><p data-lake-id=\"814920c9f9a9ed2bcb55731e67a72d30\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><a href=\"https://travis-ci.org/\" target=\"_blank\">Travis CI</a>&nbsp;提供的是免费的自动集成服务，当我们在一个 PR 上提交了新的代码后，持续集成服务就会自动抓取代码，运行构建和自动化测试并且反馈结果。</p><p data-lake-id=\"6f82ba42e4e6c52f4f39e1d94a1c43f6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d8fcbfe21c5f516f3d8cfd99a3046a7e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这样我们每次改动代码后，就能看到运行结果是否受到影响，而不是一次性攒了很多代码后尝试合并靠手工测试。</p><p data-lake-id=\"ecd840e56baf8d8fe3afc35d07c7a004\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"0c2af80e93c9f5058d921242591c7e45\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">网上介绍 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Travis CI</code>&nbsp;以及如何搭配 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Github</code>&nbsp;使用的文章有很多，可以参考：<a href=\"http://www.ruanyifeng.com/blog/2017/12/travis_ci_tutorial.html\" target=\"_blank\">持续集成服务 Travis CI 教程</a></p><h3 data-lake-id=\"982c6088bd1e63dee76ceb4fce6e071a\" id=\"dHi6L\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">.travis.yml</h3><p data-lake-id=\"47f0510a14a97195758f89fe4b56a0db\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">Travis 通过 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">.travis.yml</code>&nbsp;文件进行配置，对于 LightProxy 这个项目来说主要就两点要求：</p><p data-lake-id=\"8d66e9d881c83eb3ce251931f7b13c8d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><ul data-lake-id=\"ba222ee1dd213a34ae11aa2c765eba7a\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"c5abe1475567097b61bf8ce325efa5bc\">Node.js 版本 &gt; 12</li><li data-lake-id=\"0e7a3d77633488ccc5799524af54e37f\">系统使用 macOS（因为需要构建 Mac App 必须是 macOS）</li></ul><p data-lake-id=\"1c2fe43bae66cd2c1e6848b002e0dccf\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"OhtWi\" class=\"lake-card-margin\" data-language=\"yaml\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">osx_image</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">: </span>xcode11.3\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">dist</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">: </span>trusty\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">sudo</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">: </span><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">false</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">language</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">: </span>node_js\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">node_js</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">: </span><span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"12\"</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">env</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">:</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  global</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">:</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    - </span>ELECTRON_CACHE=$HOME/.cache/electron\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    - </span>ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">os</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">:</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  - </span>osx\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">cache</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">:</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  directories</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">:</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  - </span>node_modules\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  - </span>$HOME/.cache/electron\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  - </span>$HOME/.cache/electron-builder\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  - </span>$HOME/.npm/_prebuilds\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-atom\" style=\"color: rgb(153, 0, 85); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">script</span><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">:</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  - </span>npm install -g yarn\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  - </span>npm run install-deps\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-meta\" style=\"color: rgb(31, 127, 154); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  - </span>npm run dist</span></span></pre></div></div></div><p data-lake-id=\"a9f93ad3e3574b06c827c1dffce507bc\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这样构建部分就已经完成了，在 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Travis</code>&nbsp;中打开 PR 的构建，用户就会在提交 PR 后看到自己的提交是否能通过构建。如果项目有单元测试的话，可以在 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">scripts</code>&nbsp;下继续增加 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">npm run test</code>&nbsp;等等。</p><h3 data-lake-id=\"63254995d6012035996437f030cfafd5\" id=\"x4DKO\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">文件上传</h3><p data-lake-id=\"fb1d2082f99d632245cc8a4d483ee8a7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">构建项目以及反馈结果不困难，比较麻烦的是如何把构建后的结果上传。由于这里是临时的构建版本，不是正式 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">release</code>&nbsp;，这里没有用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">github release</code>&nbsp; API，而是用的&nbsp;<a href=\"https://sourceforge.net/\" target=\"_blank\">https://sourceforge.net/</a>&nbsp;提供的免费文件托管服务。</p><p data-lake-id=\"c31641c76b127f8c5debe1e2e708aa2d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d9fd26a66663eeab647c7108341a2b32\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">SourceForge 支持通过 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">scp</code>&nbsp;上传文件，首先我们需要生成一个 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">ssh key</code>&nbsp;。</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"jbiX9\" class=\"lake-card-margin\" data-language=\"shell\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">ssh-keygen <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-t</span> rsa <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-b</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">4096</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-C</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"your_email\"</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-f</span> ci_deploy_key <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-N</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">''</span></span></span></pre></div></div></div><p data-lake-id=\"5ff56febded13a7b8583ee2df0a33edf\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">然后在&nbsp;<a href=\"https://sourceforge.net/auth/shell_services\" target=\"_blank\">https://sourceforge.net/auth/shell_services</a> 添加公钥 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">ci_deploy_key.pub</code>&nbsp;的内容。</p><p data-lake-id=\"c24456a1d316d0c61bbb50a49016eadf\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"3151ef4d601835ae3e8a525d70f3ae1f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">我们需要从环境变量中判断当前是否在构建一个 PR（还有可能在构建一个分支），大部分的默认环境变量可以在这里找到：<a href=\"https://docs.travis-ci.com/user/environment-variables/\" target=\"_blank\">https://docs.travis-ci.com/user/environment-variables/</a>。同样的，Travis 允许我们在后台设置一些环境变量，我们也可以通过这种方式把 SSH 的私钥（<code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"><span>ci_deploy_key</span></code>）传递过去。</p><p data-lake-id=\"f149f6ea60eab7a62df19d4d77254ba1\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"aa206be75dafdc4ab2c78974920fed37\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">由于 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">ci_deploy_key</code>&nbsp;的内容是多行的，我们可以先用 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">encodeURIComponent</code>&nbsp;将其进行编码。然后在构件时通过脚本解码。</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"TLgpO\" class=\"lake-card-margin\" data-language=\"javascript\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> {\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">TRAVIS_PULL_REQUEST</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">TRAVIS_COMMIT</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">SSH_KEY</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">HOME</span>,\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">} <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">process</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">env</span>;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">const</span> <span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">SSH_KEY_DECODE</span> <span class=\"cm-operator\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">=</span> <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">decodeURIComponent</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">SSH_KEY</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 判断是否在构建 PR</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// 指定 ssh key</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fs</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">writeFileSync</span>(<span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">sshFile</span>, <span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">sshKeyContent</span>, <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'utf-8'</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">shell</span>.<span class=\"cm-property\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">exec</span>(<span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'chmod  400 ~/.ssh/id_rsa'</span>);\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">// scp 上传不同平台的安装包</span></span></span></pre></div></div></div><p data-lake-id=\"e437d579d1dfebae0d8becf74c73dc18\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">代码可以参考&nbsp;<a href=\"https://github.com/alibaba/lightproxy/blob/develop/scripts/ci-release.js\" target=\"_blank\">https://github.com/alibaba/lightproxy/blob/develop/scripts/ci-release.js</a></p><h3 data-lake-id=\"2b7dd140e5c7bce14149a4a755780819\" id=\"FL9uI\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">自动回复</h3><p data-lake-id=\"871b93b63a12a34f08ffdd86df7609ae\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">完成了构建的上传后，我们可以用一个 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">Github</code>&nbsp;机器人自动在 PR 中回复构建后文件的 URL。</p><p data-lake-id=\"bf30a9917f018e29cbde06eb6ccafedd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"58abc69b947abeb30d0ae240e417f0f4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">Github 机器人其实就是一个单独申请的普通 Github 账号，我们可以在设置页获取到有 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">repo</code>&nbsp;操作的 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">token</code>&nbsp;。然后通过 Github API 评论 PR。</p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"fKxnH\" class=\"lake-card-margin\" data-language=\"shell\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-builtin\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">curl</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-s</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-H</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"Authorization: token 你的Token\"</span> <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-X</span> POST <span class=\"cm-attribute\" style=\"color: rgb(111, 66, 193); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-d</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">'{\"body\": \"评论内容\"}'</span> <span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\"https://api.github.com/repos/alibaba/lightproxy/issues/</span><span class=\"cm-def\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">${TRAVIS_PULL_REQUEST}</span><span class=\"cm-string\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">/comments\"</span></span></span></pre></div></div></div><p data-lake-id=\"00881b3c3b3380122c61a3887b44f638\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-9\" style=\"color: rgb(3, 47, 98); font-size: 12px;\" data-mce-style=\"font-size: 9px\"><span>这里的 </span></span><code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\"><span class=\"lake-fontsize-9\" style=\"color: rgb(3, 47, 98); font-size: 12px;\" data-mce-style=\"font-size: 9px\"><span>Token</span></span></code>&nbsp;可以用和上面同样的方式获取。</p><h3 data-lake-id=\"1a37db904a5a855b74f9fc20bce0b0e2\" id=\"AvaTY\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">其他测试构建逻辑</h3><p data-lake-id=\"8c4304a3083ff1c8ec5e196ebfba2a3e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">由于测试包一般是提供给开发者进行临时测试的，可能会有一些和平时不同的逻辑。我们可以在构建脚本中自动修改版本信息，甚至修改应用名（防止测试包覆盖原有配置）等。</p><p data-lake-id=\"4b77d3c315adf1d4064664e77ec90534\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"1c560b946c7cfde66c16a852ada59636\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">LightProxy 同时也在测试包中关闭了自动更新逻辑，方便测试者只测试指定 PR 的内容。</p><h2 data-lake-id=\"d7a9f971a45dc06fcd5bb4c1db4be7a1\" id=\"k1xCS\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">总结</h2><p data-lake-id=\"4b1f7ab0c58450d4d8fe71535e3ec07b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">借助于 Travis CI 的能力我们还能做更多的事情，例如在有 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">release tag</code>&nbsp;时自动合并到 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">release</code>&nbsp;分支，构建并且发布到 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">release</code>&nbsp;等等。目前考虑到下载速度的原因 <code style=\"font-family: monospace; font-size: inherit; background-color: rgba(0, 0, 0, 0.06); padding: 0px 2px; border: 1px solid rgba(0, 0, 0, 0.08); border-radius: 2px; line-height: inherit; overflow-wrap: break-word; text-indent: 0px;\">LightProxy</code>&nbsp;还没有这样做。</p><p data-lake-id=\"0f20f9bcb50c2baf4dc6da4b6a286763\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"35bd321904ba1dc280900a4c4ddb38ed\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">最后，欢迎来给&nbsp;<a href=\"https://github.com/alibaba/lightproxy\" target=\"_blank\">https://github.com/alibaba/lightproxy</a>&nbsp;提交 PR/Issue，或者直接在 PR 下面测试相关的改进、Fix 等~</p><h2 data-lake-id=\"5ab69c3ad3366ef3a4264c841ac9bdd3\" id=\"l6vBo\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">拓展阅读</h2><ul data-lake-id=\"329e2f069a1a7bf70fcba97c6dfce21c\" lake-indent=\"0\" style=\"list-style-type: disc; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li data-lake-id=\"06d09ce091957fcdedee1b9408a5558f\"><a href=\"https://github.com/alibaba/lightproxy\" target=\"_blank\">https://github.com/alibaba/lightproxy</a></li><li data-lake-id=\"5b553d79cd94eb2b912a878466854cab\"><a href=\"https://www.xcodebuild.com/2020/01/05/yuque/lightproxy/\" target=\"_blank\">LightProxy 全能代理抓包工具</a></li><li data-lake-id=\"18af22822e5de8b2f5962434226f6130\"><a href=\"http://www.ruanyifeng.com/blog/2017/12/travis_ci_tutorial.html\" target=\"_blank\"><span>持续集成服务 Travis CI 教程</span></a></li><li data-lake-id=\"fb9a2b5379ec6a116a47c465fa1e6d37\"><a href=\"https://docs.travis-ci.com/user/environment-variables/\" target=\"_blank\">Travis CI - Environment Variables</a></li></ul></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"c4540a56d9ac19a4e7fbfe5d28f74b50\" id=\"NAaaf\">背景</h2><p data-lake-id=\"5585cbb587a1a0601e7a019873bb11ef\"><a href=\"https://github.com/alibaba/lightproxy\" target=\"_blank\">LightProxy</a> 是基于 Electron 开发的桌面代理软件，托管在 Github 上。我们开启了 Github 的强制 Review 功能，所有提交都需要通过 Pull Reuqest 的方式由一个 Reviewer 通过才能合并进主分支。</p><p data-lake-id=\"3cd23086904b3e3657779efda963a761\"><br /></p><p data-lake-id=\"61ab45d47396ae55767fa2b98d6f4a83\">然而虽然有这样的流程，但 Review 一个 PR 的成本仍然非常的高，对于 Reviewer 来说总是把分支 <code>pull</code> 下来走完完整的 <code>Electron</code> 构建流程再手动测试非常麻烦（尤其如果手头上的机器配置比较一般的情况下）。这导致很多 PR 我们只是简单 Review 代码后就把有问题的代码合并了。</p><p data-lake-id=\"54abe954e399c8d29753b0b7ae6a639d\"><br /></p><p data-lake-id=\"a7437c0c58ad8e619d1182826eaea060\">我们希望通过自动集成服务给 LightProxy 的每个 PR 都提供自动化的构建、单元测试，甚至自动把构建结果贴到 PR 中提供测试者直接下载测试。</p><p data-lake-id=\"58cf4cfe74cba19a854044e181c37153\"><br /></p><p data-lake-id=\"2835ccae36a80b6ed41634c3f89cf084\">最后的效果大概为<span>当用户提交 PR 后，会自动出发构建，得知测试结果是否通过。同时机器人会自动把构建结果上传到临时空间，并且通过评论的方式提供给开发者下载测试。例如下图：</span></p><p data-lake-id=\"411affb8409f62d2c22280d176e6e9a2\"><span><br /></span></p><p data-lake-id=\"a23786653ef7d522db4d477d1cdaa843\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1587302177272-d414cfa6-21a9-4c66-a5b5-1cd027b137af.png%22%2C%22originWidth%22%3A1510%2C%22originHeight%22%3A800%2C%22name%22%3A%22image.png%22%2C%22size%22%3A129412%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1172.6233%2C%22y%22%3A41.683525%2C%22width%22%3A143.78880000000004%2C%22height%22%3A27.139245000000003%2C%22text%22%3A%22Collaborator%22%7D%2C%7B%22x%22%3A161.3979%2C%22y%22%3A43.02628%2C%22width%22%3A473.40556999999995%2C%22height%22%3A28.33296%2C%22text%22%3A%22xcodeduildcommented2hoursago%22%7D%2C%7B%22x%22%3A157.55504%2C%22y%22%3A132.77682%2C%22width%22%3A319.28247999999996%2C%22height%22%3A27.924380000000014%2C%22text%22%3A%22Nodescriptionprovided.%22%7D%2C%7B%22x%22%3A1224.6031%2C%22y%22%3A277.85278%2C%22width%22%3A92.64290000000005%2C%22height%22%3A27.810549999999978%2C%22text%22%3A%22Verified%22%7D%2C%7B%22x%22%3A258.92627%2C%22y%22%3A280.23895%2C%22width%22%3A223.97916000000004%2C%22height%22%3A26.384130000000027%2C%22text%22%3A%22addbuildstate%22%7D%2C%7B%22x%22%3A1368.8969%2C%22y%22%3A282.9835%2C%22width%22%3A105.12560000000008%2C%22height%22%3A23.124619999999993%2C%22text%22%3A%2242650b8%22%7D%2C%7B%22x%22%3A159.99272%2C%22y%22%3A416.07758%2C%22width%22%3A407.98148000000003%2C%22height%22%3A34.09832%2C%22text%22%3A%22ifebotcommented2hoursago%22%7D%2C%7B%22x%22%3A160.28696%2C%22y%22%3A508.58325%2C%22width%22%3A1153.24224%2C%22height%22%3A31.22741999999994%2C%22text%22%3A%22Thankstorpullrequest%2Cbuildfocommit4gddisdywwu%22%7D%2C%7B%22x%22%3A215.66713%2C%22y%22%3A582.86005%2C%22width%22%3A570.55197%2C%22height%22%3A31.746549999999957%2C%22text%22%3A%22BuildforWindows-Lightproxy-4a9d4d.exe%22%7D%2C%7B%22x%22%3A213.79713%2C%22y%22%3A630.0509%2C%22width%22%3A562.15927%2C%22height%22%3A34.27454%2C%22text%22%3A%22Buildformacos-Lightproxy-4a9d4d.dmg%22%7D%2C%7B%22x%22%3A194.03838%2C%22y%22%3A705.3325%2C%22width%22%3A498.89422%2C%22height%22%3A31.23977000000002%2C%22text%22%3A%22ThiscommentisautogeneratedbyC%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22Collaborator%20xcodeduildcommented2hoursago%20Nodescriptionprovided.%20Verified%20addbuildstate%2042650b8%20ifebotcommented2hoursago%20Thankstorpullrequest%2Cbuildfocommit4gddisdywwu%20BuildforWindows-Lightproxy-4a9d4d.exe%20Buildformacos-Lightproxy-4a9d4d.dmg%20ThiscommentisautogeneratedbyC%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A755%2C%22height%22%3A400%7D\"></card></p><h2 data-lake-id=\"11f2be849c0598b9edf0545262e3d784\" id=\"qHwFk\">Travis CI</h2><p data-lake-id=\"814920c9f9a9ed2bcb55731e67a72d30\"><a href=\"https://travis-ci.org/\" target=\"_blank\">Travis CI</a> 提供的是免费的自动集成服务，当我们在一个 PR 上提交了新的代码后，持续集成服务就会自动抓取代码，运行构建和自动化测试并且反馈结果。</p><p data-lake-id=\"6f82ba42e4e6c52f4f39e1d94a1c43f6\"><br /></p><p data-lake-id=\"d8fcbfe21c5f516f3d8cfd99a3046a7e\">这样我们每次改动代码后，就能看到运行结果是否受到影响，而不是一次性攒了很多代码后尝试合并靠手工测试。</p><p data-lake-id=\"ecd840e56baf8d8fe3afc35d07c7a004\"><br /></p><p data-lake-id=\"0c2af80e93c9f5058d921242591c7e45\">网上介绍 <code>Travis CI</code> 以及如何搭配 <code>Github</code> 使用的文章有很多，可以参考：<a href=\"http://www.ruanyifeng.com/blog/2017/12/travis_ci_tutorial.html\" target=\"_blank\">持续集成服务 Travis CI 教程</a></p><h3 data-lake-id=\"982c6088bd1e63dee76ceb4fce6e071a\" id=\"dHi6L\">.travis.yml</h3><p data-lake-id=\"47f0510a14a97195758f89fe4b56a0db\">Travis 通过 <code>.travis.yml</code> 文件进行配置，对于 LightProxy 这个项目来说主要就两点要求：</p><p data-lake-id=\"8d66e9d881c83eb3ce251931f7b13c8d\"><br /></p><ul data-lake-id=\"ba222ee1dd213a34ae11aa2c765eba7a\"><li data-lake-id=\"c5abe1475567097b61bf8ce325efa5bc\">Node.js 版本 &gt; 12</li><li data-lake-id=\"0e7a3d77633488ccc5799524af54e37f\">系统使用 macOS（因为需要构建 Mac App 必须是 macOS）</li></ul><p data-lake-id=\"1c2fe43bae66cd2c1e6848b002e0dccf\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22yaml%22%2C%22code%22%3A%22osx_image%3A%20xcode11.3%5Cn%5Cndist%3A%20trusty%5Cnsudo%3A%20false%5Cn%5Cnlanguage%3A%20node_js%5Cnnode_js%3A%20%5C%2212%5C%22%5Cn%5Cnenv%3A%5Cn%20%20global%3A%5Cn%20%20%20%20-%20ELECTRON_CACHE%3D%24HOME%2F.cache%2Felectron%5Cn%20%20%20%20-%20ELECTRON_BUILDER_CACHE%3D%24HOME%2F.cache%2Felectron-builder%5Cn%5Cnos%3A%5Cn%20%20-%20osx%5Cn%5Cncache%3A%5Cn%20%20directories%3A%5Cn%20%20-%20node_modules%5Cn%20%20-%20%24HOME%2F.cache%2Felectron%5Cn%20%20-%20%24HOME%2F.cache%2Felectron-builder%5Cn%20%20-%20%24HOME%2F.npm%2F_prebuilds%5Cn%5Cnscript%3A%5Cn%20%20-%20npm%20install%20-g%20yarn%5Cn%20%20-%20npm%20run%20install-deps%5Cn%20%20-%20npm%20run%20dist%22%2C%22margin%22%3Atrue%2C%22id%22%3A%22OhtWi%22%7D\"></card><p data-lake-id=\"a9f93ad3e3574b06c827c1dffce507bc\">这样构建部分就已经完成了，在 <code>Travis</code> 中打开 PR 的构建，用户就会在提交 PR 后看到自己的提交是否能通过构建。如果项目有单元测试的话，可以在 <code>scripts</code> 下继续增加 <code>npm run test</code> 等等。</p><h3 data-lake-id=\"63254995d6012035996437f030cfafd5\" id=\"x4DKO\">文件上传</h3><p data-lake-id=\"fb1d2082f99d632245cc8a4d483ee8a7\">构建项目以及反馈结果不困难，比较麻烦的是如何把构建后的结果上传。由于这里是临时的构建版本，不是正式 <code>release</code> ，这里没有用 <code>github release</code>  API，而是用的 <a href=\"https://sourceforge.net/\" target=\"_blank\">https://sourceforge.net/</a> 提供的免费文件托管服务。</p><p data-lake-id=\"c31641c76b127f8c5debe1e2e708aa2d\"><br /></p><p data-lake-id=\"d9fd26a66663eeab647c7108341a2b32\">SourceForge 支持通过 <code>scp</code> 上传文件，首先我们需要生成一个 <code>ssh key</code> 。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22shell%22%2C%22code%22%3A%22ssh-keygen%20-t%20rsa%20-b%204096%20-C%20%5C%22your_email%5C%22%20-f%20ci_deploy_key%20-N%20''%22%2C%22margin%22%3Atrue%2C%22id%22%3A%22jbiX9%22%7D\"></card><p data-lake-id=\"5ff56febded13a7b8583ee2df0a33edf\">然后在 <a href=\"https://sourceforge.net/auth/shell_services\" target=\"_blank\">https://sourceforge.net/auth/shell_services</a> 添加公钥 <code>ci_deploy_key.pub</code> 的内容。</p><p data-lake-id=\"c24456a1d316d0c61bbb50a49016eadf\"><br /></p><p data-lake-id=\"3151ef4d601835ae3e8a525d70f3ae1f\">我们需要从环境变量中判断当前是否在构建一个 PR（还有可能在构建一个分支），大部分的默认环境变量可以在这里找到：<a href=\"https://docs.travis-ci.com/user/environment-variables/\" target=\"_blank\">https://docs.travis-ci.com/user/environment-variables/</a>。同样的，Travis 允许我们在后台设置一些环境变量，我们也可以通过这种方式把 SSH 的私钥（<code><span>ci_deploy_key</span></code>）传递过去。</p><p data-lake-id=\"f149f6ea60eab7a62df19d4d77254ba1\"><br /></p><p data-lake-id=\"aa206be75dafdc4ab2c78974920fed37\">由于 <code>ci_deploy_key</code> 的内容是多行的，我们可以先用 <code>encodeURIComponent</code> 将其进行编码。然后在构件时通过脚本解码。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20%7B%5Cn%20%20%20%20TRAVIS_PULL_REQUEST%2C%5Cn%20%20%20%20TRAVIS_COMMIT%2C%5Cn%20%20%20%20SSH_KEY%2C%5Cn%20%20%20%20HOME%2C%5Cn%7D%20%3D%20process.env%3B%5Cnconst%20SSH_KEY_DECODE%20%3D%20decodeURIComponent(SSH_KEY)%3B%5Cn%5Cn%2F%2F%20%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E5%9C%A8%E6%9E%84%E5%BB%BA%20PR%5Cn%2F%2F%20%E6%8C%87%E5%AE%9A%20ssh%20key%5Cnfs.writeFileSync(sshFile%2C%20sshKeyContent%2C%20'utf-8')%3B%5Cn%5Cnshell.exec('chmod%20%20400%20~%2F.ssh%2Fid_rsa')%3B%5Cn%2F%2F%20scp%20%E4%B8%8A%E4%BC%A0%E4%B8%8D%E5%90%8C%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%AE%89%E8%A3%85%E5%8C%85%22%2C%22margin%22%3Atrue%2C%22id%22%3A%22TLgpO%22%7D\"></card><p data-lake-id=\"e437d579d1dfebae0d8becf74c73dc18\">代码可以参考 <a href=\"https://github.com/alibaba/lightproxy/blob/develop/scripts/ci-release.js\" target=\"_blank\">https://github.com/alibaba/lightproxy/blob/develop/scripts/ci-release.js</a></p><h3 data-lake-id=\"2b7dd140e5c7bce14149a4a755780819\" id=\"FL9uI\">自动回复</h3><p data-lake-id=\"871b93b63a12a34f08ffdd86df7609ae\">完成了构建的上传后，我们可以用一个 <code>Github</code> 机器人自动在 PR 中回复构建后文件的 URL。</p><p data-lake-id=\"bf30a9917f018e29cbde06eb6ccafedd\"><br /></p><p data-lake-id=\"58abc69b947abeb30d0ae240e417f0f4\">Github 机器人其实就是一个单独申请的普通 Github 账号，我们可以在设置页获取到有 <code>repo</code> 操作的 <code>token</code> 。然后通过 Github API 评论 PR。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22shell%22%2C%22code%22%3A%22curl%20-s%20-H%20%5C%22Authorization%3A%20token%20%E4%BD%A0%E7%9A%84Token%5C%22%20-X%20POST%20-d%20'%7B%5C%22body%5C%22%3A%20%5C%22%E8%AF%84%E8%AE%BA%E5%86%85%E5%AE%B9%5C%22%7D'%20%5C%22https%3A%2F%2Fapi.github.com%2Frepos%2Falibaba%2Flightproxy%2Fissues%2F%24%7BTRAVIS_PULL_REQUEST%7D%2Fcomments%5C%22%22%2C%22margin%22%3Atrue%2C%22id%22%3A%22fKxnH%22%7D\"></card><p data-lake-id=\"00881b3c3b3380122c61a3887b44f638\"><span class=\"lake-fontsize-9\" style=\"color: #032F62;\"><span>这里的 </span></span><code><span class=\"lake-fontsize-9\" style=\"color: #032F62;\"><span>Token</span></span></code> 可以用和上面同样的方式获取。</p><h3 data-lake-id=\"1a37db904a5a855b74f9fc20bce0b0e2\" id=\"AvaTY\">其他测试构建逻辑</h3><p data-lake-id=\"8c4304a3083ff1c8ec5e196ebfba2a3e\">由于测试包一般是提供给开发者进行临时测试的，可能会有一些和平时不同的逻辑。我们可以在构建脚本中自动修改版本信息，甚至修改应用名（防止测试包覆盖原有配置）等。</p><p data-lake-id=\"4b77d3c315adf1d4064664e77ec90534\"><br /></p><p data-lake-id=\"1c560b946c7cfde66c16a852ada59636\">LightProxy 同时也在测试包中关闭了自动更新逻辑，方便测试者只测试指定 PR 的内容。</p><h2 data-lake-id=\"d7a9f971a45dc06fcd5bb4c1db4be7a1\" id=\"k1xCS\">总结</h2><p data-lake-id=\"4b1f7ab0c58450d4d8fe71535e3ec07b\">借助于 Travis CI 的能力我们还能做更多的事情，例如在有 <code>release tag</code> 时自动合并到 <code>release</code> 分支，构建并且发布到 <code>release</code> 等等。目前考虑到下载速度的原因 <code>LightProxy</code> 还没有这样做。</p><p data-lake-id=\"0f20f9bcb50c2baf4dc6da4b6a286763\"><br /></p><p data-lake-id=\"35bd321904ba1dc280900a4c4ddb38ed\">最后，欢迎来给 <a href=\"https://github.com/alibaba/lightproxy\" target=\"_blank\">https://github.com/alibaba/lightproxy</a> 提交 PR/Issue，或者直接在 PR 下面测试相关的改进、Fix 等~</p><h2 data-lake-id=\"5ab69c3ad3366ef3a4264c841ac9bdd3\" id=\"l6vBo\">拓展阅读</h2><ul data-lake-id=\"329e2f069a1a7bf70fcba97c6dfce21c\"><li data-lake-id=\"06d09ce091957fcdedee1b9408a5558f\"><a href=\"https://github.com/alibaba/lightproxy\" target=\"_blank\">https://github.com/alibaba/lightproxy</a></li><li data-lake-id=\"5b553d79cd94eb2b912a878466854cab\"><a href=\"https://www.xcodebuild.com/2020/01/05/yuque/lightproxy/\" target=\"_blank\">LightProxy 全能代理抓包工具</a></li><li data-lake-id=\"18af22822e5de8b2f5962434226f6130\"><a href=\"http://www.ruanyifeng.com/blog/2017/12/travis_ci_tutorial.html\" target=\"_blank\"><span>持续集成服务 Travis CI 教程</span></a></li><li data-lake-id=\"fb9a2b5379ec6a116a47c465fa1e6d37\"><a href=\"https://docs.travis-ci.com/user/environment-variables/\" target=\"_blank\">Travis CI - Environment Variables</a></li></ul>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"traditional\" /><h2 data-lake-id=\"c4540a56d9ac19a4e7fbfe5d28f74b50\" id=\"NAaaf\">背景</h2><p data-lake-id=\"5585cbb587a1a0601e7a019873bb11ef\"><a href=\"https://github.com/alibaba/lightproxy\" target=\"_blank\">LightProxy</a> 是基于 Electron 开发的桌面代理软件，托管在 Github 上。我们开启了 Github 的强制 Review 功能，所有提交都需要通过 Pull Reuqest 的方式由一个 Reviewer 通过才能合并进主分支。</p><p data-lake-id=\"3cd23086904b3e3657779efda963a761\"><br /></p><p data-lake-id=\"61ab45d47396ae55767fa2b98d6f4a83\">然而虽然有这样的流程，但 Review 一个 PR 的成本仍然非常的高，对于 Reviewer 来说总是把分支 <code>pull</code> 下来走完完整的 <code>Electron</code> 构建流程再手动测试非常麻烦（尤其如果手头上的机器配置比较一般的情况下）。这导致很多 PR 我们只是简单 Review 代码后就把有问题的代码合并了。</p><p data-lake-id=\"54abe954e399c8d29753b0b7ae6a639d\"><br /></p><p data-lake-id=\"a7437c0c58ad8e619d1182826eaea060\">我们希望通过自动集成服务给 LightProxy 的每个 PR 都提供自动化的构建、单元测试，甚至自动把构建结果贴到 PR 中提供测试者直接下载测试。</p><p data-lake-id=\"58cf4cfe74cba19a854044e181c37153\"><br /></p><p data-lake-id=\"2835ccae36a80b6ed41634c3f89cf084\">最后的效果大概为<span>当用户提交 PR 后，会自动出发构建，得知测试结果是否通过。同时机器人会自动把构建结果上传到临时空间，并且通过评论的方式提供给开发者下载测试。例如下图：</span></p><p data-lake-id=\"411affb8409f62d2c22280d176e6e9a2\"><span><br /></span></p><p data-lake-id=\"a23786653ef7d522db4d477d1cdaa843\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F236311%2F1587302177272-d414cfa6-21a9-4c66-a5b5-1cd027b137af.png%22%2C%22originWidth%22%3A1510%2C%22originHeight%22%3A800%2C%22name%22%3A%22image.png%22%2C%22size%22%3A129412%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1172.6233%2C%22y%22%3A41.683525%2C%22width%22%3A143.78880000000004%2C%22height%22%3A27.139245000000003%2C%22text%22%3A%22Collaborator%22%7D%2C%7B%22x%22%3A161.3979%2C%22y%22%3A43.02628%2C%22width%22%3A473.40556999999995%2C%22height%22%3A28.33296%2C%22text%22%3A%22xcodeduildcommented2hoursago%22%7D%2C%7B%22x%22%3A157.55504%2C%22y%22%3A132.77682%2C%22width%22%3A319.28247999999996%2C%22height%22%3A27.924380000000014%2C%22text%22%3A%22Nodescriptionprovided.%22%7D%2C%7B%22x%22%3A1224.6031%2C%22y%22%3A277.85278%2C%22width%22%3A92.64290000000005%2C%22height%22%3A27.810549999999978%2C%22text%22%3A%22Verified%22%7D%2C%7B%22x%22%3A258.92627%2C%22y%22%3A280.23895%2C%22width%22%3A223.97916000000004%2C%22height%22%3A26.384130000000027%2C%22text%22%3A%22addbuildstate%22%7D%2C%7B%22x%22%3A1368.8969%2C%22y%22%3A282.9835%2C%22width%22%3A105.12560000000008%2C%22height%22%3A23.124619999999993%2C%22text%22%3A%2242650b8%22%7D%2C%7B%22x%22%3A159.99272%2C%22y%22%3A416.07758%2C%22width%22%3A407.98148000000003%2C%22height%22%3A34.09832%2C%22text%22%3A%22ifebotcommented2hoursago%22%7D%2C%7B%22x%22%3A160.28696%2C%22y%22%3A508.58325%2C%22width%22%3A1153.24224%2C%22height%22%3A31.22741999999994%2C%22text%22%3A%22Thankstorpullrequest%2Cbuildfocommit4gddisdywwu%22%7D%2C%7B%22x%22%3A215.66713%2C%22y%22%3A582.86005%2C%22width%22%3A570.55197%2C%22height%22%3A31.746549999999957%2C%22text%22%3A%22BuildforWindows-Lightproxy-4a9d4d.exe%22%7D%2C%7B%22x%22%3A213.79713%2C%22y%22%3A630.0509%2C%22width%22%3A562.15927%2C%22height%22%3A34.27454%2C%22text%22%3A%22Buildformacos-Lightproxy-4a9d4d.dmg%22%7D%2C%7B%22x%22%3A194.03838%2C%22y%22%3A705.3325%2C%22width%22%3A498.89422%2C%22height%22%3A31.23977000000002%2C%22text%22%3A%22ThiscommentisautogeneratedbyC%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22Collaborator%20xcodeduildcommented2hoursago%20Nodescriptionprovided.%20Verified%20addbuildstate%2042650b8%20ifebotcommented2hoursago%20Thankstorpullrequest%2Cbuildfocommit4gddisdywwu%20BuildforWindows-Lightproxy-4a9d4d.exe%20Buildformacos-Lightproxy-4a9d4d.dmg%20ThiscommentisautogeneratedbyC%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A755%2C%22height%22%3A400%7D\"></card></p><h2 data-lake-id=\"11f2be849c0598b9edf0545262e3d784\" id=\"qHwFk\">Travis CI</h2><p data-lake-id=\"814920c9f9a9ed2bcb55731e67a72d30\"><a href=\"https://travis-ci.org/\" target=\"_blank\">Travis CI</a> 提供的是免费的自动集成服务，当我们在一个 PR 上提交了新的代码后，持续集成服务就会自动抓取代码，运行构建和自动化测试并且反馈结果。</p><p data-lake-id=\"6f82ba42e4e6c52f4f39e1d94a1c43f6\"><br /></p><p data-lake-id=\"d8fcbfe21c5f516f3d8cfd99a3046a7e\">这样我们每次改动代码后，就能看到运行结果是否受到影响，而不是一次性攒了很多代码后尝试合并靠手工测试。</p><p data-lake-id=\"ecd840e56baf8d8fe3afc35d07c7a004\"><br /></p><p data-lake-id=\"0c2af80e93c9f5058d921242591c7e45\">网上介绍 <code>Travis CI</code> 以及如何搭配 <code>Github</code> 使用的文章有很多，可以参考：<a href=\"http://www.ruanyifeng.com/blog/2017/12/travis_ci_tutorial.html\" target=\"_blank\">持续集成服务 Travis CI 教程</a></p><h3 data-lake-id=\"982c6088bd1e63dee76ceb4fce6e071a\" id=\"dHi6L\">.travis.yml</h3><p data-lake-id=\"47f0510a14a97195758f89fe4b56a0db\">Travis 通过 <code>.travis.yml</code> 文件进行配置，对于 LightProxy 这个项目来说主要就两点要求：</p><p data-lake-id=\"8d66e9d881c83eb3ce251931f7b13c8d\"><br /></p><ul data-lake-id=\"ba222ee1dd213a34ae11aa2c765eba7a\"><li data-lake-id=\"c5abe1475567097b61bf8ce325efa5bc\">Node.js 版本 &gt; 12</li><li data-lake-id=\"0e7a3d77633488ccc5799524af54e37f\">系统使用 macOS（因为需要构建 Mac App 必须是 macOS）</li></ul><p data-lake-id=\"1c2fe43bae66cd2c1e6848b002e0dccf\"><br /></p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22yaml%22%2C%22code%22%3A%22osx_image%3A%20xcode11.3%5Cn%5Cndist%3A%20trusty%5Cnsudo%3A%20false%5Cn%5Cnlanguage%3A%20node_js%5Cnnode_js%3A%20%5C%2212%5C%22%5Cn%5Cnenv%3A%5Cn%20%20global%3A%5Cn%20%20%20%20-%20ELECTRON_CACHE%3D%24HOME%2F.cache%2Felectron%5Cn%20%20%20%20-%20ELECTRON_BUILDER_CACHE%3D%24HOME%2F.cache%2Felectron-builder%5Cn%5Cnos%3A%5Cn%20%20-%20osx%5Cn%5Cncache%3A%5Cn%20%20directories%3A%5Cn%20%20-%20node_modules%5Cn%20%20-%20%24HOME%2F.cache%2Felectron%5Cn%20%20-%20%24HOME%2F.cache%2Felectron-builder%5Cn%20%20-%20%24HOME%2F.npm%2F_prebuilds%5Cn%5Cnscript%3A%5Cn%20%20-%20npm%20install%20-g%20yarn%5Cn%20%20-%20npm%20run%20install-deps%5Cn%20%20-%20npm%20run%20dist%22%2C%22margin%22%3Atrue%2C%22id%22%3A%22OhtWi%22%7D\"></card><p data-lake-id=\"a9f93ad3e3574b06c827c1dffce507bc\">这样构建部分就已经完成了，在 <code>Travis</code> 中打开 PR 的构建，用户就会在提交 PR 后看到自己的提交是否能通过构建。如果项目有单元测试的话，可以在 <code>scripts</code> 下继续增加 <code>npm run test</code> 等等。</p><h3 data-lake-id=\"63254995d6012035996437f030cfafd5\" id=\"x4DKO\">文件上传</h3><p data-lake-id=\"fb1d2082f99d632245cc8a4d483ee8a7\">构建项目以及反馈结果不困难，比较麻烦的是如何把构建后的结果上传。由于这里是临时的构建版本，不是正式 <code>release</code> ，这里没有用 <code>github release</code>  API，而是用的 <a href=\"https://sourceforge.net/\" target=\"_blank\">https://sourceforge.net/</a> 提供的免费文件托管服务。</p><p data-lake-id=\"c31641c76b127f8c5debe1e2e708aa2d\"><br /></p><p data-lake-id=\"d9fd26a66663eeab647c7108341a2b32\">SourceForge 支持通过 <code>scp</code> 上传文件，首先我们需要生成一个 <code>ssh key</code> 。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22shell%22%2C%22code%22%3A%22ssh-keygen%20-t%20rsa%20-b%204096%20-C%20%5C%22your_email%5C%22%20-f%20ci_deploy_key%20-N%20''%22%2C%22margin%22%3Atrue%2C%22id%22%3A%22jbiX9%22%7D\"></card><p data-lake-id=\"5ff56febded13a7b8583ee2df0a33edf\">然后在 <a href=\"https://sourceforge.net/auth/shell_services\" target=\"_blank\">https://sourceforge.net/auth/shell_services</a> 添加公钥 <code>ci_deploy_key.pub</code> 的内容。</p><p data-lake-id=\"c24456a1d316d0c61bbb50a49016eadf\"><br /></p><p data-lake-id=\"3151ef4d601835ae3e8a525d70f3ae1f\">我们需要从环境变量中判断当前是否在构建一个 PR（还有可能在构建一个分支），大部分的默认环境变量可以在这里找到：<a href=\"https://docs.travis-ci.com/user/environment-variables/\" target=\"_blank\">https://docs.travis-ci.com/user/environment-variables/</a>。同样的，Travis 允许我们在后台设置一些环境变量，我们也可以通过这种方式把 SSH 的私钥（<code><span>ci_deploy_key</span></code>）传递过去。</p><p data-lake-id=\"f149f6ea60eab7a62df19d4d77254ba1\"><br /></p><p data-lake-id=\"aa206be75dafdc4ab2c78974920fed37\">由于 <code>ci_deploy_key</code> 的内容是多行的，我们可以先用 <code>encodeURIComponent</code> 将其进行编码。然后在构件时通过脚本解码。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20%7B%5Cn%20%20%20%20TRAVIS_PULL_REQUEST%2C%5Cn%20%20%20%20TRAVIS_COMMIT%2C%5Cn%20%20%20%20SSH_KEY%2C%5Cn%20%20%20%20HOME%2C%5Cn%7D%20%3D%20process.env%3B%5Cnconst%20SSH_KEY_DECODE%20%3D%20decodeURIComponent(SSH_KEY)%3B%5Cn%5Cn%2F%2F%20%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E5%9C%A8%E6%9E%84%E5%BB%BA%20PR%5Cn%2F%2F%20%E6%8C%87%E5%AE%9A%20ssh%20key%5Cnfs.writeFileSync(sshFile%2C%20sshKeyContent%2C%20'utf-8')%3B%5Cn%5Cnshell.exec('chmod%20%20400%20~%2F.ssh%2Fid_rsa')%3B%5Cn%2F%2F%20scp%20%E4%B8%8A%E4%BC%A0%E4%B8%8D%E5%90%8C%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%AE%89%E8%A3%85%E5%8C%85%22%2C%22margin%22%3Atrue%2C%22id%22%3A%22TLgpO%22%7D\"></card><p data-lake-id=\"e437d579d1dfebae0d8becf74c73dc18\">代码可以参考 <a href=\"https://github.com/alibaba/lightproxy/blob/develop/scripts/ci-release.js\" target=\"_blank\">https://github.com/alibaba/lightproxy/blob/develop/scripts/ci-release.js</a></p><h3 data-lake-id=\"2b7dd140e5c7bce14149a4a755780819\" id=\"FL9uI\">自动回复</h3><p data-lake-id=\"871b93b63a12a34f08ffdd86df7609ae\">完成了构建的上传后，我们可以用一个 <code>Github</code> 机器人自动在 PR 中回复构建后文件的 URL。</p><p data-lake-id=\"bf30a9917f018e29cbde06eb6ccafedd\"><br /></p><p data-lake-id=\"58abc69b947abeb30d0ae240e417f0f4\">Github 机器人其实就是一个单独申请的普通 Github 账号，我们可以在设置页获取到有 <code>repo</code> 操作的 <code>token</code> 。然后通过 Github API 评论 PR。</p><card type=\"block\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22shell%22%2C%22code%22%3A%22curl%20-s%20-H%20%5C%22Authorization%3A%20token%20%E4%BD%A0%E7%9A%84Token%5C%22%20-X%20POST%20-d%20'%7B%5C%22body%5C%22%3A%20%5C%22%E8%AF%84%E8%AE%BA%E5%86%85%E5%AE%B9%5C%22%7D'%20%5C%22https%3A%2F%2Fapi.github.com%2Frepos%2Falibaba%2Flightproxy%2Fissues%2F%24%7BTRAVIS_PULL_REQUEST%7D%2Fcomments%5C%22%22%2C%22margin%22%3Atrue%2C%22id%22%3A%22fKxnH%22%7D\"></card><p data-lake-id=\"00881b3c3b3380122c61a3887b44f638\"><span class=\"lake-fontsize-9\" style=\"color: #032F62;\"><span>这里的 </span></span><code><span class=\"lake-fontsize-9\" style=\"color: #032F62;\"><span>Token</span></span></code> 可以用和上面同样的方式获取。</p><h3 data-lake-id=\"1a37db904a5a855b74f9fc20bce0b0e2\" id=\"AvaTY\">其他测试构建逻辑</h3><p data-lake-id=\"8c4304a3083ff1c8ec5e196ebfba2a3e\">由于测试包一般是提供给开发者进行临时测试的，可能会有一些和平时不同的逻辑。我们可以在构建脚本中自动修改版本信息，甚至修改应用名（防止测试包覆盖原有配置）等。</p><p data-lake-id=\"4b77d3c315adf1d4064664e77ec90534\"><br /></p><p data-lake-id=\"1c560b946c7cfde66c16a852ada59636\">LightProxy 同时也在测试包中关闭了自动更新逻辑，方便测试者只测试指定 PR 的内容。</p><h2 data-lake-id=\"d7a9f971a45dc06fcd5bb4c1db4be7a1\" id=\"k1xCS\">总结</h2><p data-lake-id=\"4b1f7ab0c58450d4d8fe71535e3ec07b\">借助于 Travis CI 的能力我们还能做更多的事情，例如在有 <code>release tag</code> 时自动合并到 <code>release</code> 分支，构建并且发布到 <code>release</code> 等等。目前考虑到下载速度的原因 <code>LightProxy</code> 还没有这样做。</p><p data-lake-id=\"0f20f9bcb50c2baf4dc6da4b6a286763\"><br /></p><p data-lake-id=\"35bd321904ba1dc280900a4c4ddb38ed\">最后，欢迎来给 <a href=\"https://github.com/alibaba/lightproxy\" target=\"_blank\">https://github.com/alibaba/lightproxy</a> 提交 PR/Issue，或者直接在 PR 下面测试相关的改进、Fix 等~</p><h2 data-lake-id=\"5ab69c3ad3366ef3a4264c841ac9bdd3\" id=\"l6vBo\">拓展阅读</h2><ul data-lake-id=\"329e2f069a1a7bf70fcba97c6dfce21c\"><li data-lake-id=\"06d09ce091957fcdedee1b9408a5558f\"><a href=\"https://github.com/alibaba/lightproxy\" target=\"_blank\">https://github.com/alibaba/lightproxy</a></li><li data-lake-id=\"5b553d79cd94eb2b912a878466854cab\"><a href=\"https://www.xcodebuild.com/2020/01/05/yuque/lightproxy/\" target=\"_blank\">LightProxy 全能代理抓包工具</a></li><li data-lake-id=\"18af22822e5de8b2f5962434226f6130\"><a href=\"http://www.ruanyifeng.com/blog/2017/12/travis_ci_tutorial.html\" target=\"_blank\"><span>持续集成服务 Travis CI 教程</span></a></li><li data-lake-id=\"fb9a2b5379ec6a116a47c465fa1e6d37\"><a href=\"https://docs.travis-ci.com/user/environment-variables/\" target=\"_blank\">Travis CI - Environment Variables</a></li></ul>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2020-04-19T13:54:06.000Z",
    "deleted_at": null,
    "created_at": "2020-04-19T12:58:25.000Z",
    "updated_at": "2020-04-19T13:54:06.000Z",
    "published_at": "2020-04-19T13:54:06.000Z",
    "first_published_at": "2020-04-19T13:49:12.000Z",
    "word_count": 1397,
    "cover": "https://cdn.nlark.com/yuque/0/2020/png/236311/1587302177272-d414cfa6-21a9-4c66-a5b5-1cd027b137af.png",
    "description": "背景LightProxy 是基于 Electron 开发的桌面代理软件，托管在 Github 上。我们开启了 Github 的强制 Review 功能，所有提交都需要通过 Pull Reuqest 的方式由一个 Reviewer 通过才能合并进主分支。然而虽然有这样的流程，但 Review 一...",
    "custom_description": null,
    "_serializer": "v2.doc_detail"
  }
]